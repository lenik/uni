#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Generate local m2 module list"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] START-DIR"}

    . shlib-import cliboot
    option -o --out =FILE   "Write output to file instead of stdout"
    option -c --cache =TIMEOUT "Read from cache"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    import time
    __THIS__="$0" #`readlink -f "$0"`
    shopt -s nullglob

    out=/dev/stdout
    cache=

function setopt() {
    case "$1" in
        -o|--out)
            out="$2"
            rm -f "$out"
            ;;
        -c|--cache)
            # cache="$2"
            cache=`duration2sec $2`
            _log2 "Cache timeout: $cache seconds"
            ;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function process() {
    local dir="$1"
    local ltrim=$2
    pomfile="$dir/pom.xml"

    IFS=: read this_gid this_aid this_ver this_pack < <(pomid "$pomfile")

    dir_trim="${dir:$ltrim}"
    echo "$this_aid:$dir_trim" >>$out

    for subpom in "$dir"/*/pom.xml; do
        subdir="${subpom%/pom.xml}"
        process "$subdir" $ltrim
    done
}

function main() {
    for dir in "$@"; do
        _log2 "Modules in $dir: "

        if [ ! -f "$dir/pom.xml" ]; then
            echo "No pom.xml file in $dir"
            exit 1
        fi

        if [ -n "$cache" ]; then
            cachef="$dir/.m2modlist"
            if makeoutdated "$cachef" $cache \
                    $__THIS__ -o "$cachef" -- "$dir"; then
                cat "$cachef" >"$out"
            else
                _error "Failed to make $cachef"
            fi
        else
            process "$dir" "$(( ${#dir} + 1 ))"
        fi
    done
}

boot "$@"
