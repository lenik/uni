#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Generate local dependency table"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] DIR"}

    . shlib-import cliboot
    option -g --group-local "Ignore dependencies of different groupid"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    import loadpom
    shopt -s nullglob

    group_local=0

function setopt() {
    case "$1" in
        -g|--group-local)
            group_local=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function process() {
    local dir="$1"
    pomfile="$dir/pom.xml"

    _log2 "$dir/"

    loadpom "$pomfile" 1
    _log2 "  This pom: $project_group_id:$project_artifact_id"

    while read l; do
        k="${l%%=*}"
        v="${l#*=}"
        case "$k" in
            /project/dependencies/dependency/groupId)       d_gid="$v";;
            /project/dependencies/dependency/artifactId)    d_aid="$v";;
            /project/dependencies/dependency/version)       d_ver="$v";;
            /project/dependencies/dependency/type)          d_type="$v";;
            /project/dependencies/dependency/scope)         d_scope="$v";;
            /project/dependencies/dependency)               flush_dep;;
        esac
    done < <(xml2 <"$pomfile")

    if [ -n "$d_aid" ]; then flush_dep; fi

    for subpom in "$dir"/*/pom.xml; do
        subdir="${subpom%/pom.xml}"
        process "$subdir"
    done
}

function flush_dep() {
    if [ -n "$d_aid" ]; then
        _log2 "--    $gid:$aid:$ver:$pack"

        if [ "$group_local" = 1 ]; then
            if [ "$d_gid" != "$project_group_id" ]; then continue; fi
        fi

        echo "$project_artifact_id:$d_aid:$d_ver:$d_type:$d_scope"
    fi

    d_gid=
    d_aid=
    d_ver=
    d_type=
    d_scope=
}

function main() {
    for dir in "$@"; do
        if [ ! -f "$dir/pom.xml" ]; then
            echo "No pom.xml file in $dir"
            exit 1
        fi
        process "$dir"
    done
}

boot "$@"
