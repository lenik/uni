#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Maven project graph"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] ..."}

    . shlib-import cliboot
    option -l --local       "Draw local dependency"
    option -L --local-all   "Draw local dependency and immediate deps"
    option -C --no-cascade  "Don't cascade test-scope and optionals"
    option -D --direction =DIR "One of TB LR BT RL"
    option -E --no-external "Hide external dependencies"
    option -G --no-groupid  "Hide group id"
    option -o --omitted     "Show omitted dependencies"
    option -r --no-optional "Hide optional dependencies"
    option -p --pom         "Show pom dependencies"
    option -S --hide-scope =SCOPES "Hide specific scopes, separate scope by comma"
    option -T --no-transitive "Hide non-explicitly defined dependencies"
    option -t --title =TITLE "Set the graph title"
    option -O --output =FILE "Output to the file, in extension format"
    option -d --display     "Open the result graph file"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    GRAPH_PLUGIN=org.fusesource.mvnplugins:maven-graph-plugin
    DEFAULT_OUT=target/project-graph.png

    opts=()
    nopt=0

    localgraph=0
    localopts=

    display=
    outfile=

function setopt() {
    case "$1" in
        -l|--local)
            DEFAULT_OUT=target/local-graph.png
            localgraph=1
            localopts=-g;;
        -L|--local-all)
            DEFAULT_OUT=target/local-graph.png
            localgraph=1;;
        -C|--no-cascade)
            opts[nopt++]="-Dcascade=false";;
        -D|--direction)
            # one of: TB LR BT RL
            opts[nopt++]="-Dgraph.direction=$2";;
        -E|--no-external)
            opts[nopt++]="-Dhide-external=true";;
        -G|--no-groupid)
            opts[nopt++]="-Dhide-group-id=true";;
        -o|--omitted)
            opts[nopt++]="-Dhide-omitted=false";;
        -r|--no-optional)
            opts[nopt++]="-Dhide-optional=true";;
        -p|--pom)
            opts[nopt++]="-Dhide-poms=false";;
        -S|--hide-scope)
            opts[nopt++]="-Dhide-scope=$2";;
        -T|--no-transitive)
            opts[nopt++]="-Dhide-transitive=true";;
        -t|--title)
            opts[nopt++]="-Dgraph.label=$2";;
        -O|--output)
            opts[nopt++]="-Dgraph.target=$2"
            outfile="$2"
            ;;
        -d|--display)
            display=display;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    MVN=mvn
    if [ $LOGLEVEL -le 1 ]; then
        MVN="mvn -q"
    else
        MVN="mvn -e"
    fi

    if [ "$localgraph" = 1 ]; then
        if [ -n "$outfile" ]; then
            out="$outfile"
        else
            out="$DEFAULT_OUT"
        fi
        outdir="${out%/*}"
        if [ "$outdir" = "$out" ]; then
            ourdir=.
        else
            mkdir -p "$outdir"
        fi

        format="${out##*.}"
        if [ "$format" = "$out" ]; then format=dot; fi

        m2localdeps $localopts . | m2localgraph | dot -T$format >$out
    else
        _log2 $MVN $GRAPH_PLUGIN:project "${opts[@]}"
        $MVN $GRAPH_PLUGIN:project "${opts[@]}"
    fi

    if [ -z "$outfile" ]; then
        display $DEFAULT_OUT
    else
        if [ -n "$display" ]; then $display "$outfile"; fi
    fi
}

boot "$@"
