#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Git m2ver"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] MODULE-DIR"}

    . shlib-import cliboot
    option -t --title =TITLE "Specify the package title"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    title=

function setopt() {
    case "$1" in
        -t|--title)
            title="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ ! -d "$1" ]; then
        help
        return 1
    fi

    if [ ! -f ".usermap" ]; then
        quit "No .usermap file found in current directory."
    fi

    if [ -z "$title" ]; then
        title="${PWD##*/}"
    fi

    usermap=()
    usermapn=0
    while read id name; do
        if [ -z "$id" ] || [ -z "$name" ]; then
            continue
        fi
        usermap[usermapn++]=-u
        usermap[usermapn++]="$id=$name"
    done < .usermap

    MODULE="$1"
    RESDIR=$MODULE/src/main/resources/META-INF

    mkdir -p "$RESDIR"

    VERSION_FILE=$RESDIR/version
    CHANGELOG=$RESDIR/changelog
    VERLOG=$RESDIR/verlog

    _log1 "Generate ChangeLog from Git Log..."
    gitcl -v . >$CHANGELOG

    _log1 "Generate ChangeLog with version numbers..."
    _log2 Usermap: "${usermap[@]}"
    gitcl2 -t "$title" -r "${usermap[@]}" -m 10 -n 1 -r <$CHANGELOG >$VERLOG

    read nver _ <$VERLOG
        name="${nver%-*}"
        ver="${nver##*-}"
        _log1 Package-Name: $name
        _log1 Package-Version: $ver

    _log1 "Generate simple version file"
        echo $ver >$VERSION_FILE

    _log1 "Get total commit count"
        read LINES WORDS CHARS < <(vcscmd log-graph | wc)
        echo $LINES >>$VERSION_FILE
}

boot "$@"
