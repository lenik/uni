#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="gawphqv"
    long_opts="group-id,artifact-id,version-only,packaging,help,quiet,verbose,version"

    show_only=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Print the id defined by the .pom file"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] POM-files"
    echo
    echo "Options: "
    echo "    -g, --group-id          Show group-id only"
    echo "    -a, --artifact-id       Show artifact-id only"
    echo "    -w, --version-only      Show version only"
    echo "    -p, --packaging         Show packaging only"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -g|--group-id)
            show_only=gid;;
        -a|--artifact-id)
            show_only=aid;;
        -w|--version-only)
            show_only=ver;;
        -p|--packaging)
            show_only=pack;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    for pomfile in "$@"; do

        while read l; do
            k="${l%%=*}"
            v="${l#*=}"
            case "$k" in
                /project/groupId)           gid="$v";;
                /project/artifactId)        aid="$v";;
                /project/version)           ver="$v";;
                /project/packaging)         pack="$v";;
                /project/parent/groupId)    p_gid="$v";;
                /project/parent/artifactId) p_aid="$v";;
                /project/parent/version)    p_ver="$v";;
            esac
        done < <(xml2 <"$pomfile")

        if [ -z "$gid" ];   then gid=$p_gid; fi
        if [ -z "$ver" ];   then ver=$p_ver; fi
        if [ -z "$pack" ];  then pack=jar; fi

        if [ -n "$show_only" ]; then
            echo ${!show_only}
        else
            echo "$gid:$aid:$ver:$pack"
        fi

    done
}

boot "$@"
