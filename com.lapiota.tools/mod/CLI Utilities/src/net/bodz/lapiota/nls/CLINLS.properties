CertImport.import=import
CertImport.save=save
ConvertEncoding.decode_ff=\ dec(%.2f/%.2f)
ConvertEncoding.encode_ff=\ enc(%.2f/%.2f)
ConvertEncoding.iconv=iconv
CRCSum.5=algorithm
CRCSum.6=\ doesn't support key
CRCSum.algInfo_ss=\ \ \ \ %8s = %s\n
CRCSum.errModeOnlyVerify=err mode is meaningful only when verifying checksums
CRCSum.namedAlgs=Named Algorithms:
FileProcess.action=action:
FileProcess.enterScript=Enter the processing groovy script:
FileProcess.invalidRegexpFlag=invalid regexp flag:
FileProcess.invalidSubsRegexp=invalid subs-regexp format:
FileProcess.notSubsRegexp=not a subs-regexp:
FileReplace.regexpOrText=one and only one of --regexp and --text option must be specified
FindHash.0=from
FindHash.algIsntClonable=The algorithm isn't clonable:
FindHash.algorithms=Algorithms:
FindHash.digestInfo_sds=\ \ \ \ %16s: len=%d, %s\n
FindHash.matched=Match\!
FindHash.noAlg=\ \ \ \ Err:
FindHash.noHash=no hash specified
FindHash.range=Range:
GrepPatch._patch=[patch]
GrepPatch.badlLineNum=illegal line number '
GrepPatch.diffInOut=input and output encoding should be same
GrepPatch.grepNoFilename=invalid grep format: no filename at
GrepPatch.grepNoLineNum=invalid grep format: no line number at
MergeDirectories.ignoreKill=ignore-kill
MergeDirectories.rootWarn_s=start file %s is a root directory,which may be dangerous
MergeDirectories.same=same
MergeDirectories.sameKill=same-kill
MergeDirectories.skippedFile=skipped file
PackageFragmentsProcess.action=action
PackageFragmentsProcess.action_=action:
PackageFragmentsProcess.extension=extension:
PackageFragmentsProcess.extensionCriteria=//extension[@point="
PackageFragmentsProcess.extract=extract
PackageFragmentsProcess.grepShortHelp=Grep(REGEXP, [FILE=plugin.xml])
PackageFragmentsProcess.skipNode=skip node:
PackageFragmentsProcess.skippedDir=skipped directory
PackageFragmentsProcess.unexpected=Unexpected
PartialCopy.0=
PartialCopy.1=process
PartialCopy.2=crc.pgp
PartialCopy.dstIsntSet=dst isn't set
PartialCopy.dstIsSet=dst is already set:
PartialCopy.expr.absolute=\ \ \ \ INT             absolute position
PartialCopy.expr.addlen=\ \ \ +INT             length
PartialCopy.expr.regex=\ \ \ /REGEX[/FLAGS]   search regular expression
PartialCopy.expr.regex.bin=\ \ x/HEX/FLAGS       search binary
PartialCopy.expr.setToDef=\ \ \ \ *               set to the default value
PartialCopy.expr.sublen=\ \ \ -INT             offset to the end
PartialCopy.expr.xregex.flagExt=\ \ \ \ \ \ \ flag +/-NUM  extent to the start of match
PartialCopy.expr.xregex.flagI=\ \ \ \ \ \ \ flag i       case-insensitive
PartialCopy.exprFormat=Format of EXP:
PartialCopy.noMatchHex=no match of hex
PartialCopy.patternIsEmpty=pattern is empty
PartialCopy.pgpCrc32ShouldAligned=PGP-CRC32 is DWORD aligned
PartialCopy.REGEX=REGEX
PartialCopy.srcIsntSpecified=src isn't specified
PartialCopy.srcIsSet=src is already set:
PartialCopy.tooLong=unsupport to get crc32 from >2G block
PartialCopy.unknownFlag=unknown flag:
PGDBreak.writeTo=write to
TemplateProcess.compile=Compile:
TemplateProcess.evaluate=Evaluate:
TemplateProcess.sourceModel=source model
TemplateProcess.templateIsntSpecified=template file isn't specified
TemplateProcess.templateModel=template model
TemplateProcess.vars=Variables:
ZipMerge.__add=\ \ add
ZipMerge.add=add
ZipMerge.bytes=\ bytes,
ZipSub._to_=\ to
ZipSub.backup=backup
ZipSub.cantDelete=Can't delete
ZipSub.cantRename=Can't rename
ZipSub.copy=copy
ZipSub.entriesRemoved=\ entries have been removed.
ZipSub.noneRemoved=Nothing has been removed.
ZipSub.removed=removed
ZipSub.restSyntax=DEST-ZIP MINUS-ZIP-LIST
ZipSub.subtractFrom=subtract from:
ZipSub.total=Total
ZipSub.uniqEntries=\ uniq entries)
ZipSub.write=write
