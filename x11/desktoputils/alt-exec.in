#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] PROGRAM ARGS...}

    . shlib-import cliboot
    option -c --category =CATEGORY  "Choose a category"
    option -s --session             "Use desktop session name as the category"
    option -u --userdir             "Chdir to userdir before exec"
    option -q --quiet               "Repeat to get less info"
    option -v --verbose             "Repeat to get more info"
    option -h --help                "Show this help page"
    option    --version             "Print the version info"

    category=

    altfilename="x-alts"
    sysaltfile="@x11confdir@/$altfilename"
    useraltfile="$HOME/.$altfilename"

function setopt() {
    case "$1" in
        -c|--category)
            category="$2";;
        -s|--session)
            category=
            if [ -n "$DESKTOP_SESSION" ]; then
                category="$DESKTOP_SESSION"
            elif [ -n "$GDMSESSION" ]; then
                category="$GDMSESSION"
            fi
            if [ -z "$category" ]; then
                quit "Ops.. what is the current desktop session?"
            fi
            ;;
        -u|--userdir)
            cd "$HOME"
            ;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    _log2 "Active-Category: $category"
    program="$1"
    shift

    while true; do
        if [ -f "$sysaltfile" ]; then
            _log2 "Search program $program in $sysaltfile"
            cmdline=`search "$category" "$program" "$sysaltfile"` && break
        fi

        if [ -f "$useraltfile" ]; then
            _log2 "Search program $program in $useraltfile"
            cmdline=`search "$category" "$program" "$useraltfile"` && break
        fi

        quit "Don't know how to run program $program for category $category"
    done

    if [ -z "$cmdline" ]; then
        _log1 "Program $program for category $category is disabled"
    else
        _log1 "Found $cmdline for program $program for category $category"
        _log2 "Execute $cmdline $*"
        $cmdline "$@"
    fi
}

function search() {
    local cat="$1"
    local prog="$2"
    local altf="$3"

    while IFS=: read p c l; do
        if [ "$c" = "$cat" ] && [ "$p" = "$prog" ]; then
            echo "$l"
            return 0
        fi
    done < "$altf"
    return 1
}

boot "$@"
