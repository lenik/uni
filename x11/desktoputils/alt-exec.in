#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="c:suhqv"
    long_opts="category:,session,userdir,help,quiet,verbose,version"
    category=

    altfilename="x-alts"
    sysaltfile="@x11confdir@/$altfilename"
    useraltfile="$HOME/.$altfilename"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] "
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] PROGRAM ARGS..."
    echo
    echo "Options: "
    echo "    -c, --category=CATEGORY Choose a category"
    echo "    -s, --session           Use desktop session name as the category"
    echo "    -u, --userdir           Chdir to userdir before exec"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -c|--category)
            category="$2";;
        -s|--session)
            category=
            if [ -n "$DESKTOP_SESSION" ]; then
                category="$DESKTOP_SESSION"
            elif [ -n "$GDMSESSION" ]; then
                category="$GDMSESSION"
            fi
            if [ -z "$category" ]; then
                quit "Ops.. what is the current desktop session?"
            fi
            ;;
        -u|--userdir)
            cd "$HOME"
            ;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    _log2 "Category: $category"
    program="$1"
    shift

    while true; do
        if [ -f "$sysaltfile" ]; then
            _log2 "Search program $program in $sysaltfile"
            cmdline=`search "$category" "$program" "$sysaltfile"` && break
        fi

        if [ -f "$useraltfile" ]; then
            _log2 "Search program $program in $useraltfile"
            cmdline=`search "$category" "$program" "$useraltfile"` && break
        fi

        quit "Don't know how to run program $program for category $category"
    done

    _log2 "Found $cmdline for program $program for category $category"
    $cmdline "$@"
}

function search() {
    local cat="$1"
    local prog="$2"
    local altf="$3"

    while IFS=: read p c l; do
        if [ "$c" = "$cat" ] && [ "$p" = "$prog" ]; then
            echo "$l"
            return 0
        fi
    done < "$altf"
    return 1
}

boot "$@"
