#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}

    . shlib-import cliboot
    option --ffmpeg                     "Use ffmpeg (default)"
    option --vlc                        "Use vlc"
    option -b --bandwidth =bytesPerSec  "Specify bandwidth"
    option -s --size =SCANLINES         "Specify video size"
    option -o --outfile =FILE           "Where to save the recorded video file"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    opt_mode=ffmpeg
    opt_bw=1000
    opt_outdir=/tmp/screencap
    opt_outfile=
    opt_video_size=1920:1080

function setopt() {
    case "$1" in
        --ffmpeg)
            opt_mode=ffmpeg;;
        --vlc)
            opt_mode=vlc;;
        -b|--bandwidth)
            opt_bw="$2";;
        -s|--size)
            case "$2" in
                480*)
                    opt_video_size=640:480;;
                720*)
                    opt_video_size=1280:720;;
                1080*)
                    opt_video_size=1920:1080;;
                2160*)
                    opt_video_size=3840:2160;;
                2k)
                    opt_video_size=1920:1080;;
                4k)
                    opt_video_size=3840:2160;;
                *)
                    quit "unknown scanlines: $2";;
            esac
            ;;
        -o|--outfile)
            opt_outfile="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$opt_outfile" ]; then
        datetime=$( date +"%Y-%m-%d/%H-%M-%S" )
        date=${datetime%/*}
        time=${datetime##*/}
        opt_outdir="$opt_outdir/$date"
        if ! mkdir -p "$opt_outdir"; then
            quit "Failed to create dir $opt_outdir"
        fi
        opt_outfile="$opt_outdir/$time.mp4"
    fi

    vfilter=
    vfilter=${vfilter}croppadd{cropleft=0,croptop=0,cropright=0,cropbottom=0}

    transcode=
    transcode="${transcode}"vcodec=h264
    transcode="${transcode}",acodec=none
    transcode="${transcode}",venc="x264{scenecut=100,bframes=0,keyint=10}"
    transcode="${transcode}",vb=2000,scale=0.5
    #transcode="${transcode}",vfilter="$vfilter"

    dst="$opt_outfile"
    #more=":duplicate{dst=std{mux=mp4,access=file,dst=\"$dst\"}}"
    more=":std{access=file,mux=mp4,dst=\"$dst\"}"

    #play /usr/share/sounds/KDE-Sys-App-Positive.ogg

    if [ $opt_mode = ffmpeg ]; then
        _log1 "Recording $opt_outfile"
        ffmpeg -y -v error \
                -f alsa -ac 1 \
                -i default \
                -video_size $opt_video_size \
                -framerate 30 \
                -f x11grab -i :0.0+0,0 \
                -vf scale=1920:1080 \
                "$opt_outfile"
    else
        #vlc \
        vlc -I dummy \
            screen:// \
            :screen-fps=50 \
            :screen-follow-mouse \
            :sout="#transcode{$transcode}$more"
    fi
}

boot "$@"
