#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=Add xrandr mode by geom size}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] <width> <height> [<refresh>]}

    . shlib-import cliboot
    option -o --output =OUTPUT  "See xrandr for the output list"
    option -m --mode-name =NAME "Specify a mode name"
    option -r --remove          "Reset existing mode with the same name"
    option -c --cvt             "Using VESA CVT mode lines (default)"
    option -g --gtf             "Using VESA GTF mode lines"
    option -q --quiet           "Repeat to get less info"
    option -v --verbose         "Repeat to get more info"
    option -h --help            "Show this help page"
    option    --version         "Print the version info"

    VESA=cvt

    output=
    mode_name=
    refresh=
    remove=

function setopt() {
    case "$1" in
        -o|--output)
            output="$2";;
        -m|--mode-name)
            mode_name="$2";;
        -r|--remove)
            remove=1;;
        -c|--cvt)
            VESA=cvt;;
        -g|--gtf)
            VESA=gtf;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    width=$1
    height=$2
    refresh=$3

    [ -n "$output" ]  || quit "Output device isn't specified. "
    [ -n "$width" ]   || quit "Width isn't specified. "
    [ -n "$height" ]  || quit "Height isn't specified. "
    [ -n "$refresh" ] || refresh=60

    read -a spec < <($VESA $width $height $refresh | grep Modeline)

    [ -n "$mode_name" ] || mode_name="${spec[1]}"
    # shift ("Modeline", mode-name)
    spec=("${spec[@]:2}")

    if [ "$remove" = 1 ]; then
        _log1 "Delete mode $mode_name from $output"
        xrandr --delmode "$output" "$mode_name"

        _log1 "Remove mode $mode_name"
        xrandr --rmmode "$mode_name"
    fi

    _log1 "Create new mode $mode_name: ${spec[@]}"
    xrandr --output "$output"  --newmode "$mode_name" "${spec[@]}"

    _log1 "Add mode $mode_name to $output"
    xrandr --addmode "$output" "$mode_name"
}

boot "$@"
