#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] "
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    read geom _ < <(xrandr -q --verbose | grep '+preferred') \
        || quit "Failed to get preferred resolution from xrandr"

    if [ "$geom" = "${geom/x}" ]; then
        _quit "Bad geom spec: $geom"
    fi

    res_x=${geom%x*}
    res_y=${geom##*x}
    _log2 "Preferred resolution: $res_x * $res_y"

    for scale in 1 2 3; do
        x=$((res_x * scale / 4))
        y=$((res_y * scale / 4))
        read _modeline mode line < <(cvt ${x} ${y} | grep -v '^#') \
            || quit "Failed to get modeline from cvt utility"

        _log2 "Add modeline: $mode = $line"
        xrandr --newmode "$mode" $line
        xrandr --addmode VGA1 "$mode"
    done
}

boot "$@"
