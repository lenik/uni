#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Make up Live CD"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] [CDROM] [ROOT]"}

    . shlib-import cliboot
    option -c --cdrom =DIR  "CD image contents"
    option -r --root =DIR   "Root dir to be packed into squashfs"
    option -o --out =FILE.iso "The .iso output path"
    option -C --iso-only    "Just create the .iso file"
    option -c --force       "Force to overwrite existing output file"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    shopt -s nullglob

    force=
    cleanup=1
    cdrom=
    root=
    out=
    label="Ubuntu Live CD"
    iso_only=

function version_more() {
    echo
    echo "This tool is following the tutorial: "
    echo "    http://www.debuntu.org/how-to-customize-your-ubuntu-live-cd"
}

function setopt() {
    case "$1" in
        -c|--cdrom)
            cdrom="$2";;
        -r|--root)
            root="$2";;
        -o|--out)
            out="$2";;
        -C|--iso-only)
            iso_only=1;;
        -f|--force)
            force=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    if [ -n "$1" ]; then
        cdrom="$1"
        shift
    fi
    if [ -n "$1" ]; then
        root="$1"
        shift
    fi
    cdrom="${cdrom%/}"
    root="${root%/}"

    if [ -z "$cdrom" ]; then
        echo "CDROM dir isn't specified. "
        exit 1
    fi
    if [ ! -d "$cdrom" ]; then
        echo "CDROM dir isn't existed: $cdrom"
        exit 1
    fi

    if [ -z "$root" ]; then
        echo "Root dir isn't specified. "
        exit 1
    fi
    if [ ! -d "$root" ]; then
        echo "Root dir isn't existed: $root"
        exit 1
    fi

    if [ -f "$out" ] && [ "$force" != 1 ]; then
        echo  "Output file is already existed, specify f to overwrite. "
        exit 1
    fi

    if [ "$iso_only" != 1 ]; then

        _log1 "chmod +w for $cdrom/"
        sudo chmod -R +w "$cdrom"

        if [ "$cleanup" = 1 ]; then
            _log1 Clean up...
            sudo rm -fr "$root/tmp/"*
            sudo rm -vf "$root/etc/hosts"
            sudo rm -vf "$root/etc/resolv.conf"

            sudo umount "$root/proc/"
            sudo umount "$root/sys/"
        fi

        for x in "$root/boot/vmlinuz-"* "$root/boot/initrd.img-"*; do
            base="${x##*/}"
            case "$base" in
                vmlinuz-*)
                    dst="$cdrom/casper/vmlinuz"
                    _log1 "Move out $base to $dst"
                    sudo mv -f "$x" "$dst"
                    ;;
                initrd.*)
                    dst="$cdrom/casper/initrd.lz"
                    sudo sh -c "gunzip -c '$x' | lzma >'$dst'"
                    sudo rm "$x"
                    ;;
            esac
        done

        manifest="$cdrom/casper/filesystem.manifest"
        _log1 "Update $manifest"
            sudo chroot "$root" dpkg-query -Wf '${Package} ${Version}\n' >"$manifest"
            sudo cp -v "$manifest" "$manifest-desktop"

        _log1 "Recreate squashfs image..."
        sudo mksquashfs "$root" "$cdrom/casper/filesystem.squashfs" -noappend

    fi

    _log1 "Recalculate checksum..."
    (cd "$cdrom" && sudo find . -type f -print0 \
        | sudo xargs -0 md5sum >md5sum.txt)

    if [ -z "$out" ]; then
        out="$cdrom"
        out="${out%/}"
        out="$out.iso"
    fi
    _log1 "Create the ISO image: $out"
    sudo genisoimage \
        -rational-rock \
        -volid "$label" \
        -b "isolinux/isolinux.bin" \
        -c "isolinux/boot.cat" \
        -cache-inodes \
        -joliet \
        -full-iso9660-filenames \
        -no-emul-boot \
        -boot-load-size 4 \
        -boot-info-table \
        -o "$out" \
        "$cdrom"
}

boot "$@"
