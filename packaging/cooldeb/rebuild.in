#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Rebuild the .deb archive and dput if succeed"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] PACKAGE-DIR"}

    . shlib-import cliboot
    option -i --incr                "Increase debian/changelog version"
    option -D --distribution =DIST  "Set distribution name"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    import overrides

    shopt -s nullglob

    incr=0; [ -f debian/changelog ] || incr=1
    distribution=testing

function setopt() {
    case "$1" in
        -i|--incr)
            incr=1;;
        -D|--distribution)
            distribution="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ ! -f configure ]; then
        reconf=1
        if ! autoreconf2 -is; then
            exit 1
        fi
    fi

    [ -f Makefile ] || makelook=1
    if ! makelook -p /usr -i DEBIAN; then
        exit 2
    fi

    # edit the changelog
    # if ! ver=`maketestvar PACKAGE_VERSION`; then
    #     _error "Don't know the version, no Makefile variable. " >&2
    #     exit 4
    # fi

    dh_add_missing debian/

    # increase debian version by debian/changelog
    if [ "$incr" = 1 ]; then
        dh_incr -D "$distribution"
    fi

    if ! debuild --no-tgz-check; then
        exit 3
    fi

    debnames=()
    debver=
        while read debname; do
            # xjl-cooldeb_0.1.5-1_all.deb
            debnames=("${debnames[@]}" "$debname")

            _no_arch="${debname%_*}"
            [ "$_no_arch" = "$debname" ] && quit "Illegal deb file name: $debname"

            _ver="${_no_arch##*_}"
            [ "$_ver" = "$_no_arch" ] && quit "Illegal deb file name: $debname"

            if [ -z "$debver" ]; then
                debver="$_ver"
            else
                if [ "$debver" != "$_ver" ]; then
                    quit "Multiple .deb files in different versions: $debver, $_ver"
                fi
            fi
        done < <(dh_debname)

        [ -n "$debver" ] || quit "Can't determine the .deb file version"

    # Or, read the control file?..
    pkgname="${PWD##*/}"
        _log1 "Dput: ${debnames[*]}"
        chprefix="../${pkgname}_${debver}"
        for ch in "$chprefix"_*.changes; do
            _log1 "Commit changes: $ch"

            # swapox: remove "override entry" in stderr.
            swapox dput -f bodz "$ch" |
                swapox grep -v "override entry"
        done

    echo

    if [ "$reconf" = 1 ]; then
        autounconf
    fi

    _log1 Done.
}

boot "$@"
