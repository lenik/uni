#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Refresh/Build local Debian packages, which are changed"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] PACKAGE-DIR..."}

    . shlib-import cliboot
    option -d --vcs-diff    "Refresh changed packages in working checkout"
    option -u --vcs-update  "Refresh packages will be updated by VCS"
    option -U --unconf      "Do autounconf before builds"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    vcs_diff=
    vcs_update=
    unconf=

function setopt() {
    case "$1" in
        -d|--vcs-diff)
            vcs_diff=1;;
        -u|--vcs-update)
            vcs_update=1;;
        -U|--unconf)
            unconf=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function debof() {
    local d="$1"
    while [ -n "$d" ]; do
        if [ -f "$d/debian/control" ]; then
            echo "$d"
            return 0
        fi
        [ "$d" = "${d/\/}" ] && break
        d="${d%/*}"
    done
}

function main() {
    list=`tempfile`
    _log1 "Prepare all package names to be rebuild in $list"

    [ "$vcs_update" = 1 ] && vcscmd slupdate >>$list
    [ "$vcs_diff"   = 1 ] && vcscmd slist | cut -c9- >>$list
    echoln "$@" >>$list

    packages=`tempfile`
    grep -v changelog "$list" \
        | while read f; do
            echo `debof "$f$"`
            done \
        | sort -u \
        >$packages
    rm -f $list

    _log1 "Refresh packages: "
    while IFS='|' read p; do
        _log2 "    $p"
    done <$packages

    if [ "$unconf" = 1 ]; then
        _log1 "Cleanup autoconf files before build"
        eachdir -s "$packages" autounconf
    fi

    _log1 "Updated packages:"
    while read pkg; do
        _log1 "    $pkg"
    done <"$packages"

    _log1 "Start build of each package"
    eachdir -vs "$packages" rebuild -i

    _log1 "End of all builds"
    rm -f $packages
}

boot "$@"
