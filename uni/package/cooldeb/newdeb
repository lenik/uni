#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id$'
    short_opts="apsfhqv"
    long_opts="autotools,prepost,scm,force,help,quiet,verbose,version"

    import overrides

    autotools=
    prepost=
    versioned=
    force=

    stashed=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Create new (original) Debian package"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] PACKAGE-NAME"
    echo
    echo "Options: "
    echo "    -a, --autotools         by means of autotools"
    echo "    -p, --prepost           with post-install/pre-remove support"
    echo "    -s, --scm               do initial commit with SCM/VCS"
    echo "    -f, --force             force to overwrite existing dir"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -a|--autotools)
            autotools=1;;
        -p|--prepost)
            prepost=1;;
        -s|--scm)
            versioned=1;;
        -f|--force)
            force=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    trap exit_clean EXIT

    [ -z "$1" ] && die "PACKAGE-NAME isn't specified. "
    [ -n "${1//[0-9a-zA-Z\-_]}" ] && die "Invalid package name: $1"

    name=$1
    if [ -d "$name" ] && [ "$force" != 1 ]; then
        die "Directory $name/ is already existed. "
        exit 1
    fi
    _log1 "Create new Debian package: $name"
    mkdir $name || die "Failed to create $name/"

    if [ "$versioned" = 1 ]; then
        _log1 "Checking version system used..."
        if ! vcscmd sys; then
            echo "Current directory isn't versioned. "
            exit 1
        fi

        if vcscmd stash 2>/dev/null; then
            _log2 "Stashed away current changes"
            stashed=1
        fi

        vcscmd add $name
        vcscmd ignore add $name '*.gz'
    fi

    _log2 "Enter $name/"
    cd $name || die "Failed to chdir to $name/"

    if [ "$autotools" = 1 ]; then
        _log1 "Create initial configurations for autotools"
        autoinit || die "autoinit failed. "
    else
        _log1 "Initialize version (only)"
        verinit || die "verinit failed. "
    fi
    _log2 "Increase the initial minor version"
    vercomp -i minor


    if [ "$autotools" = 1 ] && [ "$prepost" = 1 ]; then
        _log1 "Create pre/post scripts for autotools"

        for pf in postinst.in prerm.in; do
            echo "#!/bin/sh" >$pf
            echo "# master-file" >>$pf
            echo "" >>$pf
            echo "echo \"$name - $pf ...\"" >>$pf
        done
        chmod a+x p*.in

        cat <<EOT >>Makefile.am
setup_SCRIPTS = \\
    postinst \\
    prerm

EXTRA_DIST = \\
    postinst.in \\
    prerm.in

CLEANFILES = \${setup_SCRIPTS}

%: %.in Makefile
	\$(do_subst) <\$< >\$@
	chmod -w "\$@"
EOT
    fi

    if [ "$versioned" = 1 ]; then
        _log1 "Add the fundamental files to VCS"
        vcscmd add *
    fi

    _log1 "Invoke dh_make with dirname renamed to -ver (temporary)"
    . dh_make-autover --createorig

    _log1 "Remove any -*.orig backups generated by dh_make"
    # if [ "$keep_orig" != 1 ]; then
    rm -fR ../$name-0.*.orig

    _log1 "Prepare files for debian/"
    cd debian
        if [ "$prepost" = 1 ]; then
            _log2 "    Prepare prerm/postinst"

            mv postinst.ex postinst
            mv prerm.ex    prerm

            line=`grepl "configure)" postinst`
            sedit postinst sh -c "head -$line; \
                echo \"        /usr/share/setup/$name/postinst\"; \
                cat"

            line=`grepl "remove|.*)" prerm`
            sedit prerm sh -c "head -$line; \
                echo \"        /usr/share/setup/$name/prerm\"; \
                cat"

            _log3 "    Make prerm/postinst executable"
            chmod a+x postinst prerm
        fi

        vi control

        if [ -d source ]; then
            _log3 "    Remove unused source/"
            # source/quilt is not used.
            rm -fr source/
        fi

        _log2 "Leave $name/"
        cd ..

    _log1 "Fill debian/control with uni-specific values"
    autofill-control

    if [ "$versioned" = 1 ]; then
        _log1 "Prepare to commit debian/"

        _log2 "    Add special files under debian/ to VCS"
        vcscmd add-dir debian

        _log2 "    Ignore debian/* by default. "
        vcscmd ignore add debian '*'

        _log2 "    Add fundamental debian/ control files"
        vcscmd add debian/control
        vcscmd add debian/postinst
        vcscmd add debian/prerm
        vcscmd add debian/docs

        _log2 "    Commit the initial version"
        read -p "Commit now? "
        if [ "$REPLY" = y ]; then
            vcscmd commit -m "$name package created by newdeb"
        fi
    fi

    if [ "$autotools" = 1 ]; then
        _log1 "Initial build with autotools"
        autoreconf2 -is
        makelook
    fi
}

function exit_clean() {
    if [ "$stashed" = 1 ]; then
        _log2 "Restore stash"
        vcscmd stash pop
    fi
}

boot "$@"
