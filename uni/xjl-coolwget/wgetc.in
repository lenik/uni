#!/bin/bash

# master-file

    RCSID='$Id: bash.sh 1427 2010-08-25 04:39:31Z lenik $'
    short_opts="fhqv"
    long_opts="force,help,quiet,verbose,version"
    . /usr/lib/bash/cliboot

    if ! WGET=`which wget-sid`; then
        WGET=wget
    fi
    CACHEDIR=@cachedir@
    CACHEDB=$CACHEDIR/cache.db
    force=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] wget with cache support"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] URL(s)"
    echo
    echo "Options: "
    echo "    -f, --force             invalidate the correspond cache"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -f|--force)
            force=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    if [ ! -d $CACHEDIR ]; then
        _log1 "Create cache dir $CACHEDIR"
        install -d -m 2777 $CACHEDIR
    fi

    if [ $LOGLEVEL -ge 2 ]; then
        WGET="$WGET -v"
    elif [ $LOGLEVEL -le 0 ]; then
        WGET="$WGET -q"
    fi

    for url in "$@"; do

        read md5 _ < <(echo "$url" | md5sum)

        path="$url"
        if [ "${path/:\/\/}" != "$path" ]; then
            path="${path#*://}"
            if [ "${path/\/}" = "$path" ]; then
                path=/
            else
                path="${path#*/}"
            fi
        fi
        path="${path%%\?*}"
        path="${path%%#*}"

        ext="${path##*.}"
        if [ "$ext" = "$path" ]; then
            ext=
        else
            ext=".$ext"
        fi

        hashname="$md5$ext"
        hashfile="@cachedir@/$hashname"

        if [ "$force" = 1 ]; then
            rm -f "$hashfile"
        fi

        if [ -f "$hashfile" ]; then
            _log1 "Cache hit."
        else
            if ! $WGET -O "$hashfile" "$url" ; then
                echo "wget failed. " >&2
                exit 1
            else
                chmod a+rX "$hashfile"
            fi
            lineconf "$CACHEDB" $md5 "$md5 $url"
        fi

        echo "$hashfile"
    done
}

boot "$@"
