#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="aO:cpihqv"
    long_opts="all,outdir:,control,postinst,install,help,quiet,verbose,version"

    __DIR__="${0%/*}"

    WINETRICKS="$__DIR__/winetricks"
    if [ ! "$WINETRICKS" ]; then
        WINETRICKS=winetricks
    fi

    all=
    outdir=.
    cmd=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Generate packages.control file for winetricks"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -a, --all               Include pseudo packages"
    echo "    -O, --outdir=DIR        Output directory"
    echo "    -c, --control           Generate packages list used by control file"
    echo "    -p, --postinst          Generate postinst files in outdir"
    echo "    -i, --install           Generate install files in outdir"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -a|--all)
            all=1;;
        -O|--outdir)
            outdir="$2";;
        -c|--control)
            cmd=generate-control;;
        -p|--postinst)
            cmd=generate-postinst;;
        -i|--install)
            cmd=generate-install;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    section=header

    while read pkg desc; do
        if [ "$pkg" = 'Packages:' ]; then
            section=list
            continue
        fi
        if [ "$pkg" = 'Pseudopackages:' ]; then
            if [ -z "$all" ]; then
                break
            else
                continue
            fi
        fi

        if [ "$section" != 'list' ]; then
            continue
        fi

        if [ "$pkg" != "${pkg/=}" ]; then # skip xxx=yyy packages
            continue
        fi

        _log2 "[$pkg] $desc"

        upkg="winetricks-${pkg//[^A-Za-z0-9]/-}"
        upkg=`lc -e $upkg`

        case "$cmd" in
        generate-control)
            echo "Package: $upkg"
            echo "Architecture: all"
            echo "Depends: winetricks"
            echo "Description: $desc"
            echo
            ;;

        generate-postinst)
            postinstf="$outdir/$upkg.postinst"
            echo "#!/bin/sh -e" >"$postinstf"
            echo "winetricks \"$pkg\"" >>"$postinstf"
            ;;

        generate-install)
            installf="$outdir/$upkg.install"
            echo >"$installf"
            ;;

        esac
    done < <(LANG=C "$WINETRICKS" -h)

}

boot "$@"
