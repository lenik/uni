#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 2141 2010-12-13 06:15:26Z lenik $'
    short_opts="p:hqv"
    long_opts="part:,help,quiet,verbose,version"

    part=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Get byte offset of each partition in a disk"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] DISK"
    echo
    echo "Options: "
    echo "    -p, --part=INDEX        Show offset of specific partition (1-based)"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -p|--part)
            part="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# = 0 ]; then
        die "No disk specified. "
    fi

    unit=512

    for dev in "$@"; do
        ndev=${#dev}
        # -d: dump
        LANG=C sfdisk -d "$dev" | while IFS=: read key line; do
            if [ "${key:0:1}" = '#' ]; then continue; fi
            if [ -z "$key" ]; then continue; fi

            if [ "$key" = unit ]; then
                # assert $line = sectors
                continue
            fi

            index="${key:$ndev}"
            index="${index% }"
            if [ -n "$part" ] && [ "$part" != "$index" ]; then
                continue
            fi

            line="${line#*start=}"
            line="${line%%,*}"
            start="${line// }"
            if [ -z "$start" ]; then continue; fi

            offset=$((start * unit))
            if [ -z "$part" ]; then
                echo Partition[$index] $offset
            else
                echo $offset
            fi
        done
    done
}

boot "$@"
