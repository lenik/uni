#!/bin/bash
    . shlib-import cliboot

    shopt -s nullglob
    # shopt -s dotglob

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="ln:Lfhqv"
    long_opts="list,name:,follow,force,help,quiet,verbose,version"

    list=
    symlinks=
    force=

    keep_name=.keep

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Keep empty directories from ignored by Git"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -l, --list              List only, don't change anything"
    echo "    -n, --name=NAME         Specify a name other then $keep_name"
    echo "    -L, --follow            Follow symlinks"
    echo "    -H, --follow-args       Follow symlinks for arguments only"
    echo "    -f, --force             Force update all $keep_name files"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -l|--list)
            list=1;;
        -n|--name)
            keep_name="$2";;
        -L|--follow)
            symlinks=follow;;
        -H|--follow-args)
            symlinks=follow-args;;
        -f|--force)
            force=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# = 0 ]; then
        _log1 "Scan empty directories under current directory"
        scan .
    else
        for d in "$@"; do
            [ -d "$d" ] || die "Not a directory: $d"

            if [ -L "$d" ] && [ -z "$symlinks" ]; then
                _warn "Ignored symlink: $d"
                continue
            fi

            _log1 "Scan empty directories under $d"
            scan "$d"
        done
    fi
}

function scan() {
    local d="$1"

    child=("$d"/*)
    case ${#child} in
        0)
            _log1 "  Found empty directory: $d"
            hold "$d"
            ;;
        1)
            if [ "$child" = "$keep_name" ]; then
                if [ "$force" = 1 ]; then
                    hold "$d"
                fi
            fi
            ;;
    esac

    for subdir in "$d"/*/; do
        subdir="${subdir%/}"
        [ -L "$d" ] && [ "$symlinks" != 'follow' ] && continue

        _log3 "    Scan recursive into $subdir"
        scan "$subdir"
    done
}

function hold() {
    [ "$list" = 1 ] && return 0
    local kf="$1/$keep_name"
    echo "This file is used to keep the directory from be ignored, or be pruned. " >"$kf"
    echo "Please don't this file. " >>"$kf"
}

boot "$@"
