#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id$'
    short_opts="a:p:hqv"
    long_opts="all-authz:,prefix:,help,quiet,verbose,version"

    g_authz=
    prefixes=("")
    nprefix=1

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Update authz from current version of repo"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] REPOS"
    echo
    echo "Options: "
    echo "    -a, --all-authz=FILE    All repos shares one authz file"
    echo "    -p, --prefix=PREFIX     Add prefix dir (can be multiple)"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -a|--all-authz)
            g_authz="$2";;
        -p|--prefix)
            prefix="${2%/}"
            prefixes[nprefix++]="$2/";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -n "$g_authz" ]; then
        g_dir="${g_authz%/*}"
        header="$g_dir/authz.header"

        echo "# All-in-one authz file generated by $0" >"$g_authz"
        echo "# Any changement may be lost in future generation" >>"$g_authz"

        if [ -f "$header" ]; then
            cat "$header" >>"$g_authz"
        fi
        echo -e "\n# -------------------------------------\n" >>"$g_authz"
    fi

    for repo in "$@"; do
        repo="${repo%/}"
        if [ ! -f "$repo/format" ]; then continue; fi

        repo_base="${repo%/*}"
        _log1 "For repository $repo ($repo_base)"

        if [ -n "$g_authz" ]; then
            authz="$g_authz"
        else
            authz="$repo/conf/authz"
            echo "# Generated by $0" >"$authz"
            echo "# Any changement may be lost in future generation" >>"$authz"
            if [ -f "$repo/conf/authz.header" ]; then
                cat "$repo/conf/authz.header" >>"$authz"
            fi
            echo -e "\n# -------------------------------------\n" >>"$authz"
        fi

        # repo_url=file://`readlink -f "$repo"`
        while read zf; do
            dir="${zf%.authz}"
            dir="${dir%/}"
            _log2 "    + /$dir"

            if [ -n "$g_authz" ]; then
                for prefix in "${prefixes[@]}"; do
                    echo "[$prefix$repo_base:/$dir]" >>"$authz"
                    svnlook cat "$repo" "$zf" >>"$authz"
                done
            else
                echo "[/$dir]" >>"$authz"
                svnlook cat "$repo" "$zf" >>"$authz"
            fi

            echo >>"$authz"
        done < <(svnlook --full-paths tree "$repo" | grep '\.authz$')
    done
}

boot "$@"
