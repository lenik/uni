#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="p:o:hqv"
    long_opts="partition:,mountopts,,quiet,verbose,version"

    partition=1
    mountopts=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Mount a partition in a disk image file"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] file.img mount-point"
    echo
    echo "Options: "
    echo "    -p, --partition=index   Partition other then the first to mount (1-based)"
    echo "    -o, --mountopts=options Options passed to mount -o"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -p|--partition)
            partition=$2;;
        -o|--mountopts)
            mountopts="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# != 2 ]; then
        echo "both device-image and mount-point is required. "
        exit 1
    fi

    img="$1"
    mpoint="$2"

    if [ ! -f "$img" ]; then
        echo "Device image file isn't existed: $img"
        exit 1
    fi

    if [ ! -d "$mpoint" ]; then
        echo "Mount-point $mpoint/ isn't existed. "
        exit 1
    fi

    namelen=${#img}

    while read partnam _col str; do
        if [ "$_col" != ':' ]; then continue; fi

        start="${str##*start=}"
        if [ "$start" == "$str" ]; then continue; fi
        start="${start%%,*}"
        start_sect="${start// }"
        start_off=$((start_sect * 512))

        _log2 "found partition $partnam (+$start)"
        partnum=${partnam:namelen}
        if [ $partnum != $partition ]; then
            continue
        fi
        _log1 "partition $partnam matched."

        break
    done < <(sfdisk -d "$img")

    if [ "$partnum" != $partition ]; then
        echo "Partition isn't existed: $partition" >&2
        exit 1
    fi

    _log2 "Get next available loop device"
    if ! loopdev=`losetup -f`; then
        echo "No available loop device. " >&2
        exit 1
    fi

    _log1 "Attach loop device $loopdev to $img (+$start_off)"
    if ! losetup -o $start_off $loopdev "$img"; then
        echo "losetup failed: $?" >&2
        exit 1
    fi

    mount=(mount)
    nmount=1
    if [ -n "$mountopts" ]; then
        mount[nmount++]=-o
        mount[nmount++]="$mountopts"
    fi
    mount[nmount++]=$loopdev
    mount[nmount++]="$mpoint"

    _log2 "${mount[@]}"
    if ! "${mount[@]}"; then
        echo "mount failed: $?"
        _log2 "Detach loop device from image file: $loopdev"
        losetup -d $loopdev
    fi
}

boot "$@"
