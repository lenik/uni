#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 2255 2011-01-01 06:58:58Z lenik $'
    short_opts="ir:c:Chqv"
    long_opts="info,row:,column:,center,help,quiet,verbose,version"

    row=
    column=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Switch workspace"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -i, --info              Show workspace info"
    echo "    -r, --row=ROW           The row of workspace to switch to"
    echo "    -c, --column=COLUMN     The column of workspace to switch to"
    echo "    -C, --center            Move to the center workspace"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -i|--info)
            echo "$rows rows, $columns columns"
            exit 0
            ;;
        -r|--row)
            row="$2"
            [ -n "${row//[0-9]}" ] && die "Row must be a number"
            if [ $row -lt 0 ] || [ $row -ge $rows ]; then
                die "Row $row out of range(0..$((rows-1)))"
            fi
            ;;
        -c|--column)
            column="$2"
            [ -n "${column//[0-9]}" ] && die "Column must be a number"
            if [ $column -lt 0 ] || [ $column -ge $columns ]; then
                die "Column $column out of range(0..$((columns-1)))"
            fi
            ;;
        -C|--center)
            row=$((rows / 2))
            column=$((columns / 2))
            ;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function probe() {
    read desktop_id _ast \
        DG_ geometry \
        VP_ viewport \
        WA_ wa_off wa_size \
        title \
        < <(LANG=C wmctrl -d | grep '*')

    geom_w=${geometry%x*}
    geom_h=${geometry#*x}

# The workarea size isn't accurate, because the top/bottom panel is excluded.
    viewport_w=${wa_size%x*}
    viewport_h=${wa_size#*x}

    rows=$((geom_w / viewport_w))
    columns=$((geom_h / viewport_h))

# Fix the viewport size
    viewport_w=$((geom_w / rows))
    viewport_h=$((geom_h / columns))
}

function main() {
    [ -z "$row" ]    && die "Row isn't specified. "
    [ -z "$column" ] && die "Column isn't specified. "

    view_x=$((viewport_w * column))
    view_y=$((viewport_h * row))

    wmctrl -o $view_x,$view_y
}

probe
boot "$@"
