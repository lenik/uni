#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 1769 2010-09-21 07:32:29Z lenik $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Check depends-consistency for a given list of packages"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] PACKAGES..."
    echo
    echo "Options: "
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function check() {
    local f=$1
    shift

    for n in "$@"; do
        _log2 "  check $n"
        if ! grep -q "^$n\$" $f; then
            echo "  Bad-Ref: $n ($package)"
        fi
    done
}

function main() {

    listf=`tempfile`
    sortf=`tempfile`

    _log1 "Collect package names"
    apt-cache pkgnames >$listf
    for p in "$@"; do
        p=${p%/}
        if [ ! -d "$p" ]; then
            echo "Package directory doesn't exist: $p"
            exit 1
        fi
        base=${p##*/}
        echo "$base" >>$listf
    done

    for p in "$@"; do
        p=${p%/}
        _log2 "  Collect provides of $p"
        pushd "$p" >/dev/null
            dh_package_field -l >>$listf
            dh_package_field -l | while read p; do
                dh_package_field -p $p -s Provides >>$listf
            done
        popd >/dev/null
    done
    sort -u $listf >$sortf

    _log1 "Packages in all: " `wc -l $sortf | cut -d\  -f1`

    for package in "$@"; do
        package=${package%/}
        _log1 "Package $package"

        pushd "$package" >/dev/null

        check $sortf `dh_package_field -s Depends`
        check $sortf `dh_package_field -s Recommends`

        popd >/dev/null
    done

    rm -f $listf
    rm -f $sortf
}

boot "$@"
