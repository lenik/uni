#!/bin/bash
    RCSID='$Id: bash.sh 1427 2010-08-25 04:39:31Z lenik $'
    short_opts="apsfhqv"
    long_opts="autotools,prepost,svn,help,quiet,verbose,version"
    . shlib import cliboot

    import overrides

    autotools=
    prepost=
    versioned=
    force=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Create new (original) Debian package"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] PACKAGE-NAME"
    echo
    echo "Options: "
    echo "    -a, --autotools         by means of autotools"
    echo "    -p, --prepost           with post-install/pre-remove support"
    echo "    -s, --svn               do initial commit with svn"
    echo "    -f, --force             force to overwrite existing dir"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -a|--autotools)
            autotools=1;;
        -p|--prepost)
            prepost=1;;
        -s|--svn)
            versioned=1;;
        -f|--force)
            force=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$1" ]; then
        echo "PACKAGE-NAME isn't specified. "
        exit 1
    fi

    if [ -n "${1//[0-9a-zA-Z\-_]}" ]; then
        echo "Invalid package name: $1"
        exit 1
    fi
    name=$1

    if [ -d "$name" ] && [ "$force" != 1 ]; then
        echo "Directory $name/ is already existed. "
        exit 1
    fi
    mkdir $name

    if [ "$versioned" = 1 ]; then
        if ! svn info >/dev/null 2>&1; then
            echo "Current directory isn't versioned. "
            exit 1
        fi

        svn add $name
    fi

    cd $name
    if [ "$autotools" = 1 ]; then
        autoinit
        vercomp -i minor
    else
        verinit
    fi

    if [ "$prepost" = 1 ]; then

        if [ "$autotools" = 1 ]; then
            for pf in postinst.in prerm.in; do
                echo "#!/bin/sh" >$pf
                echo "# master-file" >>$pf
                echo "" >>$pf
                echo "echo \"$name - $pf ...\"" >>$pf
            done
            chmod a+x p*.in

            cat <<EOT >>Makefile.am
setup_SCRIPTS = \\
    postinst \\
    prerm

EXTRA_DIST = \\
    postinst.in \\
    prerm.in

CLEANFILES = \${setup_SCRIPTS}

%: %.in Makefile
    \$(do_subst) <\$< >\$@
EOT

        fi #autotools
    fi #prepost

    if [ "$versioned" = 1 ]; then
        svn add *
    fi

    . dh_make-autover --createorig

    cd debian
        if [ "$prepost" = 1 ]; then
            mv postinst.ex postinst
            mv prerm.ex    prerm

            line=`grepl "configure)" postinst`
            sedit postinst sh -c "head -$line; \
                echo \"        /usr/share/setup/$name/postinst\"; \
                cat"

            line=`grepl "remove|.*)" prerm`
            sedit prerm sh -c "head -$line; \
                echo \"        /usr/share/setup/$name/prerm\"; \
                cat"

            chmod a+x postinst prerm
        fi

        vi control
        cd ..


    if [ "$versioned" = 1 ]; then
        _log2 "Add special files under debian/ to svn"
        svn add --depth empty debian

        # ignore debian/* by default.
        svn ps svn:ignore '*' debian

        svn add debian/control
        svn add debian/postinst
        svn add debian/prerm
        svn add debian/docs

        _log2 "Commit the initial version"
        svn ci -m "Initial by newdeb"
    fi

    if [ "$autotools" = 1 ]; then
        autoreconf2 -is
        makelook
    fi
}

boot "$@"
