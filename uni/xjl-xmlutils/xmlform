#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: bash.sh 2141 2010-12-13 06:15:26Z lenik $'
    short_opts="i:tl:hqv"
    long_opts="indent:,tab,width:,help,quiet,verbose,version"

    indent=4
    tabonly=
    width=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] XML file reformatter tool"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
    echo
    echo "This tool is based on xmlindent(1) utility by Pekka Enberg & Thomas Fischer."
    echo
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] FILE.xml ..."
    echo
    echo "Options: "
    echo "    -i, --indent=INDENT     Indent level, default 4"
    echo "    -t, --tab               Use tabs instead of spaces for indent"
    echo "    -l, --width=MAXCOLS     Maximum columns for line wrapping"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -i|--indent)
            indent=$2;;
        -t|--tab)
            tab=1;;
        -l|--width)
            width=$2;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    opts=()
    nopt=0

    if [ -n "$indent" ]; then
        opts[nopt++]=-i
        opts[nopt++]=$indent
    fi

    if [ "$tab" = 1 ]; then
        opts[nopt++]=-t
    fi

    if [ -n "$width" ]; then
        opts[nopt++]=-l
        opts[nopt++]=$width
    fi

    for f in "$@"; do
        _log2 "Process $f"
        sedit "$f" xmlindent "${opts[@]}"
    done
}

boot "$@"
