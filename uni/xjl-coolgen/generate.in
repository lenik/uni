#!/bin/bash

# master-file

    RCSID='$Id: bash.sh -1   $'
    short_opts="D:t:hqv"
    long_opts="define,template,help,quiet,verbose,version"
    . /usr/lib/bash/cliboot

    template=
    self="${0##*/}"
    if [ "${self:0:4}" = "gen-" ]; then
        template="${self:4}"
    fi

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Generate new file from template"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ... FILES"
    echo
    echo "Options: "
    echo "    -D, --define=KEY=VALUE  redefine variables"
    echo "    -t, --template=TNAME    specifiy the template to use"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -D|--define)
            k="$2"
            if [ "${k%=*}" = "$k" ]; then
                v=
            else
                v="${k#*=}"
                k="${k%%=*}"
            fi
            # _log1 "define $k = $v"
            eval "_DefVar_$k=\"$v\"";;
        -t|--template)
            template="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$template" ]; then
        echo "Template is unknown. "
        help
        exit 1
    fi

    templatefile=
    if [ -f "$template" ]; then
        templatefile="$template"
    else
        for t in @templatesdir@/$template @templatesdir@/$template.*; do
            if [ -f "$t" ]; then
                templatefile="$t"
                break
            fi
        done
    fi

    if [ -z "$templatefile" ]; then
        echo "Cannot instantiate template $template: no template file. "
        exit 2
    fi

    sed_args=()
    sed_i=0
    while IFS== read k v; do
        k=${k#_DefVar_}
        v="${v//\\/\\\\}"
        v="${v//\//\\\/}"

        sed_args[$sed_i]=-e
        ((sed_i++))

        sed_args[$sed_i]="s/@$k@/$v/g"
        ((sed_i++))
    done < <(set | grep '^_DefVar_')

    if [ $# = 0 ]; then
        sed "${sed_args[@]}" -e 's/@__FILE__@/-/g' <$templatefile
    else
        for f in "$@"; do
            echo "Write $f..."
            filev="${f//\//\\\/}"
            sed "${sed_args[@]}" -e "s/@__FILE__@/$filev/g" <$templatefile >$f
        done
    fi
    return 0
}

boot "$@"
