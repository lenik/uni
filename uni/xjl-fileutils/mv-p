#!/usr/bin/perl

=head1 NAME

mv-p - Rename with parents

=cut
use strict;
use vars qw($LOGNAME $LOGLEVEL);
use cmt::log(2);
    $LOGNAME    = 'mv-p'; # $0 =~ /([^\/\\.]+)(?:\.\w+)*$/;
use cmt::path('path_split');
use cmt::vcs('parse_id');
    my %RCSID   = parse_id('$Id$');
use File::Path('mkpath');
use Getopt::Long;

sub _main; sub _version; sub _help;
sub mkdir_p;
sub rmdir_p;

our $opt_dryrun = 0;
our $opt_force = 0;
our $opt_regex;

sub _boot {
    GetOptions('q|quiet'        => sub { $LOGLEVEL-- },
               'v|verbose'      => sub { $LOGLEVEL++ },
               'version'        => sub { _version; exit 0 },
               'h|help'         => sub { _help; exit 0 },
               'n|no-act'       => \$opt_dryrun,
               'f|force'        => \$opt_force,
               )
        or exit(1);
    $opt_regex = shift @ARGV;
    _main;
}

=head1 SYNOPSIS

B<mv-p>
    S<[ B<-q> | B<--quiet> ]>
    S<[ B<-v> | B<--verbose> ]>
    S<[ B<-h> | B<--help> ]>
    S<[ B<--version> ]>
    S<[ B<--> ]>
    S<[ I<...the rest of arguments...> ]>

=head1 DESCRIPTION

B<mv-p> is a WHAT used for WHAT. It HOW-WORKS.

BACKGROUND-PROBLEM.

HOW-mv-p-RESOLVES.

=head1 OPTIONS

=over 8

=item B<-m> | B<--my-option>

...

=item B<-q> | B<--quiet>

Repeat this option to suppress unimportant information to display.

=item B<-v> | B<--verbose>

Repeat this option to display more detailed information.

=item B<-h> | B<--help>

Display a breif help page and exit(0).

=item B<--version>

Display a short version information and exit(0).

=back

=head1 EXAMPLES

=over 4

=item Show help

    mv-p --help

=back

=head1 ENVIRONMENT

=over 8

=item TEMP, TMP

TEMP(or TMP, if $TEMP directory isn't existed) directory used to create
temporary files.

=back

=cut
sub _help {
    &_version;
    print "\nSyntax: \n    $0 [OPTION] [--] PERL-SUBST [FILES]\n", <<'EOM';

Common options:
    -n, --no-act            Just print what to do
    -f, --force             Overwrite existing files
    -q, --quiet             Repeat to get less info
    -v, --verbose           Repeat to get more info
    -h, --help              Show this help page
        --version           Print the version info
EOM
}

exit (_boot or 0);

sub _main {
    my $warns = 0;
    my $errors = 0;

    if (! @ARGV) {
        _log2 "Read filenames from stdin";
        @ARGV = <STDIN>;
        chop(@ARGV);
    }

    for (@ARGV) {
        my $old = $_;
        eval $opt_regex;
        die $@ if $@;
        if ($old eq $_) {
            _log2 "Skip $_";
        } elsif (-e $_ and ! $opt_force) {
            print STDERR "Warning: file $_ is already existed, skipped";
            $warns++;
        } else {
            _log1 "Rename $old to $_";
            if (! $opt_dryrun) {
                mkdir_p($_);
                if (rename($old, $_)) {
                    rmdir_p($old);
                } else {
                    print STDERR "Error: can't rename file $old to $_";
                    $errors++;
                }
            }
        }
    }

    my $exit = 0;
    $exit++ if $warns;
    $exit++ if $errors;
    return $exit;
}

=head1 DIAGNOSTICS

(No Information)

=cut
# (HELPER FUNCTIONS)

=head1 HACKING

(No Information)

=cut
# (MODULE FUNCTIONS)
sub mkdir_p {
    my $path = shift;
    my ($parent, $base) = path_split($path);
    if (! -d $parent) {
        _log2 "Create parent: $parent";
        if (! mkpath($parent)) {
            print STDERR "Failed to create parent $parent";
        }
    }
}

sub rmdir_p {
    my $path = shift;
    my ($parent, $base) = path_split($path);
    while (-d $parent) {
        if (rmdir $parent) {
            _log2 "  Removed $parent";
        } else {
            last;
        }
        $path = $parent;
        ($parent, $base) = path_split($path);
    }
}

=head1 HISTORY

=over

=item 0.x

The initial version.

=back

=cut
sub _version {
    print "[$LOGNAME] Rename with parents \n";
    print "Written by Lenik,  Version 0.$RCSID{rev},  Last updated at $RCSID{date}\n";
}

=head1 SEE ALSO

The L<cmt/"Perl_simple_cli_program_template">

=head1 AUTHOR

lenik <lenik (at) bodz.net>

=cut
