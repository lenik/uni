#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id$'
    short_opts="f:C:g:x:hqv"
    long_opts="list-file:,chdir:,glob:,exclude:,help,quiet,verbose,version"

    LOGLEVEL=0

    chdir=
    glob='*'
    listfile=
    exclude=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Execute commands in each dir"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] COMMAND ARGS"
    echo
    echo "Options: "
    echo "    -f, --list-file=FILE    read dirs from given file, instead of *"
    echo "                            if FILE is '-', then read from stdin."
    echo "    -C, --chdir=DIR         chdir to DIR before enum dirs"
    echo "    -g, --glob=GLOB         glob pattern to list dirs (default *)"
    echo "    -x, --exclude=PATTERN   simple regex to exclude"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -f|--list-file)
            listfile="$2";;
        -C|--chdir)
            chdir="$2";;
        -g|--glob)
            glob="$2";;
        -x|--exclude)
            exclude="$2";;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -n "$chdir" ]; then
        if ! cd $chdir; then
            echo "Can't chdir to $chdir" >&2
            exit 1
        fi
    fi

    if [ -z "$listfile" ]; then
        doclean=1
        listfile=/tmp/eachdir-$$-$RANDOM
        ls -d1 $glob/ >$listfile
    elif [ "$listfile" = '-' ]; then
        listfile=/dev/stdin
    fi

    while read dir; do
        _log1 "$dir: "
        if ! cd $dir; then
            _log2 "    Failed to enter $dir, skipped"
            continue
        fi

        args=()
        i=0
        for arg in "$@"; do
            arg="${arg//'{}'/$dir}"
            args[i]="$arg"
            ((i++))
        done

        bash -c "${args[*]}"

        cd ..
    done <$listfile

    if [ "$doclean" = 1 ]; then
        rm -f $listfile
    fi
}

boot "$@"
