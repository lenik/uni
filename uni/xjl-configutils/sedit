#!/bin/bash
    RCSID='$Id$'
    short_opts="ci:datmognehqv"
    long_opts="stdout,replace,diff,keep-all,keep-mode,keep-time,keep-owner,keep-group,dry-run,edit-status,help,quiet,verbose,version"
    . shlib import cliboot

    tee_output=
    replace="{}"
    diff=
    keep_mode=1
    keep_owner=
    keep_group=
    keep_time=
    dry_run=
    edit_status=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] In-place edit in stream manner"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -c, --stdout            tee to stdout also"
    echo "    -i, --replace=str       replace occurences of str in ARGS to FILE"
    echo "    -d, --diff              output the diff"
    echo "    -a, --keep-all          try to keep all attributes"
    echo "    -t, --keep-time         keep last-mod-time unchanged"
    echo "    -m, --keep-mode         keep file permission mode unchanged"
    echo "    -o, --keep-owner        keep file owner unchanged"
    echo "    -g, --keep-group        keep file group unchanged"
    echo "    -n, --dry-run           just for test, don't save the result"
    echo "    -e, --edit-status       exit true(0) if anything changed"
    echo "    -q, --quiet             repeat to get less info"
    echo "    -v, --verbose           repeat to get more info"
    echo "    -h, --help              show this help page"
    echo "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -c|--stdout)
            tee_stdout=1;;
        -i|--replace)
            if [ -z "$2" ]; then
                replace="{}"
            else
                replace="$2"
            fi
            ;;
        -d|--diff)
            diff="diff -u";;
        -a|--keep-all)
            keep_time=1
            keep_mode=1
            keep_owner=1
            keep_group=1
            ;;
        -t|--keep-time)
            keep_time=1;;
        -m|--keep-mode)
            keep_mode=1;;
        -o|--keep-owner)
            keep_owner=1;;
        -g|--keep-group)
            keep_group=1;;
        -n|--dry-run)
            dry_run=1;;
        -e|--edit-status)
            edit_status=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# -lt 2 ]; then
        echo "$0 [OPTIONS] FILE COMMAND [ARGS...]"
        return 1
    fi

    file="$1"
    shift

    # keep file extension, maybe some program need it.
    buff="/tmp/sedit-`basename $file`.$$"

    if [ -z "$replace" ]; then
        cmdl=("$@")
    else
        cmdl=()
        i=0
        for arg in "$@"; do
            cmdl[$i]="${arg/$replace/$file}"
            ((i++))
        done
    fi

    if [ "$tee_stdout" = 1 ]; then
        "${cmdl[@]}" <"$file" | tee "$buff"
    else
        "${cmdl[@]}" <"$file" >"$buff"
    fi

    err=$?

    cmp -s "$file" "$buff"
    # 0 if same, 1 if diff
    dirty=$?

    if [ $dirty != 0 ]; then
        # contents changed
        if [ -n "$diff" ]; then
            $diff "$file" "$buff"
        fi

        if [ -z "$dry_run" ]; then

            if [ "$keep_time" = 1 ]; then
                touch --reference "$file" "$buff"
            fi

            if [ "$keep_mode" = 1 ]; then
                chmod --reference "$file" "$buff"
            fi

            if [ "$keep_owner" = 1 ]; then
                chown --reference "$file" "$buff"
            fi

            if [ "$keep_group" = 1 ]; then
                chgrp --reference "$file" "$buff"
            fi

            # overwrite self
            mv -f "$buff" "$file"
        fi
    fi

    rm -f "$buff"

    if [ "$edit_status" = 1 ]; then
        return "$((! dirty))"
    else
        return $err
    fi
}

boot "$@"
