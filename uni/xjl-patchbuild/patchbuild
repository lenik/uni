#!/bin/bash
    . shlib-import cliboot
    shopt -s nullglob

    RCSID='$Id: bash.sh 2141 2010-12-13 06:15:26Z lenik $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Rebuild debian package with automatic personal patch management"
    echo "Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    [ -n "$1" ] || die "No package name specified"
    package="$1"

    vers=("$package-"*/)
    if [ ${#vers[@]}  = 0 ]; then
        _log1 "Get source of $package"
        apt-get source "$package" || die "Failed to get source"
        vers=("$package-"*/)
        [ ${#vers[@]} = 0 ] && die "Unexpected: no source code directory found for $package"
    fi

    nvers=${#vers[@]}
    latest="${vers[nvers-1]}"
    latest="${latest%/}"
    _log1 "Working on $latest"

    cd "$latest" || die "Can't chdir into $latest. "

    sudo apt-get build-dep "$package" \
        || die "Can't get build dependencies for $package. "

    # Get the root dir of personal patch repo
    ppconf="$HOME/.personal_patch_conf"
    if [ ! -f "$ppconf" ]; then
        echo "You need to config personal patch repository settings"
        echo "A new empty config file is created for you. "
        echo "See $ppconf (5)"
        echo "PPCONF_HOME=~/.patches/" >"$ppconf"
        exit 1
    fi

    # Environ settings
    _log2 "Sourcing $ppconf..."
    source "$ppconf"

    PPCONF_HOME="${PPCONF_HOME%/}"
        [ -z "$PPCONF_HOME" ] && die "Variable PPCONF_HOME isn't initialized"
        [ -d "$PPCONF_HOME" ] || die "Personal patch repository home isn't existed: $PPCONF_HOME"

    PPDIR="$PPCONF_HOME/$package"
    _log1 "Using Personal patch directory: $PPDIR"

    PPSYS=$PPCONF_SYSTEM
        [ -z "$PPSYS" ] && PPSYS=quilt
        grep -q "dpatch" debian/rules && PPSYS=dpatch
        _log1 "Set patch system to $PPSYS"

        PPLIST=
        case "$PPSYS" in
            dpatch)
                PPLIST=00list;;
            quilt)
                PPLIST=series;;
            *)
                die "Unsupported patch system: $PPSYS"
                ;;
        esac
        listfile="debian/patches/$PPLIST"

    if [ ! -d debian/patches ]; then
        echo "No patch system defined for $package, create a default one"
        mkdir debian/patches
    fi

    # Search & copy to debian/patches
    _log1 "Search personal patches for $package"
    tmplist=`tempfile`
    [ -f "$listfile" ] && cat "$listfile" >$tmplist

    for p in "$PPDIR/"*; do
        pbase="${p##*/}"
        if [ "$pbase" = "version" ]; then continue; fi
        if [ "${pbase:0:1}" = . ]; then continue; fi

        pname="${pbase%.*}"
        _log1 "    Add Patch $pname"
        cp -f "$p" debian/patches/
        echo "$pbase" >>$tmplist
    done
    sort -u $tmplist >"$listfile"

    # Build the package
    _log1 "Increase version number"
    dh_incr || die "Failed to increase version number"

    _log1 "Build the debian package"
    dpkg-buildpackage || die "Failed to build the package"

    _log1 "Dput to dlocal"
    dput -f dlocal "$package"_*.changes

    _log1 "Refresh package status"
    sudo aptitude update

    _log1 "Upgrade system"
    sudo apt-get dist-upgrade
}

boot "$@"
