#!/bin/bash
    . shlib-import cliboot
    import loadpom

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="echqv"
    long_opts="eclipse,commit,help,quiet,verbose,version"

    eclipse=
    commit=

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Generate a new Maven2 module"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] <artifactId> <display-name> [<default-package>]"
    echo
    echo "Options: "
    echo "    -e, --eclipse           Generate eclipse project"
    echo "    -c, --commit            Commit to VCS"
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -e|--eclipse)
            eclipse=1;;
        -c|--commit)
            commit=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# -lt 2 ]; then
        help
        exit 1
    fi

    if [ ! -f pom.xml ]; then
        echo "No pom.xml file in current directory." >&2
        exit 1
    fi
    loadpom pom.xml

    group_id=$project_group_id

    echo "Parent: $parent_group_id:$parent_artifact_id:$parent_version"

    module_id="$1"
    module_name="$2"
    module_package="$3"

    if [ -z "$module_package" ]; then
        group_suffix=${parent_group_id##*.}
        module_prefix=${module_id%%-*}
        module_suffix=${module_id#*-}

        if [ "$group_suffix" = "$module_prefix" ]; then
            module_package="$parent_group_id.$module_suffix"
        else
            module_package="$parent_group_id.$module_id"
        fi

        module_package="${module_package//-/.}"
    fi

    module_group_id=$parent_group_id
    module_version=0.0.1-SNAPSHOT

    _log1 "New module: $module_group_id:$module_id:$module_version"
    _log1 "Package:    $module_package"

    module_dir="$module_id"
    mkdir $module_dir
    cat <<EOM >$module_dir/pom.xml
<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>$parent_group_id</groupId>
        <artifactId>$parent_artifact_id</artifactId>
        <version>$parent_version</version>
    </parent>
    <artifactId>$module_id</artifactId>
    <version>$module_version</version>
    <dependencies />
    <name>$module_name</name>
</project>
EOM

    pkgdir="${module_package//.//}"
    mkdir -p $module_dir/src/main/java/$pkgdir
    mkdir -p $module_dir/src/main/resources/$pkgdir
    mkdir -p $module_dir/src/test/java/$pkgdir
    mkdir -p $module_dir/src/test/resources/$pkgdir

    if [ "$eclipse" = 1 ]; then
        (cd $module_dir
        mvn eclipse:m2eclipse
        )
    fi

    if [ "$commit" = 1 ]; then
        vcs ignore add .project
        vcs ignore add .classpath
        vcs ignore add .settings
        vcs ignore add target
        vcs add $module_dir
    fi
}

boot "$@"
