#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=xz-image shell}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}

    . shlib-import cliboot
    option -i --image-only      "Don't mount any partition"
    option    --subshell        "(internal use) Launch a sub-shell."
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    image_only=0
    fn=wrapper

function setopt() {
    case "$1" in
        -i|--image-only)
            image_only=1;;
        --subshell)
            fn=shell;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    case "$fn" in
        wrapper)
            [ -f "$1" ] || quit "Not a file: $1"
            XZ_FILE="$1"

            cmdl=( "$PROGRAM_PATH" )
            if [ "$image_only" = 1 ]; then
                cmdl=( "${cmdl[@]}" --image-only )
            fi
            for ((i = 1; i < $LOGLEVEL; i++)); do
                cmdl=( "${cmdl[@]}" -v )
            done
            cmdl=( "${cmdl[@]}" --subshell '$nbd' )

            _log2 "nbdkit run cmd: ${cmdl[*]}"
            nbdkit --run "${cmdl[*]}" xz file="$XZ_FILE"
            ;;

        shell)
            s="$1"
            protocol="${s%%:*}"
            s="${s#*:}"
            host="${s%%:*}"
            s="${s#*:}"
            port="$s"
            dev=/dev/nbd0

            _log2 "nbd-client $host $port $dev"
            nbd-client $host $port $dev
            _log2 "Device: $dev"

            workdir=
            olddir=
            mps=()
            if [ "$image_only" != 1 ]; then
                workdir=`mktemp -d`
                olddir="$PWD"
                cd "$workdir"

                i=0
                while read s; do
                    off="${s#*] }"
                    [ $off = 0 ] && continue
                    _log2 "Partition $i offset: $off"
                    mp="$workdir/partition$i"
                    mps=( "${mps[@]}" "$mp" )
                    mkdir "$mp"
                    _log2 mount -o offset=$off "$dev" "$mp"
                    mount -o offset=$off "$dev" "$mp"
                    (( i++ ))
                done < <(partoffset "$dev")
            fi

            echo "Enter Ctrl-D to exit the working shell, and do the clean ups."
            bash

            if [ -n "$workdir" ]; then
                for mp in "${mps[@]}"; do
                    _log2 umount "$mp"
                    umount "$mp"
                    rmdir "$mp"
                done

                cd "$olddir"
                rmdir "$workdir"
            fi

            _log2 "nbd-client -d $dev"
            nbd-client -d $dev
            ;;
    esac
}

boot "$@"
