#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}
    
    . shlib-import cliboot strfn
    option -r --recursive   "Recursively"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    recursive=

function setopt() {
    case "$1" in
        -r|--recursive)
            recursive=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    shopt -s nullglob dotglob

    local queue=("$@")

    while [ ${#queue[@]} -gt 0 ]; do
        f="${queue[0]%/}"

        dir="${f%/*}"
        base="${f##*/}"
        if [ "$dir" = "$f" ]; then
            dir=.
            base="$f"
        fi
        
        lower=$(tolower "$base")

        if [ "$lower" = "$base" ]; then
            # pop from the stack.
            queue=("${queue[@]:1}")

            if [ "$recursive" = 1 ]; then
                [ -d "$f" ] || continue
                [ -L "$f" ] && continue

                case "$base" in
                    .git)
                        continue;;
                esac

                # child files with capital letters.
                clst=()
                nlst=0
                for child in "$f"/*[[:upper:]]*; do
                    if [ -f "$child" ]; then
                        clst[nlst++]="$child"
                    fi
                done
                queue=("${clst[@]}" "${queue[@]}")

                # all child dirs.
                queue=("$f"/*/ "${queue[@]}")
            fi
        else
            _log1 "Rename $f to $dir/$lower"
            tmp="$f.~$RANDOM~"
            mv "$f" "$tmp"
            mv "$tmp" "$dir/$lower"

            queue[0]="$dir/$lower"
        fi
    done
}

boot "$@"

