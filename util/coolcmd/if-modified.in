#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=Trigger command on file changes}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] FILE COMMAND...}

    . shlib-import cliboot
    option -b --banner =STRING "Display banner and user provided string"
    option -t --test-time =TIME "File's last-modified time to test"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    import echo-raw
    import echo-fill

    banner=
    test_time=

function setopt() {
    case "$1" in
        -b|--banner)
            banner="$2";;
        -t|--test-time)
            test_time="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    # Workarounds for:
    #       Temporary file remove/create fix
    #       Temporary file rename/restore fix
    #       Shell interpretor: Text file busy fix
    sleepenh 0.01 >/dev/null

    file="$1"
    # caused by temporary removing maybe.
    if [ ! -e "$file" ]; then
        _warn "File isn't existed: $file"
        exit 1
    fi
    shift

    file_date=`stat -c%Y "$file"`
    if [ "$file_date" = "$test_time" ]; then
        _log2 "Not modified, quit"
        exit 1
    else
        _log2 "File date $file_date is different to $test_time"
    fi

    [ -n "$banner" ] && echo-fill "[42mFile Version[47m $banner[m" +13 M '-'
    "$@"
    [ -n "$banner" ] && echo-fill '' +0 L '- '
}

boot "$@"
