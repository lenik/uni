#!/bin/bash

    if [ $# -lt 2 ]; then
        echo "loop <interval> <cmd-line>..."
        return 1
    fi

    _interval="$1"
    shift

    _cmd=$1

    if _a=$( alias $_cmd 2>/dev/null ); then
        _a="${_a#*=}"
        _cmd=$( eval "echo $_a" )
    fi

    shift
    _index=0
    _PAD='------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------'

    _t0=`date +%s.%N`
    _t0s=${_t0%.*}
    _t0n=1${_t0#*.}

    while true; do
        ((_index++))

        _cols=`tput cols`

        _t1=`date +%s.%N`
        _t1s=${_t1%.*}
        _t1n=1${_t1#*.}
        _dts=$(( _t1s - _t0s - 1 ))
        _dtn=$(( 1000000000 + _t1n - _t0n ))
        if [ $_dtn -ge 1000000000 ]; then
            (( _dts++ ))
            (( _dtn -= 1000000000 ))
        fi

        _dtn=000000000$_dtn
        _dtn="${_dtn: -9}"

        _ts=$(date +'%Y-%m-%d %H:%M:%S')
        _dt=$(date -u +'%H:%M:%S.%N' -d "@$_dts.$_dtn")

        _title="[42m $_index [47m $_ts [42m ~ [47m $_dt[m"
        _ntitle=$(( ${#_title} + 2 - 23 ))
        _halfpad=$(( (_cols - _ntitle) / 2 ))
        if [ $_halfpad -gt 0 ]; then
            _line="${_PAD:0:_halfpad} $_title ${_PAD:0:_cols - _ntitle - _halfpad}"
        else
            _line="$_title"
        fi
        echo "$_line"
        . settermtitle "L($_interval:$_index) $_cmd"

        eval $_cmd "$@"

        # echo "${_PAD:0:_cols}"
        sleepenh $_interval >/dev/null
    done
