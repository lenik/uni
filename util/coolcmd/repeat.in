#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=Repeat commands}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] COMMAND...}

    . shlib-import cliboot
    option -s --session =NAME       "The name of the repeat session"
    option -i --interval =NUM       "How many seconds to wait each time"
    option -c --check-cmd =CMDLINE  "Check changes from the command's output"
    option -T --temp-dir =DIR       "Specify another temporary dir instead of $TMP"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    import echo-raw
    import echo-fill

    session=$$
    counter=0
    interval=1
    cc_cmd=
    temp_dir="${TMP:-/tmp}"

function setopt() {
    case "$1" in
        -i|--interval)
            interval="$2";;
        -c|--check-cmd)
            cc_cmd="$2";;
        -T|--temp-dir)
            temp_dir="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function mktemp() {
    tempfile -d "$temp_dir" -p 'session-'
}

function main() {
    cc_out="$temp_dir/session-$session.chk"

    [ $LOGLEVEL -ge 1 ] && echo-fill "Session-Start: $session" +0 M '---'

    while true; do
        ((counter++))

        if [ "$term_fx" = 1 ]; then
            . settermtitle "L($session:$counter) $_cmd"
        fi

        [ $LOGLEVEL -ge 1 ] && echo-fill "[42mLoop Iteration[47m $counter[m" +13 M '- '

        "$@"

        [ $LOGLEVEL -ge 1 ] && echo-fill '' +0 L '_'

        if [ -n "$interval" ]; then
            sleep $interval
        fi

        if [ -n "$cc_cmd" ]; then
            cc_tmp=`mktemp`
            while true; do
                if ! sh -c "$cc_cmd" >$cc_tmp 2>&1; then
                    cat $cc_tmp >&2
                    rm -f $cc_tmp
                    quit "Check command failed"
                fi

                if [ ! -f "$cc_out" ]; then
                    cp -f "$cc_tmp" "$cc_out"
                    diff_status=0
                else
                    if [ $LOGLEVEL -ge 2 ]; then
                        diff -Nu $cc_out $cc_tmp
                    else
                        diff -Nq $cc_out $cc_tmp >/dev/null
                    fi
                    diff_status=$?
                fi

                if [ $diff_status != 0 ]; then
                    _log2 "Change detected from check-cmd."
                    mv -f $cc_tmp $cc_out
                    break
                else
                    rm -f $cc_tmp
                    if [ -n "$interval" ]; then
                        sleep $interval
                    fi
                fi
            done
        fi # check-cmd.

    done

    [ $LOGLEVEL -ge 1 ] && echo-fill "Session-End: $session" +0 M '+++'
}

boot "$@"
