#!/bin/bash

# Package Index
# (generated from file index.html)

    PACKAGES=()

    PACKAGES+=(namecheap.domains)
    namecheap_domains__cmds=(getList getContacts create getTldList setContacts check reactivate renew getRegistrarLock setRegistrarLock getInfo)
    declare -A namecheap_domains
        namecheap_domains[getList]="Returns a list of domains for the particular user."
        namecheap_domains[get-list]="Returns a list of domains for the particular user."
        namecheap_domains[getContacts]="Gets contact information of the requested domain."
        namecheap_domains[get-contacts]="Gets contact information of the requested domain."
        namecheap_domains[create]="Registers a new domain name."
        namecheap_domains[getTldList]="Returns a list of tlds"
        namecheap_domains[get-tld-list]="Returns a list of tlds"
        namecheap_domains[setContacts]="Sets contact information for the domain."
        namecheap_domains[set-contacts]="Sets contact information for the domain."
        namecheap_domains[check]="Checks the availability of domains."
        namecheap_domains[reactivate]="Reactivates an expired domain."
        namecheap_domains[renew]="Renews an expiring domain."
        namecheap_domains[getRegistrarLock]="Gets the RegistrarLock status of the requested domain."
        namecheap_domains[get-registrar-lock]="Gets the RegistrarLock status of the requested domain."
        namecheap_domains[setRegistrarLock]="Sets the RegistrarLock status for a domain."
        namecheap_domains[set-registrar-lock]="Sets the RegistrarLock status for a domain."
        namecheap_domains[getInfo]="Returns information about the requested domain."
        namecheap_domains[get-info]="Returns information about the requested domain."

    PACKAGES+=(namecheap.domains.dns)
    namecheap_domains_dns__cmds=(setDefault setCustom getList getHosts getEmailForwarding setEmailForwarding setHosts)
    declare -A namecheap_domains_dns
        namecheap_domains_dns[setDefault]="Sets domain to use our default DNS servers. Required for free services like Host record management, URL forwarding, email forwarding, dynamic dns and other value added services."
        namecheap_domains_dns[set-default]="Sets domain to use our default DNS servers. Required for free services like Host record management, URL forwarding, email forwarding, dynamic dns and other value added services."
        namecheap_domains_dns[setCustom]="Sets domain to use custom DNS servers. NOTE: Services like URL forwarding, Email forwarding, Dynamic DNS will not work for domains using custom nameservers."
        namecheap_domains_dns[set-custom]="Sets domain to use custom DNS servers. NOTE: Services like URL forwarding, Email forwarding, Dynamic DNS will not work for domains using custom nameservers."
        namecheap_domains_dns[getList]="Gets a list of DNS servers associated with the requested domain."
        namecheap_domains_dns[get-list]="Gets a list of DNS servers associated with the requested domain."
        namecheap_domains_dns[getHosts]="Retrieves DNS host record settings for the requested domain."
        namecheap_domains_dns[get-hosts]="Retrieves DNS host record settings for the requested domain."
        namecheap_domains_dns[getEmailForwarding]="Gets email forwarding settings for the requested domain"
        namecheap_domains_dns[get-email-forwarding]="Gets email forwarding settings for the requested domain"
        namecheap_domains_dns[setEmailForwarding]="Sets email forwarding for a domain name."
        namecheap_domains_dns[set-email-forwarding]="Sets email forwarding for a domain name."
        namecheap_domains_dns[setHosts]="Sets DNS host records settings for the requested domain."
        namecheap_domains_dns[set-hosts]="Sets DNS host records settings for the requested domain."

    PACKAGES+=(namecheap.domains.ns)
    namecheap_domains_ns__cmds=(create delete getInfo update)
    declare -A namecheap_domains_ns
        namecheap_domains_ns[create]="Creates a new nameserver."
        namecheap_domains_ns[delete]="Deletes a nameserver associated with the requested domain."
        namecheap_domains_ns[getInfo]="Retrieves information about a registered nameserver."
        namecheap_domains_ns[get-info]="Retrieves information about a registered nameserver."
        namecheap_domains_ns[update]="Updates the IP address of a registered nameserver."

    PACKAGES+=(namecheap.domains.transfer)
    namecheap_domains_transfer__cmds=(create getStatus updateStatus getList)
    declare -A namecheap_domains_transfer
        namecheap_domains_transfer[create]="Transfers a domain to Namecheap. You can only transfer .biz, .ca, .cc, .co, .co.uk, .com, .com.es, .com.pe, .es, .in, .info, .me, .me.uk, .mobi, .net, .net.pe, .nom.es, .org, .org.es, .org.pe, .org.uk, .pe, .tv, .us domains through API at this time."
        namecheap_domains_transfer[getStatus]="Gets the status of a particular transfer."
        namecheap_domains_transfer[get-status]="Gets the status of a particular transfer."
        namecheap_domains_transfer[updateStatus]="Updates the status of a particular transfer. Allows you to re-submit the transfer after releasing the registry lock."
        namecheap_domains_transfer[update-status]="Updates the status of a particular transfer. Allows you to re-submit the transfer after releasing the registry lock."
        namecheap_domains_transfer[getList]="Gets the list of domain transfers."
        namecheap_domains_transfer[get-list]="Gets the list of domain transfers."

    PACKAGES+=(namecheap.ssl)
    namecheap_ssl__cmds=(create getList parseCSR getApproverEmailList activate resendApproverEmail getInfo renew reissue resendfulfillmentemail purchasemoresans revokecertificate editDCVMethod)
    declare -A namecheap_ssl
        namecheap_ssl[create]="Creates a new SSL certificate."
        namecheap_ssl[getList]="Returns a list of SSL certificates for the particular user."
        namecheap_ssl[get-list]="Returns a list of SSL certificates for the particular user."
        namecheap_ssl[parseCSR]="Parsers the CSR"
        namecheap_ssl[parse-c-s-r]="Parsers the CSR"
        namecheap_ssl[getApproverEmailList]="Gets approver email list for the requested certificate."
        namecheap_ssl[get-approver-email-list]="Gets approver email list for the requested certificate."
        namecheap_ssl[activate]="Activates a newly purchased SSL certificate."
        namecheap_ssl[resendApproverEmail]="Resends the approver email."
        namecheap_ssl[resend-approver-email]="Resends the approver email."
        namecheap_ssl[getInfo]="Retrieves information about the requested SSL certificate"
        namecheap_ssl[get-info]="Retrieves information about the requested SSL certificate"
        namecheap_ssl[renew]="Renews an SSL certificate."
        namecheap_ssl[reissue]="Reissues an SSL certificate."
        namecheap_ssl[resendfulfillmentemail]="Resends the fulfilment email containing the certificate."
        namecheap_ssl[purchasemoresans]="Purchases more add-on domains for already purchased certificate."
        namecheap_ssl[revokecertificate]="Revokes a re-issued SSL certificate."
        namecheap_ssl[editDCVMethod]="Sets new domain control validation (DCV) method for a certificate or serves as 'retry' mechanism"
        namecheap_ssl[edit-d-c-v-method]="Sets new domain control validation (DCV) method for a certificate or serves as 'retry' mechanism"

    PACKAGES+=(namecheap.users)
    namecheap_users__cmds=(getPricing getBalances changePassword update createaddfundsrequest getAddFundsStatus create login resetPassword)
    declare -A namecheap_users
        namecheap_users[getPricing]="Returns pricing information for a requested product type."
        namecheap_users[get-pricing]="Returns pricing information for a requested product type."
        namecheap_users[getBalances]="Gets information about fund in the user's account.This method returns the following information: Available Balance, Account Balance, Earned Amount, Withdrawable Amount and Funds Required for AutoRenew."
        namecheap_users[get-balances]="Gets information about fund in the user's account.This method returns the following information: Available Balance, Account Balance, Earned Amount, Withdrawable Amount and Funds Required for AutoRenew."
        namecheap_users[changePassword]="Changes password of the particular user's account."
        namecheap_users[change-password]="Changes password of the particular user's account."
        namecheap_users[update]="Updates user account information for the particular user."
        namecheap_users[createaddfundsrequest]="Creates a request to add funds through a credit card"
        namecheap_users[getAddFundsStatus]="Gets the status of add funds request."
        namecheap_users[get-add-funds-status]="Gets the status of add funds request."
        namecheap_users[create]="Creates a new account at NameCheap under this ApiUser."
        namecheap_users[login]="Validates the username and password of user accounts you have created using the API command namecheap.users.create."
        namecheap_users[resetPassword]="When you call this API, a link to reset password will be emailed to the end user's profile email id.The end user needs to click on the link to reset password."
        namecheap_users[reset-password]="When you call this API, a link to reset password will be emailed to the end user's profile email id.The end user needs to click on the link to reset password."

    PACKAGES+=(namecheap.users.address)
    namecheap_users_address__cmds=(create delete getInfo getList setDefault update)
    declare -A namecheap_users_address
        namecheap_users_address[create]="Creates a new address for the user"
        namecheap_users_address[delete]="Deletes the particular address for the user."
        namecheap_users_address[getInfo]="Gets information for the requested addressID."
        namecheap_users_address[get-info]="Gets information for the requested addressID."
        namecheap_users_address[getList]="Gets a list of addressIDs and addressnames associated with the user account."
        namecheap_users_address[get-list]="Gets a list of addressIDs and addressnames associated with the user account."
        namecheap_users_address[setDefault]="Sets default address for the user."
        namecheap_users_address[set-default]="Sets default address for the user."
        namecheap_users_address[update]="Updates the particular address of the user"

    PACKAGES+=(namecheap.domainprivacy)
    namecheap_domainprivacy__cmds=(changeemailaddress enable disable getList renew)
    declare -A namecheap_domainprivacy
        namecheap_domainprivacy[changeemailaddress]="Changes domain privacy email address"
        namecheap_domainprivacy[enable]="Enables domain privacy protection."
        namecheap_domainprivacy[disable]="Disables domain privacy protection."
        namecheap_domainprivacy[getList]="Gets the list of domain privacy protection."
        namecheap_domainprivacy[get-list]="Gets the list of domain privacy protection."
        namecheap_domainprivacy[renew]="Renews domain privacy protection."







# Package namecheap.whoisguard, Command changeemailaddress
# (generated from file domainprivacy/change-email-address/index.html)

    # Request Parameters
        declare -A namecheap_whoisguard_changeemailaddress_in
        declare -A namecheap_whoisguard_changeemailaddress_in_name
        declare -A namecheap_whoisguard_changeemailaddress_in_type
        declare -A namecheap_whoisguard_changeemailaddress_in_maxlen
        declare -A namecheap_whoisguard_changeemailaddress_in_required
        declare -A namecheap_whoisguard_changeemailaddress_in_description

        namecheap_whoisguard_changeemailaddress_in["WhoisguardID"]="The unique domain privacy ID that you wish to change"
        namecheap_whoisguard_changeemailaddress_in_optname["WhoisguardID"]="whoisguard-i-d"
        namecheap_whoisguard_changeemailaddress_in_type["WhoisguardID"]="Number"
        namecheap_whoisguard_changeemailaddress_in_maxlen["WhoisguardID"]="10"
        namecheap_whoisguard_changeemailaddress_in_required["WhoisguardID"]="Yes"

    # Response Parameters
        declare -A namecheap_whoisguard_changeemailaddress_out
        namecheap_whoisguard_changeemailaddress_out["ID"]="The unique integer value that represents domain privacy subscription."
        namecheap_whoisguard_changeemailaddress_out["IsSuccess"]="Indicates whether the domain privacy email address was changed successfully."
        namecheap_whoisguard_changeemailaddress_out["WGEmail"]="The new domain privacy email address."
        namecheap_whoisguard_changeemailaddress_out["WGOldEmail"]="The old domain privacy email address."

    # Error Codes
        declare -A namecheap_whoisguard_changeemailaddress_error
        namecheap_whoisguard_changeemailaddress_error[2011331]="Domain privacy does not exists (or) domain privacy is not associated with any domain (or) domain privacy is not associated with this user"

# Package namecheap.whoisguard, Command disable
# (generated from file domainprivacy/disable/index.html)

    # Request Parameters
        declare -A namecheap_whoisguard_disable_in
        declare -A namecheap_whoisguard_disable_in_name
        declare -A namecheap_whoisguard_disable_in_type
        declare -A namecheap_whoisguard_disable_in_maxlen
        declare -A namecheap_whoisguard_disable_in_required
        declare -A namecheap_whoisguard_disable_in_description

        namecheap_whoisguard_disable_in["WhoisguardID"]="The unique domain privacy ID which has to be disabled."
        namecheap_whoisguard_disable_in_optname["WhoisguardID"]="whoisguard-i-d"
        namecheap_whoisguard_disable_in_type["WhoisguardID"]="Number"
        namecheap_whoisguard_disable_in_maxlen["WhoisguardID"]="10"
        namecheap_whoisguard_disable_in_required["WhoisguardID"]="Yes"

    # Response Parameters
        declare -A namecheap_whoisguard_disable_out
        namecheap_whoisguard_disable_out["Domainname"]="The domain name associated with the subscription."
        namecheap_whoisguard_disable_out["IsSuccess"]="Indicates whether the domain privacy was disabled successfully."

    # Error Codes
        declare -A namecheap_whoisguard_disable_error
        namecheap_whoisguard_disable_error[2011331]="Domain privacy does not exists (or) domain privacy is not associated with any domain (or) domain privacy is already disabled (or) domain privacy is not associated with this user"

# Package namecheap.whoisguard, Command enable
# (generated from file domainprivacy/enable/index.html)

    # Request Parameters
        declare -A namecheap_whoisguard_enable_in
        declare -A namecheap_whoisguard_enable_in_name
        declare -A namecheap_whoisguard_enable_in_type
        declare -A namecheap_whoisguard_enable_in_maxlen
        declare -A namecheap_whoisguard_enable_in_required
        declare -A namecheap_whoisguard_enable_in_description

        namecheap_whoisguard_enable_in["WhoisguardID"]="The unique domain privacy ID which you get"
        namecheap_whoisguard_enable_in_optname["WhoisguardID"]="whoisguard-i-d"
        namecheap_whoisguard_enable_in_type["WhoisguardID"]="Number"
        namecheap_whoisguard_enable_in_maxlen["WhoisguardID"]="10"
        namecheap_whoisguard_enable_in_required["WhoisguardID"]="Yes"

        namecheap_whoisguard_enable_in["ForwardedToEmail"]="The email address to which domain privacy emails are to be forwarded"
        namecheap_whoisguard_enable_in_optname["ForwardedToEmail"]="forwarded-to-email"
        namecheap_whoisguard_enable_in_type["ForwardedToEmail"]="String"
        namecheap_whoisguard_enable_in_maxlen["ForwardedToEmail"]="70"
        namecheap_whoisguard_enable_in_required["ForwardedToEmail"]="Yes"

    # Response Parameters
        declare -A namecheap_whoisguard_enable_out
        namecheap_whoisguard_enable_out["DomainName"]="The domain name for which you are trying to enable domain privacy"
        namecheap_whoisguard_enable_out["IsSuccess"]="Indicates whether the domain privacy was enabled successfully."

    # Error Codes
        declare -A namecheap_whoisguard_enable_error
        namecheap_whoisguard_enable_error[2011331]="Domain privacy does not exists (or) domain privacy is already enabled (or) domain privacy is not associated with any domain or) domain privacy is not associated with this user"
        namecheap_whoisguard_enable_error[2011369]="Error domain privacy forwarded Email address is not valid"

# Package namecheap.whoisguard, Command getList
# (generated from file domainprivacy/getlist/index.html)

    # Request Parameters
        declare -A namecheap_whoisguard_getList_in
        declare -A namecheap_whoisguard_getList_in_name
        declare -A namecheap_whoisguard_getList_in_type
        declare -A namecheap_whoisguard_getList_in_maxlen
        declare -A namecheap_whoisguard_getList_in_required
        declare -A namecheap_whoisguard_getList_in_description

        namecheap_whoisguard_getList_in["ListType"]="Possible values are ALL, ALLOTED, FREE, DISCARD. Default Value: ALL"
        namecheap_whoisguard_getList_in_optname["ListType"]="list-type"
        namecheap_whoisguard_getList_in_type["ListType"]="String"
        namecheap_whoisguard_getList_in_maxlen["ListType"]="10"
        namecheap_whoisguard_getList_in_required["ListType"]="No"

        namecheap_whoisguard_getList_in["Page"]="Page to return Default Value: 1"
        namecheap_whoisguard_getList_in_optname["Page"]="page"
        namecheap_whoisguard_getList_in_type["Page"]="Number"
        namecheap_whoisguard_getList_in_maxlen["Page"]="10"
        namecheap_whoisguard_getList_in_required["Page"]="No"

        namecheap_whoisguard_getList_in["PageSize"]="Number of domain privacy subscriptions to be listed on a page. Minimum value: 2; Maximum value: 100"
        namecheap_whoisguard_getList_in_optname["PageSize"]="page-size"
        namecheap_whoisguard_getList_in_type["PageSize"]="Number"
        namecheap_whoisguard_getList_in_maxlen["PageSize"]="20"
        namecheap_whoisguard_getList_in_required["PageSize"]="No"

        namecheap_whoisguard_getList_in["Whoisguard"]="integer value that represents the domain privacy subscription."
        namecheap_whoisguard_getList_in_optname["Whoisguard"]="whoisguard"
        namecheap_whoisguard_getList_in_type["Whoisguard"]="ID"
        namecheap_whoisguard_getList_in_maxlen["Whoisguard"]="A"
        namecheap_whoisguard_getList_in_required["Whoisguard"]="unique"

        namecheap_whoisguard_getList_in["Domainname"]="associated with the subscription."
        namecheap_whoisguard_getList_in_optname["Domainname"]="domainname"
        namecheap_whoisguard_getList_in_type["Domainname"]="The"
        namecheap_whoisguard_getList_in_maxlen["Domainname"]="domain"
        namecheap_whoisguard_getList_in_required["Domainname"]="name"

        namecheap_whoisguard_getList_in["Created"]="date"
        namecheap_whoisguard_getList_in_optname["Created"]="created"
        namecheap_whoisguard_getList_in_type["Created"]="Domain"
        namecheap_whoisguard_getList_in_maxlen["Created"]="privacy"
        namecheap_whoisguard_getList_in_required["Created"]="creation"

        namecheap_whoisguard_getList_in["Expires"]="date"
        namecheap_whoisguard_getList_in_optname["Expires"]="expires"
        namecheap_whoisguard_getList_in_type["Expires"]="Domain"
        namecheap_whoisguard_getList_in_maxlen["Expires"]="privacy"
        namecheap_whoisguard_getList_in_required["Expires"]="expiry"

        namecheap_whoisguard_getList_in["Status"]="status of domain privacy subscription."
        namecheap_whoisguard_getList_in_optname["Status"]="status"
        namecheap_whoisguard_getList_in_type["Status"]="Indicates"
        namecheap_whoisguard_getList_in_maxlen["Status"]="the"
        namecheap_whoisguard_getList_in_required["Status"]="current"

    # Response Parameters
        declare -A namecheap_whoisguard_getList_out
        namecheap_whoisguard_getList_out["2011272"]="ListType is not Valid"

    # Error Codes
        declare -A namecheap_whoisguard_getList_error

# Package namecheap.whoisguard, Command renew
# (generated from file domainprivacy/renew/index.html)

    # Request Parameters
        declare -A namecheap_whoisguard_renew_in
        declare -A namecheap_whoisguard_renew_in_name
        declare -A namecheap_whoisguard_renew_in_type
        declare -A namecheap_whoisguard_renew_in_maxlen
        declare -A namecheap_whoisguard_renew_in_required
        declare -A namecheap_whoisguard_renew_in_description

        namecheap_whoisguard_renew_in["WhoisguardID"]="Domain privacy ID to renew"
        namecheap_whoisguard_renew_in_optname["WhoisguardID"]="whoisguard-i-d"
        namecheap_whoisguard_renew_in_type["WhoisguardID"]="String"
        namecheap_whoisguard_renew_in_maxlen["WhoisguardID"]="10"
        namecheap_whoisguard_renew_in_required["WhoisguardID"]="Yes"

        namecheap_whoisguard_renew_in["Years"]="Number of years to renew Default Value: 1"
        namecheap_whoisguard_renew_in_optname["Years"]="years"
        namecheap_whoisguard_renew_in_type["Years"]="Number"
        namecheap_whoisguard_renew_in_maxlen["Years"]="9"
        namecheap_whoisguard_renew_in_required["Years"]="Yes"

        namecheap_whoisguard_renew_in["PromotionCode"]="Promotional (coupon) code for renewing the domain privacy"
        namecheap_whoisguard_renew_in_optname["PromotionCode"]="promotion-code"
        namecheap_whoisguard_renew_in_type["PromotionCode"]="Number"
        namecheap_whoisguard_renew_in_maxlen["PromotionCode"]="20"
        namecheap_whoisguard_renew_in_required["PromotionCode"]="No"

    # Response Parameters
        declare -A namecheap_whoisguard_renew_out
        namecheap_whoisguard_renew_out["WhoisGuard"]="ID A unique integer value that represents the domain privacy subscription."
        namecheap_whoisguard_renew_out["Years"]="Number of years to renew"
        namecheap_whoisguard_renew_out["Renew"]="Renewal status"
        namecheap_whoisguard_renew_out["OrderId"]="A unique integer value that represents the Order"
        namecheap_whoisguard_renew_out["TransactionId"]="A unique integer that represents the Transaction"
        namecheap_whoisguard_renew_out["ChargedAmount"]="Amount charged for the domain privacy renewal."

    # Error Codes
        declare -A namecheap_whoisguard_renew_error
        namecheap_whoisguard_renew_error[2011167]="No of years should be max of 9"
        namecheap_whoisguard_renew_error[2029331]="This domain privacy is not allowed to renew before 30 days of its expiration.So cannot Renew"
        namecheap_whoisguard_renew_error[2528268]="Order creation failed / validation error"
        namecheap_whoisguard_renew_error[5050900]="Unhandled exception"

# Package namecheap.domains, Command check
# (generated from file domains/check/index.html)

    # Request Parameters
        declare -A namecheap_domains_check_in
        declare -A namecheap_domains_check_in_name
        declare -A namecheap_domains_check_in_type
        declare -A namecheap_domains_check_in_maxlen
        declare -A namecheap_domains_check_in_required
        declare -A namecheap_domains_check_in_description

        namecheap_domains_check_in["DomainList"]="Comma-separated list of domains to check"
        namecheap_domains_check_in_optname["DomainList"]="domain-list"
        namecheap_domains_check_in_type["DomainList"]="String"
        namecheap_domains_check_in_maxlen["DomainList"]="No"
        namecheap_domains_check_in_required["DomainList"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_check_out
        namecheap_domains_check_out["Domain"]="Domain name for which you wish to check availability"
        namecheap_domains_check_out["Available"]="Indicates whether the domain name is available for registration"
        namecheap_domains_check_out["IsPremiumName"]="Indicates whether the domain name is premium"
        namecheap_domains_check_out["PremiumRegistrationPrice"]="Registration Price for the premium domain"
        namecheap_domains_check_out["PremiumRenewalPrice"]="Renewal price for the premium domain"
        namecheap_domains_check_out["PremiumRestorePrice"]="Restore price for the premium domain"
        namecheap_domains_check_out["PremiumTransferPrice"]="Transfer price for the premium domain"
        namecheap_domains_check_out["IcannFee"]="Fee charged by ICANN"
        namecheap_domains_check_out["EapFee"]="Purchase fee for the premium domain during Early Access Program (EAP)*"

    # Error Codes
        declare -A namecheap_domains_check_error
        namecheap_domains_check_error[3031510]="Error response from Enom when the error count != 0"
        namecheap_domains_check_error[3011511]="Unknown response from the provider"
        namecheap_domains_check_error[2011169]="Only 50 domains are allowed in a single check command"

# Package namecheap.domains, Command create
# (generated from file domains/create/index.html)

    # Request Parameters
        declare -A namecheap_domains_create_in
        declare -A namecheap_domains_create_in_name
        declare -A namecheap_domains_create_in_type
        declare -A namecheap_domains_create_in_maxlen
        declare -A namecheap_domains_create_in_required
        declare -A namecheap_domains_create_in_description

        namecheap_domains_create_in["DomainName"]="Domain name to register"
        namecheap_domains_create_in_optname["DomainName"]="domain-name"
        namecheap_domains_create_in_type["DomainName"]="String"
        namecheap_domains_create_in_maxlen["DomainName"]="70"
        namecheap_domains_create_in_required["DomainName"]="Yes"

        namecheap_domains_create_in["Years"]="Number of years to register Default Value: 2"
        namecheap_domains_create_in_optname["Years"]="years"
        namecheap_domains_create_in_type["Years"]="Number"
        namecheap_domains_create_in_maxlen["Years"]="2"
        namecheap_domains_create_in_required["Years"]="Yes"

        namecheap_domains_create_in["PromotionCode"]="Promotional (coupon) code for the domain"
        namecheap_domains_create_in_optname["PromotionCode"]="promotion-code"
        namecheap_domains_create_in_type["PromotionCode"]="String"
        namecheap_domains_create_in_maxlen["PromotionCode"]="20"
        namecheap_domains_create_in_required["PromotionCode"]="No"

        namecheap_domains_create_in["RegistrantOrganizationName"]="Organization of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantOrganizationName"]="registrant-organization-name"
        namecheap_domains_create_in_type["RegistrantOrganizationName"]="String"
        namecheap_domains_create_in_maxlen["RegistrantOrganizationName"]="255"
        namecheap_domains_create_in_required["RegistrantOrganizationName"]="No"

        namecheap_domains_create_in["RegistrantJobTitle"]="Job title of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantJobTitle"]="registrant-job-title"
        namecheap_domains_create_in_type["RegistrantJobTitle"]="String"
        namecheap_domains_create_in_maxlen["RegistrantJobTitle"]="255"
        namecheap_domains_create_in_required["RegistrantJobTitle"]="No"

        namecheap_domains_create_in["RegistrantFirstName"]="First name of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantFirstName"]="registrant-first-name"
        namecheap_domains_create_in_type["RegistrantFirstName"]="String"
        namecheap_domains_create_in_maxlen["RegistrantFirstName"]="255"
        namecheap_domains_create_in_required["RegistrantFirstName"]="Yes"

        namecheap_domains_create_in["RegistrantLastName"]="Second name of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantLastName"]="registrant-last-name"
        namecheap_domains_create_in_type["RegistrantLastName"]="String"
        namecheap_domains_create_in_maxlen["RegistrantLastName"]="255"
        namecheap_domains_create_in_required["RegistrantLastName"]="Yes"

        namecheap_domains_create_in["RegistrantAddress1"]="Address1 of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantAddress1"]="registrant-address1"
        namecheap_domains_create_in_type["RegistrantAddress1"]="String"
        namecheap_domains_create_in_maxlen["RegistrantAddress1"]="255"
        namecheap_domains_create_in_required["RegistrantAddress1"]="Yes"

        namecheap_domains_create_in["RegistrantAddress2"]="Address2 of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantAddress2"]="registrant-address2"
        namecheap_domains_create_in_type["RegistrantAddress2"]="String"
        namecheap_domains_create_in_maxlen["RegistrantAddress2"]="255"
        namecheap_domains_create_in_required["RegistrantAddress2"]="No"

        namecheap_domains_create_in["RegistrantCity"]="City of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantCity"]="registrant-city"
        namecheap_domains_create_in_type["RegistrantCity"]="String"
        namecheap_domains_create_in_maxlen["RegistrantCity"]="50"
        namecheap_domains_create_in_required["RegistrantCity"]="Yes"

        namecheap_domains_create_in["RegistrantStateProvince"]="State/Province of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantStateProvince"]="registrant-state-province"
        namecheap_domains_create_in_type["RegistrantStateProvince"]="String"
        namecheap_domains_create_in_maxlen["RegistrantStateProvince"]="50"
        namecheap_domains_create_in_required["RegistrantStateProvince"]="Yes"

        namecheap_domains_create_in["RegistrantStateProvinceChoice"]="StateProvinceChoice of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantStateProvinceChoice"]="registrant-state-province-choice"
        namecheap_domains_create_in_type["RegistrantStateProvinceChoice"]="String"
        namecheap_domains_create_in_maxlen["RegistrantStateProvinceChoice"]="50"
        namecheap_domains_create_in_required["RegistrantStateProvinceChoice"]="No"

        namecheap_domains_create_in["RegistrantPostalCode"]="PostalCode of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantPostalCode"]="registrant-postal-code"
        namecheap_domains_create_in_type["RegistrantPostalCode"]="String"
        namecheap_domains_create_in_maxlen["RegistrantPostalCode"]="50"
        namecheap_domains_create_in_required["RegistrantPostalCode"]="Yes"

        namecheap_domains_create_in["RegistrantCountry"]="Country of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantCountry"]="registrant-country"
        namecheap_domains_create_in_type["RegistrantCountry"]="String"
        namecheap_domains_create_in_maxlen["RegistrantCountry"]="50"
        namecheap_domains_create_in_required["RegistrantCountry"]="Yes"

        namecheap_domains_create_in["RegistrantPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["RegistrantPhone"]="registrant-phone"
        namecheap_domains_create_in_type["RegistrantPhone"]="String"
        namecheap_domains_create_in_maxlen["RegistrantPhone"]="50"
        namecheap_domains_create_in_required["RegistrantPhone"]="Yes"

        namecheap_domains_create_in["RegistrantPhoneExt"]="PhoneExt of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantPhoneExt"]="registrant-phone-ext"
        namecheap_domains_create_in_type["RegistrantPhoneExt"]="String"
        namecheap_domains_create_in_maxlen["RegistrantPhoneExt"]="50"
        namecheap_domains_create_in_required["RegistrantPhoneExt"]="No"

        namecheap_domains_create_in["RegistrantFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["RegistrantFax"]="registrant-fax"
        namecheap_domains_create_in_type["RegistrantFax"]="String"
        namecheap_domains_create_in_maxlen["RegistrantFax"]="50"
        namecheap_domains_create_in_required["RegistrantFax"]="No"

        namecheap_domains_create_in["RegistrantEmailAddress"]="Email address of the Registrant user"
        namecheap_domains_create_in_optname["RegistrantEmailAddress"]="registrant-email-address"
        namecheap_domains_create_in_type["RegistrantEmailAddress"]="String"
        namecheap_domains_create_in_maxlen["RegistrantEmailAddress"]="255"
        namecheap_domains_create_in_required["RegistrantEmailAddress"]="Yes"

        namecheap_domains_create_in["TechOrganizationName"]="Organization of the Tech user"
        namecheap_domains_create_in_optname["TechOrganizationName"]="tech-organization-name"
        namecheap_domains_create_in_type["TechOrganizationName"]="String"
        namecheap_domains_create_in_maxlen["TechOrganizationName"]="255"
        namecheap_domains_create_in_required["TechOrganizationName"]="No"

        namecheap_domains_create_in["TechJobTitle"]="Job title of the Tech user"
        namecheap_domains_create_in_optname["TechJobTitle"]="tech-job-title"
        namecheap_domains_create_in_type["TechJobTitle"]="String"
        namecheap_domains_create_in_maxlen["TechJobTitle"]="255"
        namecheap_domains_create_in_required["TechJobTitle"]="No"

        namecheap_domains_create_in["TechFirstName"]="First name of the Tech user"
        namecheap_domains_create_in_optname["TechFirstName"]="tech-first-name"
        namecheap_domains_create_in_type["TechFirstName"]="String"
        namecheap_domains_create_in_maxlen["TechFirstName"]="255"
        namecheap_domains_create_in_required["TechFirstName"]="Yes"

        namecheap_domains_create_in["TechLastName"]="Second name of the Tech user"
        namecheap_domains_create_in_optname["TechLastName"]="tech-last-name"
        namecheap_domains_create_in_type["TechLastName"]="String"
        namecheap_domains_create_in_maxlen["TechLastName"]="255"
        namecheap_domains_create_in_required["TechLastName"]="Yes"

        namecheap_domains_create_in["TechAddress1"]="Address1 of the Tech user"
        namecheap_domains_create_in_optname["TechAddress1"]="tech-address1"
        namecheap_domains_create_in_type["TechAddress1"]="String"
        namecheap_domains_create_in_maxlen["TechAddress1"]="255"
        namecheap_domains_create_in_required["TechAddress1"]="Yes"

        namecheap_domains_create_in["TechAddress2"]="Address2 of the Tech user"
        namecheap_domains_create_in_optname["TechAddress2"]="tech-address2"
        namecheap_domains_create_in_type["TechAddress2"]="String"
        namecheap_domains_create_in_maxlen["TechAddress2"]="255"
        namecheap_domains_create_in_required["TechAddress2"]="No"

        namecheap_domains_create_in["TechCity"]="City of the Tech user"
        namecheap_domains_create_in_optname["TechCity"]="tech-city"
        namecheap_domains_create_in_type["TechCity"]="String"
        namecheap_domains_create_in_maxlen["TechCity"]="50"
        namecheap_domains_create_in_required["TechCity"]="Yes"

        namecheap_domains_create_in["TechStateProvince"]="State/Province of the Tech user"
        namecheap_domains_create_in_optname["TechStateProvince"]="tech-state-province"
        namecheap_domains_create_in_type["TechStateProvince"]="String"
        namecheap_domains_create_in_maxlen["TechStateProvince"]="50"
        namecheap_domains_create_in_required["TechStateProvince"]="Yes"

        namecheap_domains_create_in["TechStateProvinceChoice"]="StateProvinceChoice of the Tech user"
        namecheap_domains_create_in_optname["TechStateProvinceChoice"]="tech-state-province-choice"
        namecheap_domains_create_in_type["TechStateProvinceChoice"]="String"
        namecheap_domains_create_in_maxlen["TechStateProvinceChoice"]="50"
        namecheap_domains_create_in_required["TechStateProvinceChoice"]="No"

        namecheap_domains_create_in["TechPostalCode"]="PostalCode of the Tech user"
        namecheap_domains_create_in_optname["TechPostalCode"]="tech-postal-code"
        namecheap_domains_create_in_type["TechPostalCode"]="String"
        namecheap_domains_create_in_maxlen["TechPostalCode"]="50"
        namecheap_domains_create_in_required["TechPostalCode"]="Yes"

        namecheap_domains_create_in["TechCountry"]="Country of the Tech user"
        namecheap_domains_create_in_optname["TechCountry"]="tech-country"
        namecheap_domains_create_in_type["TechCountry"]="String"
        namecheap_domains_create_in_maxlen["TechCountry"]="50"
        namecheap_domains_create_in_required["TechCountry"]="Yes"

        namecheap_domains_create_in["TechPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["TechPhone"]="tech-phone"
        namecheap_domains_create_in_type["TechPhone"]="String"
        namecheap_domains_create_in_maxlen["TechPhone"]="50"
        namecheap_domains_create_in_required["TechPhone"]="Yes"

        namecheap_domains_create_in["TechPhoneExt"]="PhoneExt of the Tech user"
        namecheap_domains_create_in_optname["TechPhoneExt"]="tech-phone-ext"
        namecheap_domains_create_in_type["TechPhoneExt"]="String"
        namecheap_domains_create_in_maxlen["TechPhoneExt"]="50"
        namecheap_domains_create_in_required["TechPhoneExt"]="No"

        namecheap_domains_create_in["TechFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["TechFax"]="tech-fax"
        namecheap_domains_create_in_type["TechFax"]="String"
        namecheap_domains_create_in_maxlen["TechFax"]="50"
        namecheap_domains_create_in_required["TechFax"]="No"

        namecheap_domains_create_in["TechEmailAddress"]="Email address of the Tech user"
        namecheap_domains_create_in_optname["TechEmailAddress"]="tech-email-address"
        namecheap_domains_create_in_type["TechEmailAddress"]="String"
        namecheap_domains_create_in_maxlen["TechEmailAddress"]="255"
        namecheap_domains_create_in_required["TechEmailAddress"]="Yes"

        namecheap_domains_create_in["AdminOrganizationName"]="Organization of the Admin user"
        namecheap_domains_create_in_optname["AdminOrganizationName"]="admin-organization-name"
        namecheap_domains_create_in_type["AdminOrganizationName"]="String"
        namecheap_domains_create_in_maxlen["AdminOrganizationName"]="255"
        namecheap_domains_create_in_required["AdminOrganizationName"]="No"

        namecheap_domains_create_in["AdminJobTitle"]="Job title of the Admin user"
        namecheap_domains_create_in_optname["AdminJobTitle"]="admin-job-title"
        namecheap_domains_create_in_type["AdminJobTitle"]="String"
        namecheap_domains_create_in_maxlen["AdminJobTitle"]="255"
        namecheap_domains_create_in_required["AdminJobTitle"]="No"

        namecheap_domains_create_in["AdminFirstName"]="First name of the Admin user"
        namecheap_domains_create_in_optname["AdminFirstName"]="admin-first-name"
        namecheap_domains_create_in_type["AdminFirstName"]="String"
        namecheap_domains_create_in_maxlen["AdminFirstName"]="255"
        namecheap_domains_create_in_required["AdminFirstName"]="Yes"

        namecheap_domains_create_in["AdminLastName"]="Second name of the Admin user"
        namecheap_domains_create_in_optname["AdminLastName"]="admin-last-name"
        namecheap_domains_create_in_type["AdminLastName"]="String"
        namecheap_domains_create_in_maxlen["AdminLastName"]="255"
        namecheap_domains_create_in_required["AdminLastName"]="Yes"

        namecheap_domains_create_in["AdminAddress1"]="Address1 of the Admin user"
        namecheap_domains_create_in_optname["AdminAddress1"]="admin-address1"
        namecheap_domains_create_in_type["AdminAddress1"]="String"
        namecheap_domains_create_in_maxlen["AdminAddress1"]="255"
        namecheap_domains_create_in_required["AdminAddress1"]="Yes"

        namecheap_domains_create_in["AdminAddress2"]="Address2 of the Admin user"
        namecheap_domains_create_in_optname["AdminAddress2"]="admin-address2"
        namecheap_domains_create_in_type["AdminAddress2"]="String"
        namecheap_domains_create_in_maxlen["AdminAddress2"]="255"
        namecheap_domains_create_in_required["AdminAddress2"]="No"

        namecheap_domains_create_in["AdminCity"]="City of the Admin user"
        namecheap_domains_create_in_optname["AdminCity"]="admin-city"
        namecheap_domains_create_in_type["AdminCity"]="String"
        namecheap_domains_create_in_maxlen["AdminCity"]="50"
        namecheap_domains_create_in_required["AdminCity"]="Yes"

        namecheap_domains_create_in["AdminStateProvince"]="State/Province of the Admin user"
        namecheap_domains_create_in_optname["AdminStateProvince"]="admin-state-province"
        namecheap_domains_create_in_type["AdminStateProvince"]="String"
        namecheap_domains_create_in_maxlen["AdminStateProvince"]="50"
        namecheap_domains_create_in_required["AdminStateProvince"]="Yes"

        namecheap_domains_create_in["AdminStateProvinceChoice"]="StateProvinceChoice of the Admin user"
        namecheap_domains_create_in_optname["AdminStateProvinceChoice"]="admin-state-province-choice"
        namecheap_domains_create_in_type["AdminStateProvinceChoice"]="String"
        namecheap_domains_create_in_maxlen["AdminStateProvinceChoice"]="50"
        namecheap_domains_create_in_required["AdminStateProvinceChoice"]="No"

        namecheap_domains_create_in["AdminPostalCode"]="PostalCode of the Admin user"
        namecheap_domains_create_in_optname["AdminPostalCode"]="admin-postal-code"
        namecheap_domains_create_in_type["AdminPostalCode"]="String"
        namecheap_domains_create_in_maxlen["AdminPostalCode"]="50"
        namecheap_domains_create_in_required["AdminPostalCode"]="Yes"

        namecheap_domains_create_in["AdminCountry"]="Country of the Admin user"
        namecheap_domains_create_in_optname["AdminCountry"]="admin-country"
        namecheap_domains_create_in_type["AdminCountry"]="String"
        namecheap_domains_create_in_maxlen["AdminCountry"]="50"
        namecheap_domains_create_in_required["AdminCountry"]="Yes"

        namecheap_domains_create_in["AdminPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["AdminPhone"]="admin-phone"
        namecheap_domains_create_in_type["AdminPhone"]="String"
        namecheap_domains_create_in_maxlen["AdminPhone"]="50"
        namecheap_domains_create_in_required["AdminPhone"]="Yes"

        namecheap_domains_create_in["AdminPhoneExt"]="PhoneExt of the Admin user"
        namecheap_domains_create_in_optname["AdminPhoneExt"]="admin-phone-ext"
        namecheap_domains_create_in_type["AdminPhoneExt"]="String"
        namecheap_domains_create_in_maxlen["AdminPhoneExt"]="50"
        namecheap_domains_create_in_required["AdminPhoneExt"]="No"

        namecheap_domains_create_in["AdminFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["AdminFax"]="admin-fax"
        namecheap_domains_create_in_type["AdminFax"]="String"
        namecheap_domains_create_in_maxlen["AdminFax"]="50"
        namecheap_domains_create_in_required["AdminFax"]="No"

        namecheap_domains_create_in["AdminEmailAddress"]="Email address of the Admin user"
        namecheap_domains_create_in_optname["AdminEmailAddress"]="admin-email-address"
        namecheap_domains_create_in_type["AdminEmailAddress"]="String"
        namecheap_domains_create_in_maxlen["AdminEmailAddress"]="255"
        namecheap_domains_create_in_required["AdminEmailAddress"]="Yes"

        namecheap_domains_create_in["AuxBillingOrganizationName"]="Organization of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingOrganizationName"]="aux-billing-organization-name"
        namecheap_domains_create_in_type["AuxBillingOrganizationName"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingOrganizationName"]="255"
        namecheap_domains_create_in_required["AuxBillingOrganizationName"]="No"

        namecheap_domains_create_in["AuxBillingJobTitle"]="Job title of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingJobTitle"]="aux-billing-job-title"
        namecheap_domains_create_in_type["AuxBillingJobTitle"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingJobTitle"]="255"
        namecheap_domains_create_in_required["AuxBillingJobTitle"]="No"

        namecheap_domains_create_in["AuxBillingFirstName"]="First name of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingFirstName"]="aux-billing-first-name"
        namecheap_domains_create_in_type["AuxBillingFirstName"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingFirstName"]="255"
        namecheap_domains_create_in_required["AuxBillingFirstName"]="Yes"

        namecheap_domains_create_in["AuxBillingLastName"]="Second name of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingLastName"]="aux-billing-last-name"
        namecheap_domains_create_in_type["AuxBillingLastName"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingLastName"]="255"
        namecheap_domains_create_in_required["AuxBillingLastName"]="Yes"

        namecheap_domains_create_in["AuxBillingAddress1"]="Address1 of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingAddress1"]="aux-billing-address1"
        namecheap_domains_create_in_type["AuxBillingAddress1"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingAddress1"]="255"
        namecheap_domains_create_in_required["AuxBillingAddress1"]="Yes"

        namecheap_domains_create_in["AuxBillingAddress2"]="Address2 of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingAddress2"]="aux-billing-address2"
        namecheap_domains_create_in_type["AuxBillingAddress2"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingAddress2"]="255"
        namecheap_domains_create_in_required["AuxBillingAddress2"]="No"

        namecheap_domains_create_in["AuxBillingCity"]="City of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingCity"]="aux-billing-city"
        namecheap_domains_create_in_type["AuxBillingCity"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingCity"]="50"
        namecheap_domains_create_in_required["AuxBillingCity"]="Yes"

        namecheap_domains_create_in["AuxBillingStateProvince"]="State/Province of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingStateProvince"]="aux-billing-state-province"
        namecheap_domains_create_in_type["AuxBillingStateProvince"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingStateProvince"]="50"
        namecheap_domains_create_in_required["AuxBillingStateProvince"]="Yes"

        namecheap_domains_create_in["AuxBillingStateProvinceChoice"]="StateProvinceChoice of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingStateProvinceChoice"]="aux-billing-state-province-choice"
        namecheap_domains_create_in_type["AuxBillingStateProvinceChoice"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingStateProvinceChoice"]="50"
        namecheap_domains_create_in_required["AuxBillingStateProvinceChoice"]="No"

        namecheap_domains_create_in["AuxBillingPostalCode"]="PostalCode of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingPostalCode"]="aux-billing-postal-code"
        namecheap_domains_create_in_type["AuxBillingPostalCode"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingPostalCode"]="50"
        namecheap_domains_create_in_required["AuxBillingPostalCode"]="Yes"

        namecheap_domains_create_in["AuxBillingCountry"]="Country of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingCountry"]="aux-billing-country"
        namecheap_domains_create_in_type["AuxBillingCountry"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingCountry"]="50"
        namecheap_domains_create_in_required["AuxBillingCountry"]="Yes"

        namecheap_domains_create_in["AuxBillingPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["AuxBillingPhone"]="aux-billing-phone"
        namecheap_domains_create_in_type["AuxBillingPhone"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingPhone"]="50"
        namecheap_domains_create_in_required["AuxBillingPhone"]="Yes"

        namecheap_domains_create_in["AuxBillingPhoneExt"]="PhoneExt of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingPhoneExt"]="aux-billing-phone-ext"
        namecheap_domains_create_in_type["AuxBillingPhoneExt"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingPhoneExt"]="50"
        namecheap_domains_create_in_required["AuxBillingPhoneExt"]="No"

        namecheap_domains_create_in["AuxBillingFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["AuxBillingFax"]="aux-billing-fax"
        namecheap_domains_create_in_type["AuxBillingFax"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingFax"]="50"
        namecheap_domains_create_in_required["AuxBillingFax"]="No"

        namecheap_domains_create_in["AuxBillingEmailAddress"]="Email address of the AuxBilling user"
        namecheap_domains_create_in_optname["AuxBillingEmailAddress"]="aux-billing-email-address"
        namecheap_domains_create_in_type["AuxBillingEmailAddress"]="String"
        namecheap_domains_create_in_maxlen["AuxBillingEmailAddress"]="255"
        namecheap_domains_create_in_required["AuxBillingEmailAddress"]="Yes"

        namecheap_domains_create_in["BillingFirstName"]="First name of the Billing user"
        namecheap_domains_create_in_optname["BillingFirstName"]="billing-first-name"
        namecheap_domains_create_in_type["BillingFirstName"]="String"
        namecheap_domains_create_in_maxlen["BillingFirstName"]="255"
        namecheap_domains_create_in_required["BillingFirstName"]="No"

        namecheap_domains_create_in["BillingLastName"]="Second name of the Billing user"
        namecheap_domains_create_in_optname["BillingLastName"]="billing-last-name"
        namecheap_domains_create_in_type["BillingLastName"]="String"
        namecheap_domains_create_in_maxlen["BillingLastName"]="255"
        namecheap_domains_create_in_required["BillingLastName"]="No"

        namecheap_domains_create_in["BillingAddress1"]="Address1 of the Billing user"
        namecheap_domains_create_in_optname["BillingAddress1"]="billing-address1"
        namecheap_domains_create_in_type["BillingAddress1"]="String"
        namecheap_domains_create_in_maxlen["BillingAddress1"]="255"
        namecheap_domains_create_in_required["BillingAddress1"]="No"

        namecheap_domains_create_in["BillingAddress2"]="Address2 of the Billing user"
        namecheap_domains_create_in_optname["BillingAddress2"]="billing-address2"
        namecheap_domains_create_in_type["BillingAddress2"]="String"
        namecheap_domains_create_in_maxlen["BillingAddress2"]="255"
        namecheap_domains_create_in_required["BillingAddress2"]="No"

        namecheap_domains_create_in["BillingCity"]="City of the Billing user"
        namecheap_domains_create_in_optname["BillingCity"]="billing-city"
        namecheap_domains_create_in_type["BillingCity"]="String"
        namecheap_domains_create_in_maxlen["BillingCity"]="50"
        namecheap_domains_create_in_required["BillingCity"]="No"

        namecheap_domains_create_in["BillingStateProvince"]="State/Province of the Billing user"
        namecheap_domains_create_in_optname["BillingStateProvince"]="billing-state-province"
        namecheap_domains_create_in_type["BillingStateProvince"]="String"
        namecheap_domains_create_in_maxlen["BillingStateProvince"]="50"
        namecheap_domains_create_in_required["BillingStateProvince"]="No"

        namecheap_domains_create_in["BillingStateProvinceChoice"]="StateProvinceChoice of the Billing user"
        namecheap_domains_create_in_optname["BillingStateProvinceChoice"]="billing-state-province-choice"
        namecheap_domains_create_in_type["BillingStateProvinceChoice"]="String"
        namecheap_domains_create_in_maxlen["BillingStateProvinceChoice"]="50"
        namecheap_domains_create_in_required["BillingStateProvinceChoice"]="No"

        namecheap_domains_create_in["BillingPostalCode"]="PostalCode of the Billing user"
        namecheap_domains_create_in_optname["BillingPostalCode"]="billing-postal-code"
        namecheap_domains_create_in_type["BillingPostalCode"]="String"
        namecheap_domains_create_in_maxlen["BillingPostalCode"]="50"
        namecheap_domains_create_in_required["BillingPostalCode"]="No"

        namecheap_domains_create_in["BillingCountry"]="Country of the Billing user"
        namecheap_domains_create_in_optname["BillingCountry"]="billing-country"
        namecheap_domains_create_in_type["BillingCountry"]="String"
        namecheap_domains_create_in_maxlen["BillingCountry"]="50"
        namecheap_domains_create_in_required["BillingCountry"]="No"

        namecheap_domains_create_in["BillingPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["BillingPhone"]="billing-phone"
        namecheap_domains_create_in_type["BillingPhone"]="String"
        namecheap_domains_create_in_maxlen["BillingPhone"]="50"
        namecheap_domains_create_in_required["BillingPhone"]="No"

        namecheap_domains_create_in["BillingPhoneExt"]="PhoneExt of the Billing user"
        namecheap_domains_create_in_optname["BillingPhoneExt"]="billing-phone-ext"
        namecheap_domains_create_in_type["BillingPhoneExt"]="String"
        namecheap_domains_create_in_maxlen["BillingPhoneExt"]="50"
        namecheap_domains_create_in_required["BillingPhoneExt"]="No"

        namecheap_domains_create_in["BillingFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_create_in_optname["BillingFax"]="billing-fax"
        namecheap_domains_create_in_type["BillingFax"]="String"
        namecheap_domains_create_in_maxlen["BillingFax"]="50"
        namecheap_domains_create_in_required["BillingFax"]="No"

        namecheap_domains_create_in["BillingEmailAddress"]="Email address of the Billing user"
        namecheap_domains_create_in_optname["BillingEmailAddress"]="billing-email-address"
        namecheap_domains_create_in_type["BillingEmailAddress"]="String"
        namecheap_domains_create_in_maxlen["BillingEmailAddress"]="255"
        namecheap_domains_create_in_required["BillingEmailAddress"]="No"

        namecheap_domains_create_in["IdnCode"]="Code of Internationalized Domain Name (please refer to the note below)"
        namecheap_domains_create_in_optname["IdnCode"]="idn-code"
        namecheap_domains_create_in_type["IdnCode"]="String"
        namecheap_domains_create_in_maxlen["IdnCode"]="100"
        namecheap_domains_create_in_required["IdnCode"]="No"

        namecheap_domains_create_in["Extended"]="Yes Required for .us, .eu, .ca, .co.uk, .org.uk, .me.uk, .nu ,
"
        namecheap_domains_create_in_optname["Extended"]="extended"
        namecheap_domains_create_in_type["Extended"]="attributes"
        namecheap_domains_create_in_maxlen["Extended"]="String"
        namecheap_domains_create_in_required["Extended"]="No"

        namecheap_domains_create_in[".com.au,"]=".nom.es, .com.es, .org.es, .de, .fr TLDs only"
        namecheap_domains_create_in_optname[".com.au,"]=".com.au,"
        namecheap_domains_create_in_type[".com.au,"]=".net.au,"
        namecheap_domains_create_in_maxlen[".com.au,"]=".org.au,"
        namecheap_domains_create_in_required[".com.au,"]=".es,"

        namecheap_domains_create_in["Nameservers"]="Comma-separated list of custom nameservers to be associated with the domain name"
        namecheap_domains_create_in_optname["Nameservers"]="nameservers"
        namecheap_domains_create_in_type["Nameservers"]="String"
        namecheap_domains_create_in_maxlen["Nameservers"]="No"
        namecheap_domains_create_in_required["Nameservers"]="No"

        namecheap_domains_create_in["AddFreeWhoisguard"]="Adds free domain privacy for the domain Default Value: no"
        namecheap_domains_create_in_optname["AddFreeWhoisguard"]="add-free-whoisguard"
        namecheap_domains_create_in_type["AddFreeWhoisguard"]="String"
        namecheap_domains_create_in_maxlen["AddFreeWhoisguard"]="10"
        namecheap_domains_create_in_required["AddFreeWhoisguard"]="No"

        namecheap_domains_create_in["WGEnabled"]="Enables free domain privacy for the domain  Default Value: no"
        namecheap_domains_create_in_optname["WGEnabled"]="w-g-enabled"
        namecheap_domains_create_in_type["WGEnabled"]="String"
        namecheap_domains_create_in_maxlen["WGEnabled"]="10"
        namecheap_domains_create_in_required["WGEnabled"]="No"

        namecheap_domains_create_in["IsPremiumDomain"]="Indication if the domain name is premium"
        namecheap_domains_create_in_optname["IsPremiumDomain"]="is-premium-domain"
        namecheap_domains_create_in_type["IsPremiumDomain"]="Boolean"
        namecheap_domains_create_in_maxlen["IsPremiumDomain"]="10"
        namecheap_domains_create_in_required["IsPremiumDomain"]="No"

        namecheap_domains_create_in["PremiumPrice"]="Registration price for the premium domain"
        namecheap_domains_create_in_optname["PremiumPrice"]="premium-price"
        namecheap_domains_create_in_type["PremiumPrice"]="Currency"
        namecheap_domains_create_in_maxlen["PremiumPrice"]="20"
        namecheap_domains_create_in_required["PremiumPrice"]="No"

        namecheap_domains_create_in["EapFee"]="Purchase fee for the premium domain during Early Access Program (EAP)*"
        namecheap_domains_create_in_optname["EapFee"]="eap-fee"
        namecheap_domains_create_in_type["EapFee"]="Currency"
        namecheap_domains_create_in_maxlen["EapFee"]="20"
        namecheap_domains_create_in_required["EapFee"]="No"

    # Response Parameters
        declare -A namecheap_domains_create_out
        namecheap_domains_create_out["Domain"]="Domain name that you are trying to register."
        namecheap_domains_create_out["Registered"]="Possible responses: True, False. Indicates whether the domain was registered."
        namecheap_domains_create_out["ChargedAmount"]="Total amount charged for registration."
        namecheap_domains_create_out["DomainID"]="Unique integer value that represents the domain."
        namecheap_domains_create_out["OrderID"]="Unique integer value that represents the order."
        namecheap_domains_create_out["TransactionID"]="Unique integer value that represents the transaction."
        namecheap_domains_create_out["WhoisguardEnable"]="Possible responses: True, False. Indicates whether domain privacy protection is enabled for the domain."
        namecheap_domains_create_out["NonRealTimeDomain"]="Possible responses: True, False. Indicates whether the domain registration is instant (real-time) or not."

    # Error Codes
        declare -A namecheap_domains_create_error
        namecheap_domains_create_error[2033409]="Possibly a logical error at the authentication phase. The order chargeable for the Username is not found"
        namecheap_domains_create_error[2033407,]="2033270 Cannot enable domain privacy when AddWhoisguard is set to NO"
        namecheap_domains_create_error[2015182]="Contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"
        namecheap_domains_create_error[2015267]="EUAgreeDelete option should not be set to NO"
        namecheap_domains_create_error[2011170]="Validation error from PromotionCode"
        namecheap_domains_create_error[2011280]="Validation error from TLD"
        namecheap_domains_create_error[2015167]="Validation error from Years"
        namecheap_domains_create_error[2030280]="TLD is not supported in API"
        namecheap_domains_create_error[2011168]="Nameservers are not valid"
        namecheap_domains_create_error[2011322]="Extended Attributes are not valid"
        namecheap_domains_create_error[2010323]="Check the required field for billing domain contacts"
        namecheap_domains_create_error[2528166]="Order creation failed"
        namecheap_domains_create_error[3019166,]="4019166 Domain not available"
        namecheap_domains_create_error[3031166]="Error while getting information from the provider"
        namecheap_domains_create_error[3028166]="Error from Enom ( Errcount <> 0 )"
        namecheap_domains_create_error[3031900]="Unknown response from the provider"
        namecheap_domains_create_error[4023271]="Error while adding a free PositiveSSL for the domain"
        namecheap_domains_create_error[3031166]="Error while getting a domain status from Enom"
        namecheap_domains_create_error[4023166]="Error while adding a domain"
        namecheap_domains_create_error[5050900]="Unknown error while adding a domain to your account"
        namecheap_domains_create_error[4026312]="Error in refunding funds"
        namecheap_domains_create_error[5026900]="Unknown exceptions error while refunding funds"
        namecheap_domains_create_error[2515610]="Prices do not match"
        namecheap_domains_create_error[2515623]="Domain is premium while considered regular or is regular while considered premium"
        namecheap_domains_create_error[2005]="Country name is not valid"

# Package namecheap.domains.dns, Command getEmailForwarding
# (generated from file domains-dns/get-email-forwarding/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_getEmailForwarding_in
        declare -A namecheap_domains_dns_getEmailForwarding_in_name
        declare -A namecheap_domains_dns_getEmailForwarding_in_type
        declare -A namecheap_domains_dns_getEmailForwarding_in_maxlen
        declare -A namecheap_domains_dns_getEmailForwarding_in_required
        declare -A namecheap_domains_dns_getEmailForwarding_in_description

        namecheap_domains_dns_getEmailForwarding_in["DomainName"]="Domain name to get settings"
        namecheap_domains_dns_getEmailForwarding_in_optname["DomainName"]="domain-name"
        namecheap_domains_dns_getEmailForwarding_in_type["DomainName"]="String"
        namecheap_domains_dns_getEmailForwarding_in_maxlen["DomainName"]="70"
        namecheap_domains_dns_getEmailForwarding_in_required["DomainName"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_getEmailForwarding_out
        namecheap_domains_dns_getEmailForwarding_out["Domain"]="The domain name for which you are trying to get email forwarding details."
        namecheap_domains_dns_getEmailForwarding_out["Mailbox"]="The email forwarding mailbox that was created."

    # Error Codes
        declare -A namecheap_domains_dns_getEmailForwarding_error
        namecheap_domains_dns_getEmailForwarding_error[2019166]="Domain not found"
        namecheap_domains_dns_getEmailForwarding_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_dns_getEmailForwarding_error[2030288]="Cannot complete this command as this domain is not using proper DNS servers"
        namecheap_domains_dns_getEmailForwarding_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_getEmailForwarding_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_getEmailForwarding_error[4022328]="Unable to get EmailForwarding records from database"
        namecheap_domains_dns_getEmailForwarding_error[3011288]="Invalid nameserver"
        namecheap_domains_dns_getEmailForwarding_error[5050900]="Unhandled Exceptions"

# Package namecheap.domains.dns, Command getHosts
# (generated from file domains-dns/get-hosts/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_getHosts_in
        declare -A namecheap_domains_dns_getHosts_in_name
        declare -A namecheap_domains_dns_getHosts_in_type
        declare -A namecheap_domains_dns_getHosts_in_maxlen
        declare -A namecheap_domains_dns_getHosts_in_required
        declare -A namecheap_domains_dns_getHosts_in_description

        namecheap_domains_dns_getHosts_in["SLD"]="SLD of the domain to getHosts"
        namecheap_domains_dns_getHosts_in_optname["SLD"]="s-l-d"
        namecheap_domains_dns_getHosts_in_type["SLD"]="String"
        namecheap_domains_dns_getHosts_in_maxlen["SLD"]="70"
        namecheap_domains_dns_getHosts_in_required["SLD"]="Yes"

        namecheap_domains_dns_getHosts_in["TLD"]="TLD of the domain to getHosts"
        namecheap_domains_dns_getHosts_in_optname["TLD"]="t-l-d"
        namecheap_domains_dns_getHosts_in_type["TLD"]="String"
        namecheap_domains_dns_getHosts_in_maxlen["TLD"]="10"
        namecheap_domains_dns_getHosts_in_required["TLD"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_getHosts_out
        namecheap_domains_dns_getHosts_out["Domain"]="The domain name for which you are trying to get the host records"
        namecheap_domains_dns_getHosts_out["IsUsingOurDNS"]="Indicates whether Namecheap’s default name servers are used"
        namecheap_domains_dns_getHosts_out["HostID"]="UniqueID of the host records"
        namecheap_domains_dns_getHosts_out["Name"]="The domain or subdomain for which host record is set"
        namecheap_domains_dns_getHosts_out["Type"]="The type of host record that is set"
        namecheap_domains_dns_getHosts_out["Address"]="The value that is set for the host record (IP address for A record, URL for URL redirects, etc.)"
        namecheap_domains_dns_getHosts_out["MXPref"]="MXPreference number"
        namecheap_domains_dns_getHosts_out["TTL"]="TTL value for the host record"

    # Error Codes
        declare -A namecheap_domains_dns_getHosts_error
        namecheap_domains_dns_getHosts_error[2019166]="Domain not found"
        namecheap_domains_dns_getHosts_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_dns_getHosts_error[2030288]="Cannot complete this command as this domain is not using proper DNS servers"
        namecheap_domains_dns_getHosts_error[4023330]="Unable to get DNS hosts from list"
        namecheap_domains_dns_getHosts_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_getHosts_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_getHosts_error[3011288]="Invalid name server specified"
        namecheap_domains_dns_getHosts_error[5050900]="Unhandled Exceptions"

# Package namecheap.domains.dns, Command getList
# (generated from file domains-dns/get-list/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_getList_in
        declare -A namecheap_domains_dns_getList_in_name
        declare -A namecheap_domains_dns_getList_in_type
        declare -A namecheap_domains_dns_getList_in_maxlen
        declare -A namecheap_domains_dns_getList_in_required
        declare -A namecheap_domains_dns_getList_in_description

        namecheap_domains_dns_getList_in["SLD"]="SLD of the DomainName"
        namecheap_domains_dns_getList_in_optname["SLD"]="s-l-d"
        namecheap_domains_dns_getList_in_type["SLD"]="String"
        namecheap_domains_dns_getList_in_maxlen["SLD"]="70"
        namecheap_domains_dns_getList_in_required["SLD"]="Yes"

        namecheap_domains_dns_getList_in["TLD"]="TLD of the DomainName"
        namecheap_domains_dns_getList_in_optname["TLD"]="t-l-d"
        namecheap_domains_dns_getList_in_type["TLD"]="String"
        namecheap_domains_dns_getList_in_maxlen["TLD"]="10"
        namecheap_domains_dns_getList_in_required["TLD"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_getList_out
        namecheap_domains_dns_getList_out["Domain"]="The domain name for which you are trying to get DNS details for."
        namecheap_domains_dns_getList_out["IsUsingOurDNS"]="Indicates whether Namecheap’s default nameservers are used."

    # Error Codes
        declare -A namecheap_domains_dns_getList_error
        namecheap_domains_dns_getList_error[2019166]="Domain not found"
        namecheap_domains_dns_getList_error[2016166]="Domain is not associated with your account"
        namecheap_domains_dns_getList_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_getList_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_getList_error[4022288]="Unable to get nameserver list"

# Package namecheap.domains.dns, Command setCustom
# (generated from file domains-dns/set-custom/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_setCustom_in
        declare -A namecheap_domains_dns_setCustom_in_name
        declare -A namecheap_domains_dns_setCustom_in_type
        declare -A namecheap_domains_dns_setCustom_in_maxlen
        declare -A namecheap_domains_dns_setCustom_in_required
        declare -A namecheap_domains_dns_setCustom_in_description

        namecheap_domains_dns_setCustom_in["SLD"]="SLD of the DomainName"
        namecheap_domains_dns_setCustom_in_optname["SLD"]="s-l-d"
        namecheap_domains_dns_setCustom_in_type["SLD"]="String"
        namecheap_domains_dns_setCustom_in_maxlen["SLD"]="70"
        namecheap_domains_dns_setCustom_in_required["SLD"]="Yes"

        namecheap_domains_dns_setCustom_in["TLD"]="TLD of the DomainName"
        namecheap_domains_dns_setCustom_in_optname["TLD"]="t-l-d"
        namecheap_domains_dns_setCustom_in_type["TLD"]="String"
        namecheap_domains_dns_setCustom_in_maxlen["TLD"]="10"
        namecheap_domains_dns_setCustom_in_required["TLD"]="Yes"

        namecheap_domains_dns_setCustom_in["Nameservers"]="A comma-separated list of name servers to be associated with this domain"
        namecheap_domains_dns_setCustom_in_optname["Nameservers"]="nameservers"
        namecheap_domains_dns_setCustom_in_type["Nameservers"]="String"
        namecheap_domains_dns_setCustom_in_maxlen["Nameservers"]="1200"
        namecheap_domains_dns_setCustom_in_required["Nameservers"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_setCustom_out
        namecheap_domains_dns_setCustom_out["Domain"]="The domain name that you are trying to set custom nameservers for."
        namecheap_domains_dns_setCustom_out["Updated"]="Indicates whether the custom nameservers were set successfully."

    # Error Codes
        declare -A namecheap_domains_dns_setCustom_error
        namecheap_domains_dns_setCustom_error[2019166]="Domain not found"
        namecheap_domains_dns_setCustom_error[2016166]="Domain is not associated with your account"
        namecheap_domains_dns_setCustom_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_dns_setCustom_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_setCustom_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_setCustom_error[4022288]="Unable to get nameserver list"

# Package namecheap.domains.dns, Command setDefault
# (generated from file domains-dns/set-default/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_setDefault_in
        declare -A namecheap_domains_dns_setDefault_in_name
        declare -A namecheap_domains_dns_setDefault_in_type
        declare -A namecheap_domains_dns_setDefault_in_maxlen
        declare -A namecheap_domains_dns_setDefault_in_required
        declare -A namecheap_domains_dns_setDefault_in_description

        namecheap_domains_dns_setDefault_in["SLD"]="SLD of the DomainName"
        namecheap_domains_dns_setDefault_in_optname["SLD"]="s-l-d"
        namecheap_domains_dns_setDefault_in_type["SLD"]="String"
        namecheap_domains_dns_setDefault_in_maxlen["SLD"]="70"
        namecheap_domains_dns_setDefault_in_required["SLD"]="Yes"

        namecheap_domains_dns_setDefault_in["TLD"]="TLD of the DomainName"
        namecheap_domains_dns_setDefault_in_optname["TLD"]="t-l-d"
        namecheap_domains_dns_setDefault_in_type["TLD"]="String"
        namecheap_domains_dns_setDefault_in_maxlen["TLD"]="10"
        namecheap_domains_dns_setDefault_in_required["TLD"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_setDefault_out
        namecheap_domains_dns_setDefault_out["Domain"]="The domain name that you are trying to set default nameservers for."
        namecheap_domains_dns_setDefault_out["Updated"]="Indicates whether the default nameservers were set successfully."

    # Error Codes
        declare -A namecheap_domains_dns_setDefault_error
        namecheap_domains_dns_setDefault_error[2019166]="Domain not found"
        namecheap_domains_dns_setDefault_error[2016166]="Domain is not associated with your account"
        namecheap_domains_dns_setDefault_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_dns_setDefault_error[3013288]="Too many records"
        namecheap_domains_dns_setDefault_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_setDefault_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_setDefault_error[4022288]="Unable to get nameserver list"

# Package namecheap.domains.dns, Command setEmailForwarding
# (generated from file domains-dns/set-email-forwarding/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_setEmailForwarding_in
        declare -A namecheap_domains_dns_setEmailForwarding_in_name
        declare -A namecheap_domains_dns_setEmailForwarding_in_type
        declare -A namecheap_domains_dns_setEmailForwarding_in_maxlen
        declare -A namecheap_domains_dns_setEmailForwarding_in_required
        declare -A namecheap_domains_dns_setEmailForwarding_in_description

        namecheap_domains_dns_setEmailForwarding_in["DomainName"]="Domain name to set settings"
        namecheap_domains_dns_setEmailForwarding_in_optname["DomainName"]="domain-name"
        namecheap_domains_dns_setEmailForwarding_in_type["DomainName"]="String"
        namecheap_domains_dns_setEmailForwarding_in_maxlen["DomainName"]="70"
        namecheap_domains_dns_setEmailForwarding_in_required["DomainName"]="Yes"

        namecheap_domains_dns_setEmailForwarding_in["MailBox[1..n]"]="MailBox for which you wish to set email forwarding. For example:example@namecheap.com"
        namecheap_domains_dns_setEmailForwarding_in_optname["MailBox[1..n]"]="mail-box[1..n]"
        namecheap_domains_dns_setEmailForwarding_in_type["MailBox[1..n]"]="String"
        namecheap_domains_dns_setEmailForwarding_in_maxlen["MailBox[1..n]"]="No"
        namecheap_domains_dns_setEmailForwarding_in_required["MailBox[1..n]"]="Yes"

        namecheap_domains_dns_setEmailForwarding_in["ForwardTo[1..n]"]="Email address to forwardto.For example:example@gmail.com"
        namecheap_domains_dns_setEmailForwarding_in_optname["ForwardTo[1..n]"]="forward-to[1..n]"
        namecheap_domains_dns_setEmailForwarding_in_type["ForwardTo[1..n]"]="String"
        namecheap_domains_dns_setEmailForwarding_in_maxlen["ForwardTo[1..n]"]="No"
        namecheap_domains_dns_setEmailForwarding_in_required["ForwardTo[1..n]"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_dns_setEmailForwarding_out
        namecheap_domains_dns_setEmailForwarding_out["Domain"]="The domain name for which you are trying to set emailforwarding."
        namecheap_domains_dns_setEmailForwarding_out["IsSuccess"]="Indicates whether email forwarding were set successfully."

    # Error Codes
        declare -A namecheap_domains_dns_setEmailForwarding_error
        namecheap_domains_dns_setEmailForwarding_error[2019166]="Domain not found"
        namecheap_domains_dns_setEmailForwarding_error[2016166]="Domain is not associated with your account"
        namecheap_domains_dns_setEmailForwarding_error[2030288]="Cannot complete this command as this domain is not using proper DNS servers"
        namecheap_domains_dns_setEmailForwarding_error[2030166]="Edit Permission for domain is not supported"
        namecheap_domains_dns_setEmailForwarding_error[3013288]="Too many records"
        namecheap_domains_dns_setEmailForwarding_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_setEmailForwarding_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_setEmailForwarding_error[4022228]="Unable to get nameserver list"

# Package namecheap.domains.dns, Command setHosts
# (generated from file domains-dns/set-hosts/index.html)

    # Request Parameters
        declare -A namecheap_domains_dns_setHosts_in
        declare -A namecheap_domains_dns_setHosts_in_name
        declare -A namecheap_domains_dns_setHosts_in_type
        declare -A namecheap_domains_dns_setHosts_in_maxlen
        declare -A namecheap_domains_dns_setHosts_in_required
        declare -A namecheap_domains_dns_setHosts_in_description

        namecheap_domains_dns_setHosts_in["SLD"]="SLD of the domain to setHosts"
        namecheap_domains_dns_setHosts_in_optname["SLD"]="s-l-d"
        namecheap_domains_dns_setHosts_in_type["SLD"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["SLD"]="70"
        namecheap_domains_dns_setHosts_in_required["SLD"]="Yes"

        namecheap_domains_dns_setHosts_in["TLD"]="TLD of the domain to setHosts"
        namecheap_domains_dns_setHosts_in_optname["TLD"]="t-l-d"
        namecheap_domains_dns_setHosts_in_type["TLD"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["TLD"]="10"
        namecheap_domains_dns_setHosts_in_required["TLD"]="Yes"

        namecheap_domains_dns_setHosts_in["HostName[1..n]"]="Sub-domain/hostname to create the record for"
        namecheap_domains_dns_setHosts_in_optname["HostName[1..n]"]="host-name[1..n]"
        namecheap_domains_dns_setHosts_in_type["HostName[1..n]"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["HostName[1..n]"]="No"
        namecheap_domains_dns_setHosts_in_required["HostName[1..n]"]="Yes"

        namecheap_domains_dns_setHosts_in["RecordType[1..n]"]="Possible values: A, AAAA, ALIAS, CAA, CNAME, MX, MXE, NS, TXT, URL, URL301, FRAME"
        namecheap_domains_dns_setHosts_in_optname["RecordType[1..n]"]="record-type[1..n]"
        namecheap_domains_dns_setHosts_in_type["RecordType[1..n]"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["RecordType[1..n]"]="No"
        namecheap_domains_dns_setHosts_in_required["RecordType[1..n]"]="Yes"

        namecheap_domains_dns_setHosts_in["Address[1..n]"]="Possible values are URL or IP address. The value for this parameter is based on RecordType."
        namecheap_domains_dns_setHosts_in_optname["Address[1..n]"]="address[1..n]"
        namecheap_domains_dns_setHosts_in_type["Address[1..n]"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["Address[1..n]"]="No"
        namecheap_domains_dns_setHosts_in_required["Address[1..n]"]="Yes"

        namecheap_domains_dns_setHosts_in["MXPref[1..n]"]="MX preference for host. Applicable for MX records only."
        namecheap_domains_dns_setHosts_in_optname["MXPref[1..n]"]="m-x-pref[1..n]"
        namecheap_domains_dns_setHosts_in_type["MXPref[1..n]"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["MXPref[1..n]"]="No"
        namecheap_domains_dns_setHosts_in_required["MXPref[1..n]"]="Yes"

        namecheap_domains_dns_setHosts_in["EmailType"]="Possible values are:
"
        namecheap_domains_dns_setHosts_in_optname["EmailType"]="email-type"
        namecheap_domains_dns_setHosts_in_type["EmailType"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["EmailType"]="No"
        namecheap_domains_dns_setHosts_in_required["EmailType"]="Yes"

        namecheap_domains_dns_setHosts_in["MXE"]="up your custom MXE record.
"
        namecheap_domains_dns_setHosts_in_optname["MXE"]="m-x-e"
        namecheap_domains_dns_setHosts_in_type["MXE"]="-"
        namecheap_domains_dns_setHosts_in_maxlen["MXE"]="to"
        namecheap_domains_dns_setHosts_in_required["MXE"]="set"

        namecheap_domains_dns_setHosts_in["MX"]="up custom MX records of your mail provider.
"
        namecheap_domains_dns_setHosts_in_optname["MX"]="m-x"
        namecheap_domains_dns_setHosts_in_type["MX"]="-"
        namecheap_domains_dns_setHosts_in_maxlen["MX"]="to"
        namecheap_domains_dns_setHosts_in_required["MX"]="set"

        namecheap_domains_dns_setHosts_in["FWD"]="up MX records for our Free Email Forwarding service.
"
        namecheap_domains_dns_setHosts_in_optname["FWD"]="f-w-d"
        namecheap_domains_dns_setHosts_in_type["FWD"]="-"
        namecheap_domains_dns_setHosts_in_maxlen["FWD"]="to"
        namecheap_domains_dns_setHosts_in_required["FWD"]="set"

        namecheap_domains_dns_setHosts_in["OX"]="up MX records for our Private Email service."
        namecheap_domains_dns_setHosts_in_optname["OX"]="o-x"
        namecheap_domains_dns_setHosts_in_type["OX"]="-"
        namecheap_domains_dns_setHosts_in_maxlen["OX"]="to"
        namecheap_domains_dns_setHosts_in_required["OX"]="set"

        namecheap_domains_dns_setHosts_in["TTL[1..n]"]="Time to live for all record types.Possible values: any value between 60 to 60000 Default Value: 1800"
        namecheap_domains_dns_setHosts_in_optname["TTL[1..n]"]="t-t-l[1..n]"
        namecheap_domains_dns_setHosts_in_type["TTL[1..n]"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["TTL[1..n]"]="No"
        namecheap_domains_dns_setHosts_in_required["TTL[1..n]"]="No"

        namecheap_domains_dns_setHosts_in["Flag"]="Is an unsigned integer between 0 and 255. The flag value is an 8-bit number, the most significant bit of which indicates the criticality of understanding of a record by a CA. It's recommended to use '0'"
        namecheap_domains_dns_setHosts_in_optname["Flag"]="flag"
        namecheap_domains_dns_setHosts_in_type["Flag"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["Flag"]="No"
        namecheap_domains_dns_setHosts_in_required["Flag"]="No"

        namecheap_domains_dns_setHosts_in["Tag"]="A non-zero sequence of US-ASCII letters and numbers in lower case. The tag value can be one of the following values: issue — specifies the certification authority that is authorized to issue a certificate for the domain name or subdomain record used in the title. issuewild — specifies the certification authority that is allowed to issue a wildcard certificate for the domain name or subdomain record used in the title. The certificate applies to the domain name or subdomain directly and to all its subdomains. iodef — specifies the e-mail address or URL (compliant with RFC 5070) a CA should use to notify a client if any issuance policy violation spotted by this CA."
        namecheap_domains_dns_setHosts_in_optname["Tag"]="tag"
        namecheap_domains_dns_setHosts_in_type["Tag"]="String"
        namecheap_domains_dns_setHosts_in_maxlen["Tag"]="No"
        namecheap_domains_dns_setHosts_in_required["Tag"]="No"

    # Response Parameters
        declare -A namecheap_domains_dns_setHosts_out
        namecheap_domains_dns_setHosts_out["Domain"]="The domain name for which you are trying to set host records."
        namecheap_domains_dns_setHosts_out["IsSuccess"]="Indicates whether host records were set successfully."

    # Error Codes
        declare -A namecheap_domains_dns_setHosts_error
        namecheap_domains_dns_setHosts_error[2019166]="Domain not found"
        namecheap_domains_dns_setHosts_error[2016166]="Domain is not associated with your account"
        namecheap_domains_dns_setHosts_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_dns_setHosts_error[3013288,]="4013288 Too many records"
        namecheap_domains_dns_setHosts_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_dns_setHosts_error[3050900]="Unknown error from Enom"
        namecheap_domains_dns_setHosts_error[4022288]="Unable to get nameserver list"

# Package namecheap.domains, Command getContacts
# (generated from file domains/get-contacts/index.html)

    # Request Parameters
        declare -A namecheap_domains_getContacts_in
        declare -A namecheap_domains_getContacts_in_name
        declare -A namecheap_domains_getContacts_in_type
        declare -A namecheap_domains_getContacts_in_maxlen
        declare -A namecheap_domains_getContacts_in_required
        declare -A namecheap_domains_getContacts_in_description

        namecheap_domains_getContacts_in["DomainName"]="Domain to get contacts"
        namecheap_domains_getContacts_in_optname["DomainName"]="domain-name"
        namecheap_domains_getContacts_in_type["DomainName"]="String"
        namecheap_domains_getContacts_in_maxlen["DomainName"]="70"
        namecheap_domains_getContacts_in_required["DomainName"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_getContacts_out
        namecheap_domains_getContacts_out["Domain"]="The registered domain name"
        namecheap_domains_getContacts_out["DomainnameID"]="A unique integer value that represents the domain"
        namecheap_domains_getContacts_out["Readonly"]="Possible values: True, False. Indicates whether contact information can be edited or is read-only."

    # Error Codes
        declare -A namecheap_domains_getContacts_error
        namecheap_domains_getContacts_error[2019166]="Domain not found"
        namecheap_domains_getContacts_error[2016166]="Domain is not associated with your account"
        namecheap_domains_getContacts_error[4019337]="Unable to retrieve domain contacts"
        namecheap_domains_getContacts_error[3016166]="Domain is not associated with Enom"
        namecheap_domains_getContacts_error[3019510]="This domain has expired/ was transferred out/ is not associated with your account"
        namecheap_domains_getContacts_error[3050900]="Unknown response from provider"
        namecheap_domains_getContacts_error[5050900]="Unknown exceptions"

# Package namecheap.domains, Command getInfo
# (generated from file domains/get-info/index.html)

    # Request Parameters
        declare -A namecheap_domains_getInfo_in
        declare -A namecheap_domains_getInfo_in_name
        declare -A namecheap_domains_getInfo_in_type
        declare -A namecheap_domains_getInfo_in_maxlen
        declare -A namecheap_domains_getInfo_in_required
        declare -A namecheap_domains_getInfo_in_description

        namecheap_domains_getInfo_in["DomainName"]="Domain name for which domain information needs to be requested"
        namecheap_domains_getInfo_in_optname["DomainName"]="domain-name"
        namecheap_domains_getInfo_in_type["DomainName"]="String"
        namecheap_domains_getInfo_in_maxlen["DomainName"]="70"
        namecheap_domains_getInfo_in_required["DomainName"]="Yes"

        namecheap_domains_getInfo_in["HostName"]="Hosted domain name for which domain information needs to be requested"
        namecheap_domains_getInfo_in_optname["HostName"]="host-name"
        namecheap_domains_getInfo_in_type["HostName"]="String"
        namecheap_domains_getInfo_in_maxlen["HostName"]="255"
        namecheap_domains_getInfo_in_required["HostName"]="No"

    # Response Parameters
        declare -A namecheap_domains_getInfo_out
        namecheap_domains_getInfo_out["Status"]="Indicates the status of the domain. Possible statuses: OK, Locked, Expired"
        namecheap_domains_getInfo_out["ID"]="Unique integer value that represents the domain"
        namecheap_domains_getInfo_out["DomainName"]="Domain name for which the information was requested"
        namecheap_domains_getInfo_out["OwnerName"]="User account under which the domain is registered"
        namecheap_domains_getInfo_out["IsOwner"]="Indicates whether the API user is the owner of the domain"
        namecheap_domains_getInfo_out["IsPremium"]="Indicates whether the domain name is premium"

    # Error Codes
        declare -A namecheap_domains_getInfo_error
        namecheap_domains_getInfo_error[5019169]="Unknown exceptions"
        namecheap_domains_getInfo_error[2030166]="Domain is invalid"
        namecheap_domains_getInfo_error[4011103*]="DomainName not Available   UserName not Available   Access denied   *For this error code, one of the three messages will be displayed."

# Package namecheap.domains, Command getList
# (generated from file domains/get-list/index.html)

    # Request Parameters
        declare -A namecheap_domains_getList_in
        declare -A namecheap_domains_getList_in_name
        declare -A namecheap_domains_getList_in_type
        declare -A namecheap_domains_getList_in_maxlen
        declare -A namecheap_domains_getList_in_required
        declare -A namecheap_domains_getList_in_description

        namecheap_domains_getList_in["ListType"]="Possible values are ALL, EXPIRING, or EXPIRED Default Value: ALL"
        namecheap_domains_getList_in_optname["ListType"]="list-type"
        namecheap_domains_getList_in_type["ListType"]="String"
        namecheap_domains_getList_in_maxlen["ListType"]="10"
        namecheap_domains_getList_in_required["ListType"]="No"

        namecheap_domains_getList_in["SearchTerm"]="Keyword to look for in the domain list"
        namecheap_domains_getList_in_optname["SearchTerm"]="search-term"
        namecheap_domains_getList_in_type["SearchTerm"]="String"
        namecheap_domains_getList_in_maxlen["SearchTerm"]="70"
        namecheap_domains_getList_in_required["SearchTerm"]="No"

        namecheap_domains_getList_in["Page"]="Page to return Default Value: 1"
        namecheap_domains_getList_in_optname["Page"]="page"
        namecheap_domains_getList_in_type["Page"]="Number"
        namecheap_domains_getList_in_maxlen["Page"]="10"
        namecheap_domains_getList_in_required["Page"]="No"

        namecheap_domains_getList_in["PageSize"]="Number of domains to be listed on a page. Minimum value is 10, and maximum value is 100. Default Value: 20"
        namecheap_domains_getList_in_optname["PageSize"]="page-size"
        namecheap_domains_getList_in_type["PageSize"]="Number"
        namecheap_domains_getList_in_maxlen["PageSize"]="10"
        namecheap_domains_getList_in_required["PageSize"]="No"

        namecheap_domains_getList_in["SortBy"]="Possible values are NAME, NAME_DESC, EXPIREDATE, EXPIREDATE_DESC, CREATEDATE, CREATEDATE_DESC"
        namecheap_domains_getList_in_optname["SortBy"]="sort-by"
        namecheap_domains_getList_in_type["SortBy"]="String"
        namecheap_domains_getList_in_maxlen["SortBy"]="50"
        namecheap_domains_getList_in_required["SortBy"]="No"

    # Response Parameters
        declare -A namecheap_domains_getList_out
        namecheap_domains_getList_out["ID"]="Unique integer value that represents the domain"
        namecheap_domains_getList_out["Name"]="Registered domain name"
        namecheap_domains_getList_out["User"]="User account under which the domain is registered"
        namecheap_domains_getList_out["Created"]="Domain creation date"
        namecheap_domains_getList_out["Expires"]="Domain expiration date"
        namecheap_domains_getList_out["IsExpired"]="Possible responses: True, False. Indicates whether the domain is expired"
        namecheap_domains_getList_out["IsLocked"]="Possible responses: True, False. Indicates whether the domain is locked. When Islocked=true, domain changes are not allowed."
        namecheap_domains_getList_out["AutoRenew"]="Possible responses: True, False. Indicates whether the domain is set for auto-renew"
        namecheap_domains_getList_out["WhoisGuard"]="Returns the domain privacy status"
        namecheap_domains_getList_out["IsPremium"]="Indicates whether the domain name is premium"
        namecheap_domains_getList_out["IsOurDNS"]="Returns true if Namecheap BasicDNS or Namecheap PremiumDNS are used; if something else, returns false"

    # Error Codes
        declare -A namecheap_domains_getList_error
        namecheap_domains_getList_error[5050169]="Unknown exceptions"

# Package namecheap.domains, Command getRegistrarLock
# (generated from file domains/get-registrar-lock/index.html)

    # Request Parameters
        declare -A namecheap_domains_getRegistrarLock_in
        declare -A namecheap_domains_getRegistrarLock_in_name
        declare -A namecheap_domains_getRegistrarLock_in_type
        declare -A namecheap_domains_getRegistrarLock_in_maxlen
        declare -A namecheap_domains_getRegistrarLock_in_required
        declare -A namecheap_domains_getRegistrarLock_in_description

        namecheap_domains_getRegistrarLock_in["DomainName"]="Domain name to get status for"
        namecheap_domains_getRegistrarLock_in_optname["DomainName"]="domain-name"
        namecheap_domains_getRegistrarLock_in_type["DomainName"]="String"
        namecheap_domains_getRegistrarLock_in_maxlen["DomainName"]="70"
        namecheap_domains_getRegistrarLock_in_required["DomainName"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_getRegistrarLock_out
        namecheap_domains_getRegistrarLock_out["Domain"]="The domain name for which you wish to get registrar lock status"
        namecheap_domains_getRegistrarLock_out["RegistrarLockStatus"]="Possible values: True, False. True indicates that the registrar lock is set."

    # Error Codes
        declare -A namecheap_domains_getRegistrarLock_error
        namecheap_domains_getRegistrarLock_error[2019166]="Domain not found"
        namecheap_domains_getRegistrarLock_error[2016166]="Domain is not associated with your account"
        namecheap_domains_getRegistrarLock_error[3031510]="Error response from provider when errorcount !=0"
        namecheap_domains_getRegistrarLock_error[3050900]="Unknown error response from Enom"
        namecheap_domains_getRegistrarLock_error[5050900]="Unknown exceptions"

# Package namecheap.domains, Command getTldList
# (generated from file domains/get-tld-list/index.html)

    # Request Parameters
        declare -A namecheap_domains_getTldList_in
        declare -A namecheap_domains_getTldList_in_name
        declare -A namecheap_domains_getTldList_in_type
        declare -A namecheap_domains_getTldList_in_maxlen
        declare -A namecheap_domains_getTldList_in_required
        declare -A namecheap_domains_getTldList_in_description

    # Response Parameters
        declare -A namecheap_domains_getTldList_out
        namecheap_domains_getTldList_out["Name"]="Indicates the top-level domain"
        namecheap_domains_getTldList_out["NonRealTimeDomain"]="Possible statuses: True, False. Indicates whether the domain registration is instant (real-time) or not."
        namecheap_domains_getTldList_out["MinRegisterYears"]="Minimum number of years the TLD can be registered for"
        namecheap_domains_getTldList_out["MaxRegisterYears"]="Maximum number of years the TLD can be registered for"
        namecheap_domains_getTldList_out["MinRenewYears"]="Minimum number of years the TLD can be renewed for"
        namecheap_domains_getTldList_out["MaxRenewYears"]="Maximum number of years the TLD can be renewed for"
        namecheap_domains_getTldList_out["MinTransferYears"]="Minimum number of years the TLD can be transferred for"
        namecheap_domains_getTldList_out["MaxTransferYears"]="Maximum number of years the TLD can be transferred for"
        namecheap_domains_getTldList_out["IsApiRegisterable"]="Indicates whether a domain with this TLD can be registered through API"
        namecheap_domains_getTldList_out["IsApiRenewable"]="Indicates whether a domain with this TLD can be renewed through API"
        namecheap_domains_getTldList_out["IsApiTransferable"]="Indicates whether a domain with this TLD can be transferred to Namecheap through API"
        namecheap_domains_getTldList_out["IsEppRequired"]="Indicates whether EPP code is required for this TLD"
        namecheap_domains_getTldList_out["IsDisableModContact"]="Indicates whether contact details can be modified for this TLD"
        namecheap_domains_getTldList_out["IsDisableWGAllot"]="Indicates whether domain privacy can be allotted for this TLD. If this field result is Yes, then we will not be able to allot WG for the TLD."
        namecheap_domains_getTldList_out["IsIncludeInExtendedSearchOnly"]="Indicates whether this TLD is shown in general search results or in extended search results only"
        namecheap_domains_getTldList_out["SequenceNumber"]="Indicates the sorting order in which TLDs are displayed on Namecheap website’s domain search results page"
        namecheap_domains_getTldList_out["Type"]="Indicates whether this is a generic TLD or country-code TLD"
        namecheap_domains_getTldList_out["IsSupportsIDN"]="Indicates whether IDN is supported for this TLD"
        namecheap_domains_getTldList_out["Category"]="Indicates the category of the domain"

    # Error Codes
        declare -A namecheap_domains_getTldList_error
        namecheap_domains_getTldList_error[2011166]="UserName is invalid"
        namecheap_domains_getTldList_error[3050900]="Unknown response from provider"

# Package namecheap.domains.ns, Command create
# (generated from file domains-ns/create/index.html)

    # Request Parameters
        declare -A namecheap_domains_ns_create_in
        declare -A namecheap_domains_ns_create_in_name
        declare -A namecheap_domains_ns_create_in_type
        declare -A namecheap_domains_ns_create_in_maxlen
        declare -A namecheap_domains_ns_create_in_required
        declare -A namecheap_domains_ns_create_in_description

        namecheap_domains_ns_create_in["SLD"]="SLD of the DomainName"
        namecheap_domains_ns_create_in_optname["SLD"]="s-l-d"
        namecheap_domains_ns_create_in_type["SLD"]="String"
        namecheap_domains_ns_create_in_maxlen["SLD"]="70"
        namecheap_domains_ns_create_in_required["SLD"]="Yes"

        namecheap_domains_ns_create_in["TLD"]="TLD of the DomainName"
        namecheap_domains_ns_create_in_optname["TLD"]="t-l-d"
        namecheap_domains_ns_create_in_type["TLD"]="String"
        namecheap_domains_ns_create_in_maxlen["TLD"]="10"
        namecheap_domains_ns_create_in_required["TLD"]="Yes"

        namecheap_domains_ns_create_in["Nameserver"]="Nameserver to create"
        namecheap_domains_ns_create_in_optname["Nameserver"]="nameserver"
        namecheap_domains_ns_create_in_type["Nameserver"]="String"
        namecheap_domains_ns_create_in_maxlen["Nameserver"]="150"
        namecheap_domains_ns_create_in_required["Nameserver"]="Yes"

        namecheap_domains_ns_create_in["IP"]="Nameserver IP address"
        namecheap_domains_ns_create_in_optname["IP"]="i-p"
        namecheap_domains_ns_create_in_type["IP"]="String"
        namecheap_domains_ns_create_in_maxlen["IP"]="15"
        namecheap_domains_ns_create_in_required["IP"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_ns_create_out
        namecheap_domains_ns_create_out["Domain"]="The domain name for which you are trying to create nameserver."
        namecheap_domains_ns_create_out["Nameserver"]="Returns the nameserver that was created."
        namecheap_domains_ns_create_out["IP"]="Returns the IP address set for the nameserver."
        namecheap_domains_ns_create_out["IsSuccess"]="Indicates whether the nameserver was set successfully."

    # Error Codes
        declare -A namecheap_domains_ns_create_error
        namecheap_domains_ns_create_error[2019166]="Domain not found"
        namecheap_domains_ns_create_error[2016166]="Domain is not associated with your account"
        namecheap_domains_ns_create_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_ns_create_error[3050900]="Unknown error from Enom"

# Package namecheap.domains.ns, Command delete
# (generated from file domains-ns/delete/index.html)

    # Request Parameters
        declare -A namecheap_domains_ns_delete_in
        declare -A namecheap_domains_ns_delete_in_name
        declare -A namecheap_domains_ns_delete_in_type
        declare -A namecheap_domains_ns_delete_in_maxlen
        declare -A namecheap_domains_ns_delete_in_required
        declare -A namecheap_domains_ns_delete_in_description

        namecheap_domains_ns_delete_in["SLD"]="SLD of the DomainName"
        namecheap_domains_ns_delete_in_optname["SLD"]="s-l-d"
        namecheap_domains_ns_delete_in_type["SLD"]="String"
        namecheap_domains_ns_delete_in_maxlen["SLD"]="70"
        namecheap_domains_ns_delete_in_required["SLD"]="Yes"

        namecheap_domains_ns_delete_in["TLD"]="TLD of the DomainName"
        namecheap_domains_ns_delete_in_optname["TLD"]="t-l-d"
        namecheap_domains_ns_delete_in_type["TLD"]="String"
        namecheap_domains_ns_delete_in_maxlen["TLD"]="10"
        namecheap_domains_ns_delete_in_required["TLD"]="Yes"

        namecheap_domains_ns_delete_in["Nameserver"]="Nameserver to delete"
        namecheap_domains_ns_delete_in_optname["Nameserver"]="nameserver"
        namecheap_domains_ns_delete_in_type["Nameserver"]="String"
        namecheap_domains_ns_delete_in_maxlen["Nameserver"]="150"
        namecheap_domains_ns_delete_in_required["Nameserver"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_ns_delete_out
        namecheap_domains_ns_delete_out["Domain"]="The domain name for which you are trying to delete name server."
        namecheap_domains_ns_delete_out["Nameserver"]="Returns the name server that was deleted."
        namecheap_domains_ns_delete_out["IsSuccess"]="Indicates whether the name server was deleted successfully."

    # Error Codes
        declare -A namecheap_domains_ns_delete_error
        namecheap_domains_ns_delete_error[2019166]="Domain not found"
        namecheap_domains_ns_delete_error[2016166]="Domain is not associated with your account"
        namecheap_domains_ns_delete_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_ns_delete_error[3050900]="Unknown error from Enom"

# Package namecheap.domains.ns, Command getInfo
# (generated from file domains-ns/getinfo/index.html)

    # Request Parameters
        declare -A namecheap_domains_ns_getInfo_in
        declare -A namecheap_domains_ns_getInfo_in_name
        declare -A namecheap_domains_ns_getInfo_in_type
        declare -A namecheap_domains_ns_getInfo_in_maxlen
        declare -A namecheap_domains_ns_getInfo_in_required
        declare -A namecheap_domains_ns_getInfo_in_description

        namecheap_domains_ns_getInfo_in["SLD"]="SLD of the DomainName"
        namecheap_domains_ns_getInfo_in_optname["SLD"]="s-l-d"
        namecheap_domains_ns_getInfo_in_type["SLD"]="String"
        namecheap_domains_ns_getInfo_in_maxlen["SLD"]="70"
        namecheap_domains_ns_getInfo_in_required["SLD"]="Yes"

        namecheap_domains_ns_getInfo_in["TLD"]="TLD of the DomainName"
        namecheap_domains_ns_getInfo_in_optname["TLD"]="t-l-d"
        namecheap_domains_ns_getInfo_in_type["TLD"]="String"
        namecheap_domains_ns_getInfo_in_maxlen["TLD"]="10"
        namecheap_domains_ns_getInfo_in_required["TLD"]="Yes"

        namecheap_domains_ns_getInfo_in["Nameserver"]="Nameserver"
        namecheap_domains_ns_getInfo_in_optname["Nameserver"]="nameserver"
        namecheap_domains_ns_getInfo_in_type["Nameserver"]="String"
        namecheap_domains_ns_getInfo_in_maxlen["Nameserver"]="150"
        namecheap_domains_ns_getInfo_in_required["Nameserver"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_ns_getInfo_out
        namecheap_domains_ns_getInfo_out["Domain"]="The domain name for which you are trying to get nameserver details."
        namecheap_domains_ns_getInfo_out["Nameserver"]="Returns the nameserver."
        namecheap_domains_ns_getInfo_out["IP"]="Returns the IP address set for the nameserver."

    # Error Codes
        declare -A namecheap_domains_ns_getInfo_error
        namecheap_domains_ns_getInfo_error[2019166]="Domain not found"
        namecheap_domains_ns_getInfo_error[2016166]="Domain is not associated with your account"
        namecheap_domains_ns_getInfo_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_ns_getInfo_error[3050900]="Unknown error from Enom"

# Package namecheap.domains.ns, Command update
# (generated from file domains-ns/update/index.html)

    # Request Parameters
        declare -A namecheap_domains_ns_update_in
        declare -A namecheap_domains_ns_update_in_name
        declare -A namecheap_domains_ns_update_in_type
        declare -A namecheap_domains_ns_update_in_maxlen
        declare -A namecheap_domains_ns_update_in_required
        declare -A namecheap_domains_ns_update_in_description

        namecheap_domains_ns_update_in["SLD"]="SLD of the Domain Name"
        namecheap_domains_ns_update_in_optname["SLD"]="s-l-d"
        namecheap_domains_ns_update_in_type["SLD"]="String"
        namecheap_domains_ns_update_in_maxlen["SLD"]="70"
        namecheap_domains_ns_update_in_required["SLD"]="Yes"

        namecheap_domains_ns_update_in["TLD"]="TLD of the Domain Name"
        namecheap_domains_ns_update_in_optname["TLD"]="t-l-d"
        namecheap_domains_ns_update_in_type["TLD"]="String"
        namecheap_domains_ns_update_in_maxlen["TLD"]="10"
        namecheap_domains_ns_update_in_required["TLD"]="Yes"

        namecheap_domains_ns_update_in["Nameserver"]="Nameserver"
        namecheap_domains_ns_update_in_optname["Nameserver"]="nameserver"
        namecheap_domains_ns_update_in_type["Nameserver"]="String"
        namecheap_domains_ns_update_in_maxlen["Nameserver"]="150"
        namecheap_domains_ns_update_in_required["Nameserver"]="Yes"

        namecheap_domains_ns_update_in["OldIP"]="Existing IP address"
        namecheap_domains_ns_update_in_optname["OldIP"]="old-i-p"
        namecheap_domains_ns_update_in_type["OldIP"]="String"
        namecheap_domains_ns_update_in_maxlen["OldIP"]="15"
        namecheap_domains_ns_update_in_required["OldIP"]="Yes"

        namecheap_domains_ns_update_in["IP"]="New IP address"
        namecheap_domains_ns_update_in_optname["IP"]="i-p"
        namecheap_domains_ns_update_in_type["IP"]="String"
        namecheap_domains_ns_update_in_maxlen["IP"]="15"
        namecheap_domains_ns_update_in_required["IP"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_ns_update_out
        namecheap_domains_ns_update_out["Domain"]="The domain name for which you are trying to update nameserver details."
        namecheap_domains_ns_update_out["Nameserver"]="Returns the nameserver that was updated."
        namecheap_domains_ns_update_out["IsSuccess"]="Indicates whether the nameserver was updated successfully."

    # Error Codes
        declare -A namecheap_domains_ns_update_error
        namecheap_domains_ns_update_error[2019166]="Domain not found"
        namecheap_domains_ns_update_error[2016166]="Domain is not associated with your account"
        namecheap_domains_ns_update_error[3031510]="Error From Enom when Errorcount <> 0"
        namecheap_domains_ns_update_error[3050900]="Unknown error from Enom"

# Package namecheap.domains, Command reactivate
# (generated from file domains/reactivate/index.html)

    # Request Parameters
        declare -A namecheap_domains_reactivate_in
        declare -A namecheap_domains_reactivate_in_name
        declare -A namecheap_domains_reactivate_in_type
        declare -A namecheap_domains_reactivate_in_maxlen
        declare -A namecheap_domains_reactivate_in_required
        declare -A namecheap_domains_reactivate_in_description

        namecheap_domains_reactivate_in["DomainName"]="Domain name to reactivate"
        namecheap_domains_reactivate_in_optname["DomainName"]="domain-name"
        namecheap_domains_reactivate_in_type["DomainName"]="String"
        namecheap_domains_reactivate_in_maxlen["DomainName"]="70"
        namecheap_domains_reactivate_in_required["DomainName"]="Yes"

        namecheap_domains_reactivate_in["PromotionCode"]="Promotional (coupon) code for reactivating the domain"
        namecheap_domains_reactivate_in_optname["PromotionCode"]="promotion-code"
        namecheap_domains_reactivate_in_type["PromotionCode"]="String"
        namecheap_domains_reactivate_in_maxlen["PromotionCode"]="70"
        namecheap_domains_reactivate_in_required["PromotionCode"]="No"

        namecheap_domains_reactivate_in["YearsToAdd"]="Number of years after expiry"
        namecheap_domains_reactivate_in_optname["YearsToAdd"]="years-to-add"
        namecheap_domains_reactivate_in_type["YearsToAdd"]="Number"
        namecheap_domains_reactivate_in_maxlen["YearsToAdd"]="2"
        namecheap_domains_reactivate_in_required["YearsToAdd"]="No"

        namecheap_domains_reactivate_in["IsPremiumDomain"]="Indication if the domain name is premium"
        namecheap_domains_reactivate_in_optname["IsPremiumDomain"]="is-premium-domain"
        namecheap_domains_reactivate_in_type["IsPremiumDomain"]="Boolean"
        namecheap_domains_reactivate_in_maxlen["IsPremiumDomain"]="10"
        namecheap_domains_reactivate_in_required["IsPremiumDomain"]="No"

        namecheap_domains_reactivate_in["PremiumPrice"]="Reactivation price for the premium domain"
        namecheap_domains_reactivate_in_optname["PremiumPrice"]="premium-price"
        namecheap_domains_reactivate_in_type["PremiumPrice"]="Currency"
        namecheap_domains_reactivate_in_maxlen["PremiumPrice"]="20"
        namecheap_domains_reactivate_in_required["PremiumPrice"]="No"

    # Response Parameters
        declare -A namecheap_domains_reactivate_out
        namecheap_domains_reactivate_out["DomainName"]="Domain name that you are trying to reactivate"
        namecheap_domains_reactivate_out["IsSuccess"]="Indicates whether the domain was reactivated successfully"
        namecheap_domains_reactivate_out["ChargedAmount"]="Total amount charged for reactivation"
        namecheap_domains_reactivate_out["OrderID"]="Unique integer value that represents the order"
        namecheap_domains_reactivate_out["TransactionID"]="Unique integer value that represents the transaction"

    # Error Codes
        declare -A namecheap_domains_reactivate_error
        namecheap_domains_reactivate_error[2033409]="Possibly a logical error at the authentication phase. The order chargeable for the Username is not found."
        namecheap_domains_reactivate_error[2019166]="Domain not found"
        namecheap_domains_reactivate_error[2030166]="Edit permission for the domain is not supported"
        namecheap_domains_reactivate_error[2011170]="Promotion code is invalid"
        namecheap_domains_reactivate_error[2011280]="TLD is invalid"
        namecheap_domains_reactivate_error[2528166]="Order creation failed"
        namecheap_domains_reactivate_error[3024510]="Error response from Enom while updating the domain"
        namecheap_domains_reactivate_error[3050511]="Unknown error response from Enom"
        namecheap_domains_reactivate_error[2020166]="Domain does not meet the expiration date for reactivation"
        namecheap_domains_reactivate_error[2016166]="Domain is not associated with your account"
        namecheap_domains_reactivate_error[5050900]="Unhandled exceptions"
        namecheap_domains_reactivate_error[4024166]="Failed to update the domain in your account"
        namecheap_domains_reactivate_error[2015170]="Promotion code is not allowed for premium domains"
        namecheap_domains_reactivate_error[2015167]="Premium domain can be reactivated for 1 year only"
        namecheap_domains_reactivate_error[2015610]="Premium prices cannot be zero for premium domains"
        namecheap_domains_reactivate_error[2515623]="You are trying to reactivate a premium domain. Premium price should be added to the request to reactivate the premium domain."
        namecheap_domains_reactivate_error[2511623]="Domain name is not premium"
        namecheap_domains_reactivate_error[2515610]="Premium price is incorrect. It should be (premium renewal price value)."

# Package namecheap.domains, Command renew
# (generated from file domains/renew/index.html)

    # Request Parameters
        declare -A namecheap_domains_renew_in
        declare -A namecheap_domains_renew_in_name
        declare -A namecheap_domains_renew_in_type
        declare -A namecheap_domains_renew_in_maxlen
        declare -A namecheap_domains_renew_in_required
        declare -A namecheap_domains_renew_in_description

        namecheap_domains_renew_in["DomainName"]="Domain name to renew"
        namecheap_domains_renew_in_optname["DomainName"]="domain-name"
        namecheap_domains_renew_in_type["DomainName"]="String"
        namecheap_domains_renew_in_maxlen["DomainName"]="70"
        namecheap_domains_renew_in_required["DomainName"]="Yes"

        namecheap_domains_renew_in["Years"]="Number of years to renew"
        namecheap_domains_renew_in_optname["Years"]="years"
        namecheap_domains_renew_in_type["Years"]="Number"
        namecheap_domains_renew_in_maxlen["Years"]="2"
        namecheap_domains_renew_in_required["Years"]="Yes"

        namecheap_domains_renew_in["PromotionCode"]="Promotional (coupon) code for renewing the domain"
        namecheap_domains_renew_in_optname["PromotionCode"]="promotion-code"
        namecheap_domains_renew_in_type["PromotionCode"]="String"
        namecheap_domains_renew_in_maxlen["PromotionCode"]="20"
        namecheap_domains_renew_in_required["PromotionCode"]="No"

        namecheap_domains_renew_in["IsPremiumDomain"]="Indication if the domain name is premium"
        namecheap_domains_renew_in_optname["IsPremiumDomain"]="is-premium-domain"
        namecheap_domains_renew_in_type["IsPremiumDomain"]="Boolean"
        namecheap_domains_renew_in_maxlen["IsPremiumDomain"]="10"
        namecheap_domains_renew_in_required["IsPremiumDomain"]="No"

        namecheap_domains_renew_in["PremiumPrice"]="Renewal price for the premium domain"
        namecheap_domains_renew_in_optname["PremiumPrice"]="premium-price"
        namecheap_domains_renew_in_type["PremiumPrice"]="Currency"
        namecheap_domains_renew_in_maxlen["PremiumPrice"]="20"
        namecheap_domains_renew_in_required["PremiumPrice"]="No"

    # Response Parameters
        declare -A namecheap_domains_renew_out
        namecheap_domains_renew_out["DomainName"]="Domain name that you are trying to renew"
        namecheap_domains_renew_out["DomainID"]="Unique integer value that represents the domain"
        namecheap_domains_renew_out["Renew"]="Indicates whether the domain was renewed successfully"
        namecheap_domains_renew_out["ChargedAmount"]="Total amount charged for the renewal"
        namecheap_domains_renew_out["OrderID"]="Unique integer value that represents the order"
        namecheap_domains_renew_out["TransactionID"]="Unique integer value that represents the transaction"

    # Error Codes
        declare -A namecheap_domains_renew_error
        namecheap_domains_renew_error[2033409]="Possibly a logical error at the authentication phase. The order chargeable for the Username is not found."
        namecheap_domains_renew_error[2011170]="Validation error from PromotionCode"
        namecheap_domains_renew_error[2011280]="TLD is invalid"
        namecheap_domains_renew_error[2528166]="Order creation failed"
        namecheap_domains_renew_error[2020166]="Domain has expired. Please reactivate your domain."
        namecheap_domains_renew_error[3028166]="Failed to renew, error from Enom"
        namecheap_domains_renew_error[3031510]="Error from Enom ( Errcount <> 0 )"
        namecheap_domains_renew_error[3050900]="Unknown error from Enom"
        namecheap_domains_renew_error[2016166]="Domain is not associated with your account"
        namecheap_domains_renew_error[4024167]="Failed to update years for your domain"
        namecheap_domains_renew_error[4023166]="Error occurred during the domain renewal"
        namecheap_domains_renew_error[4022337]="Error in refunding funds"
        namecheap_domains_renew_error[2015170]="Promotion code is not allowed for premium domains"
        namecheap_domains_renew_error[2015167]="Premium domain can be renewed for 1 year only"
        namecheap_domains_renew_error[2015610]="Premium prices cannot be zero for premium domains"
        namecheap_domains_renew_error[2515623]="You are trying to renew a premium domain. Premium price should be added to request to renew the premium domain."
        namecheap_domains_renew_error[2511623]="Domain name is not premium"
        namecheap_domains_renew_error[2515610]="Premium price is incorrect. It should be (premium renewal price value)."

# Package namecheap.domains, Command setContacts
# (generated from file domains/set-contacts/index.html)

    # Request Parameters
        declare -A namecheap_domains_setContacts_in
        declare -A namecheap_domains_setContacts_in_name
        declare -A namecheap_domains_setContacts_in_type
        declare -A namecheap_domains_setContacts_in_maxlen
        declare -A namecheap_domains_setContacts_in_required
        declare -A namecheap_domains_setContacts_in_description

        namecheap_domains_setContacts_in["DomainName"]="The domain name to register"
        namecheap_domains_setContacts_in_optname["DomainName"]="domain-name"
        namecheap_domains_setContacts_in_type["DomainName"]="String"
        namecheap_domains_setContacts_in_maxlen["DomainName"]="70"
        namecheap_domains_setContacts_in_required["DomainName"]="Yes"

        namecheap_domains_setContacts_in["RegistrantOrganizationName"]="Organization of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantOrganizationName"]="registrant-organization-name"
        namecheap_domains_setContacts_in_type["RegistrantOrganizationName"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantOrganizationName"]="255"
        namecheap_domains_setContacts_in_required["RegistrantOrganizationName"]="No"

        namecheap_domains_setContacts_in["RegistrantJobTitle"]="Job title of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantJobTitle"]="registrant-job-title"
        namecheap_domains_setContacts_in_type["RegistrantJobTitle"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantJobTitle"]="255"
        namecheap_domains_setContacts_in_required["RegistrantJobTitle"]="No"

        namecheap_domains_setContacts_in["RegistrantFirstName"]="First name of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantFirstName"]="registrant-first-name"
        namecheap_domains_setContacts_in_type["RegistrantFirstName"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantFirstName"]="255"
        namecheap_domains_setContacts_in_required["RegistrantFirstName"]="Yes"

        namecheap_domains_setContacts_in["RegistrantLastName"]="Second name of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantLastName"]="registrant-last-name"
        namecheap_domains_setContacts_in_type["RegistrantLastName"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantLastName"]="255"
        namecheap_domains_setContacts_in_required["RegistrantLastName"]="Yes"

        namecheap_domains_setContacts_in["RegistrantAddress1"]="Address1 of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantAddress1"]="registrant-address1"
        namecheap_domains_setContacts_in_type["RegistrantAddress1"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantAddress1"]="255"
        namecheap_domains_setContacts_in_required["RegistrantAddress1"]="Yes"

        namecheap_domains_setContacts_in["RegistrantAddress2"]="Address2 of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantAddress2"]="registrant-address2"
        namecheap_domains_setContacts_in_type["RegistrantAddress2"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantAddress2"]="255"
        namecheap_domains_setContacts_in_required["RegistrantAddress2"]="No"

        namecheap_domains_setContacts_in["RegistrantCity"]="City of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantCity"]="registrant-city"
        namecheap_domains_setContacts_in_type["RegistrantCity"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantCity"]="50"
        namecheap_domains_setContacts_in_required["RegistrantCity"]="Yes"

        namecheap_domains_setContacts_in["RegistrantStateProvince"]="State/Province of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantStateProvince"]="registrant-state-province"
        namecheap_domains_setContacts_in_type["RegistrantStateProvince"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantStateProvince"]="50"
        namecheap_domains_setContacts_in_required["RegistrantStateProvince"]="Yes"

        namecheap_domains_setContacts_in["RegistrantStateProvinceChoice"]="StateProvinceChoice of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantStateProvinceChoice"]="registrant-state-province-choice"
        namecheap_domains_setContacts_in_type["RegistrantStateProvinceChoice"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantStateProvinceChoice"]="50"
        namecheap_domains_setContacts_in_required["RegistrantStateProvinceChoice"]="No"

        namecheap_domains_setContacts_in["RegistrantPostalCode"]="PostalCode of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantPostalCode"]="registrant-postal-code"
        namecheap_domains_setContacts_in_type["RegistrantPostalCode"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantPostalCode"]="50"
        namecheap_domains_setContacts_in_required["RegistrantPostalCode"]="Yes"

        namecheap_domains_setContacts_in["RegistrantCountry"]="Country of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantCountry"]="registrant-country"
        namecheap_domains_setContacts_in_type["RegistrantCountry"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantCountry"]="50"
        namecheap_domains_setContacts_in_required["RegistrantCountry"]="Yes"

        namecheap_domains_setContacts_in["RegistrantPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["RegistrantPhone"]="registrant-phone"
        namecheap_domains_setContacts_in_type["RegistrantPhone"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantPhone"]="50"
        namecheap_domains_setContacts_in_required["RegistrantPhone"]="Yes"

        namecheap_domains_setContacts_in["RegistrantPhoneExt"]="PhoneExt of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantPhoneExt"]="registrant-phone-ext"
        namecheap_domains_setContacts_in_type["RegistrantPhoneExt"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantPhoneExt"]="50"
        namecheap_domains_setContacts_in_required["RegistrantPhoneExt"]="No"

        namecheap_domains_setContacts_in["RegistrantFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["RegistrantFax"]="registrant-fax"
        namecheap_domains_setContacts_in_type["RegistrantFax"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantFax"]="50"
        namecheap_domains_setContacts_in_required["RegistrantFax"]="No"

        namecheap_domains_setContacts_in["RegistrantEmailAddress"]="Email address of the Registrant user"
        namecheap_domains_setContacts_in_optname["RegistrantEmailAddress"]="registrant-email-address"
        namecheap_domains_setContacts_in_type["RegistrantEmailAddress"]="String"
        namecheap_domains_setContacts_in_maxlen["RegistrantEmailAddress"]="255"
        namecheap_domains_setContacts_in_required["RegistrantEmailAddress"]="Yes"

        namecheap_domains_setContacts_in["TechOrganizationName"]="Organization of the Tech user"
        namecheap_domains_setContacts_in_optname["TechOrganizationName"]="tech-organization-name"
        namecheap_domains_setContacts_in_type["TechOrganizationName"]="String"
        namecheap_domains_setContacts_in_maxlen["TechOrganizationName"]="255"
        namecheap_domains_setContacts_in_required["TechOrganizationName"]="No"

        namecheap_domains_setContacts_in["TechJobTitle"]="Job title of the Tech user"
        namecheap_domains_setContacts_in_optname["TechJobTitle"]="tech-job-title"
        namecheap_domains_setContacts_in_type["TechJobTitle"]="String"
        namecheap_domains_setContacts_in_maxlen["TechJobTitle"]="255"
        namecheap_domains_setContacts_in_required["TechJobTitle"]="No"

        namecheap_domains_setContacts_in["TechFirstName"]="First name of the Tech user"
        namecheap_domains_setContacts_in_optname["TechFirstName"]="tech-first-name"
        namecheap_domains_setContacts_in_type["TechFirstName"]="String"
        namecheap_domains_setContacts_in_maxlen["TechFirstName"]="255"
        namecheap_domains_setContacts_in_required["TechFirstName"]="Yes"

        namecheap_domains_setContacts_in["TechLastName"]="Second name of the Tech user"
        namecheap_domains_setContacts_in_optname["TechLastName"]="tech-last-name"
        namecheap_domains_setContacts_in_type["TechLastName"]="String"
        namecheap_domains_setContacts_in_maxlen["TechLastName"]="255"
        namecheap_domains_setContacts_in_required["TechLastName"]="Yes"

        namecheap_domains_setContacts_in["TechAddress1"]="Address1 of the Tech user"
        namecheap_domains_setContacts_in_optname["TechAddress1"]="tech-address1"
        namecheap_domains_setContacts_in_type["TechAddress1"]="String"
        namecheap_domains_setContacts_in_maxlen["TechAddress1"]="255"
        namecheap_domains_setContacts_in_required["TechAddress1"]="Yes"

        namecheap_domains_setContacts_in["TechAddress2"]="Address2 of the Tech user"
        namecheap_domains_setContacts_in_optname["TechAddress2"]="tech-address2"
        namecheap_domains_setContacts_in_type["TechAddress2"]="String"
        namecheap_domains_setContacts_in_maxlen["TechAddress2"]="255"
        namecheap_domains_setContacts_in_required["TechAddress2"]="No"

        namecheap_domains_setContacts_in["TechCity"]="City of the Tech user"
        namecheap_domains_setContacts_in_optname["TechCity"]="tech-city"
        namecheap_domains_setContacts_in_type["TechCity"]="String"
        namecheap_domains_setContacts_in_maxlen["TechCity"]="50"
        namecheap_domains_setContacts_in_required["TechCity"]="Yes"

        namecheap_domains_setContacts_in["TechStateProvince"]="State/Province of the Tech user"
        namecheap_domains_setContacts_in_optname["TechStateProvince"]="tech-state-province"
        namecheap_domains_setContacts_in_type["TechStateProvince"]="String"
        namecheap_domains_setContacts_in_maxlen["TechStateProvince"]="50"
        namecheap_domains_setContacts_in_required["TechStateProvince"]="Yes"

        namecheap_domains_setContacts_in["TechStateProvinceChoice"]="StateProvinceChoice of the Tech user"
        namecheap_domains_setContacts_in_optname["TechStateProvinceChoice"]="tech-state-province-choice"
        namecheap_domains_setContacts_in_type["TechStateProvinceChoice"]="String"
        namecheap_domains_setContacts_in_maxlen["TechStateProvinceChoice"]="50"
        namecheap_domains_setContacts_in_required["TechStateProvinceChoice"]="No"

        namecheap_domains_setContacts_in["TechPostalCode"]="PostalCode of the Tech user"
        namecheap_domains_setContacts_in_optname["TechPostalCode"]="tech-postal-code"
        namecheap_domains_setContacts_in_type["TechPostalCode"]="String"
        namecheap_domains_setContacts_in_maxlen["TechPostalCode"]="50"
        namecheap_domains_setContacts_in_required["TechPostalCode"]="Yes"

        namecheap_domains_setContacts_in["TechCountry"]="Country of the Tech user"
        namecheap_domains_setContacts_in_optname["TechCountry"]="tech-country"
        namecheap_domains_setContacts_in_type["TechCountry"]="String"
        namecheap_domains_setContacts_in_maxlen["TechCountry"]="50"
        namecheap_domains_setContacts_in_required["TechCountry"]="Yes"

        namecheap_domains_setContacts_in["TechPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["TechPhone"]="tech-phone"
        namecheap_domains_setContacts_in_type["TechPhone"]="String"
        namecheap_domains_setContacts_in_maxlen["TechPhone"]="50"
        namecheap_domains_setContacts_in_required["TechPhone"]="Yes"

        namecheap_domains_setContacts_in["TechPhoneExt"]="PhoneExt of the Tech user"
        namecheap_domains_setContacts_in_optname["TechPhoneExt"]="tech-phone-ext"
        namecheap_domains_setContacts_in_type["TechPhoneExt"]="String"
        namecheap_domains_setContacts_in_maxlen["TechPhoneExt"]="50"
        namecheap_domains_setContacts_in_required["TechPhoneExt"]="No"

        namecheap_domains_setContacts_in["TechFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["TechFax"]="tech-fax"
        namecheap_domains_setContacts_in_type["TechFax"]="String"
        namecheap_domains_setContacts_in_maxlen["TechFax"]="50"
        namecheap_domains_setContacts_in_required["TechFax"]="No"

        namecheap_domains_setContacts_in["TechEmailAddress"]="Email address of the Tech user"
        namecheap_domains_setContacts_in_optname["TechEmailAddress"]="tech-email-address"
        namecheap_domains_setContacts_in_type["TechEmailAddress"]="String"
        namecheap_domains_setContacts_in_maxlen["TechEmailAddress"]="255"
        namecheap_domains_setContacts_in_required["TechEmailAddress"]="Yes"

        namecheap_domains_setContacts_in["AdminOrganizationName"]="Organization of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminOrganizationName"]="admin-organization-name"
        namecheap_domains_setContacts_in_type["AdminOrganizationName"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminOrganizationName"]="255"
        namecheap_domains_setContacts_in_required["AdminOrganizationName"]="No"

        namecheap_domains_setContacts_in["AdminJobTitle"]="Job title of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminJobTitle"]="admin-job-title"
        namecheap_domains_setContacts_in_type["AdminJobTitle"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminJobTitle"]="255"
        namecheap_domains_setContacts_in_required["AdminJobTitle"]="No"

        namecheap_domains_setContacts_in["AdminFirstName"]="First name of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminFirstName"]="admin-first-name"
        namecheap_domains_setContacts_in_type["AdminFirstName"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminFirstName"]="255"
        namecheap_domains_setContacts_in_required["AdminFirstName"]="Yes"

        namecheap_domains_setContacts_in["AdminLastName"]="Second name of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminLastName"]="admin-last-name"
        namecheap_domains_setContacts_in_type["AdminLastName"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminLastName"]="255"
        namecheap_domains_setContacts_in_required["AdminLastName"]="Yes"

        namecheap_domains_setContacts_in["AdminAddress1"]="Address1 of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminAddress1"]="admin-address1"
        namecheap_domains_setContacts_in_type["AdminAddress1"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminAddress1"]="255"
        namecheap_domains_setContacts_in_required["AdminAddress1"]="Yes"

        namecheap_domains_setContacts_in["AdminAddress2"]="Address2 of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminAddress2"]="admin-address2"
        namecheap_domains_setContacts_in_type["AdminAddress2"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminAddress2"]="255"
        namecheap_domains_setContacts_in_required["AdminAddress2"]="No"

        namecheap_domains_setContacts_in["AdminCity"]="City of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminCity"]="admin-city"
        namecheap_domains_setContacts_in_type["AdminCity"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminCity"]="50"
        namecheap_domains_setContacts_in_required["AdminCity"]="Yes"

        namecheap_domains_setContacts_in["AdminStateProvince"]="State/Province of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminStateProvince"]="admin-state-province"
        namecheap_domains_setContacts_in_type["AdminStateProvince"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminStateProvince"]="50"
        namecheap_domains_setContacts_in_required["AdminStateProvince"]="Yes"

        namecheap_domains_setContacts_in["AdminStateProvinceChoice"]="StateProvinceChoice of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminStateProvinceChoice"]="admin-state-province-choice"
        namecheap_domains_setContacts_in_type["AdminStateProvinceChoice"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminStateProvinceChoice"]="50"
        namecheap_domains_setContacts_in_required["AdminStateProvinceChoice"]="No"

        namecheap_domains_setContacts_in["AdminPostalCode"]="PostalCode of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminPostalCode"]="admin-postal-code"
        namecheap_domains_setContacts_in_type["AdminPostalCode"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminPostalCode"]="50"
        namecheap_domains_setContacts_in_required["AdminPostalCode"]="Yes"

        namecheap_domains_setContacts_in["AdminCountry"]="Country of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminCountry"]="admin-country"
        namecheap_domains_setContacts_in_type["AdminCountry"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminCountry"]="50"
        namecheap_domains_setContacts_in_required["AdminCountry"]="Yes"

        namecheap_domains_setContacts_in["AdminPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["AdminPhone"]="admin-phone"
        namecheap_domains_setContacts_in_type["AdminPhone"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminPhone"]="50"
        namecheap_domains_setContacts_in_required["AdminPhone"]="Yes"

        namecheap_domains_setContacts_in["AdminPhoneExt"]="PhoneExt of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminPhoneExt"]="admin-phone-ext"
        namecheap_domains_setContacts_in_type["AdminPhoneExt"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminPhoneExt"]="50"
        namecheap_domains_setContacts_in_required["AdminPhoneExt"]="No"

        namecheap_domains_setContacts_in["AdminFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["AdminFax"]="admin-fax"
        namecheap_domains_setContacts_in_type["AdminFax"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminFax"]="50"
        namecheap_domains_setContacts_in_required["AdminFax"]="No"

        namecheap_domains_setContacts_in["AdminEmailAddress"]="Email address of the Admin user"
        namecheap_domains_setContacts_in_optname["AdminEmailAddress"]="admin-email-address"
        namecheap_domains_setContacts_in_type["AdminEmailAddress"]="String"
        namecheap_domains_setContacts_in_maxlen["AdminEmailAddress"]="255"
        namecheap_domains_setContacts_in_required["AdminEmailAddress"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingOrganizationName"]="Organization of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingOrganizationName"]="aux-billing-organization-name"
        namecheap_domains_setContacts_in_type["AuxBillingOrganizationName"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingOrganizationName"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingOrganizationName"]="No"

        namecheap_domains_setContacts_in["AuxBillingJobTitle"]="Job title of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingJobTitle"]="aux-billing-job-title"
        namecheap_domains_setContacts_in_type["AuxBillingJobTitle"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingJobTitle"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingJobTitle"]="No"

        namecheap_domains_setContacts_in["AuxBillingFirstName"]="First name of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingFirstName"]="aux-billing-first-name"
        namecheap_domains_setContacts_in_type["AuxBillingFirstName"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingFirstName"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingFirstName"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingLastName"]="Second name of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingLastName"]="aux-billing-last-name"
        namecheap_domains_setContacts_in_type["AuxBillingLastName"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingLastName"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingLastName"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingAddress1"]="Address1 of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingAddress1"]="aux-billing-address1"
        namecheap_domains_setContacts_in_type["AuxBillingAddress1"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingAddress1"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingAddress1"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingAddress2"]="Address2 of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingAddress2"]="aux-billing-address2"
        namecheap_domains_setContacts_in_type["AuxBillingAddress2"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingAddress2"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingAddress2"]="No"

        namecheap_domains_setContacts_in["AuxBillingCity"]="City of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingCity"]="aux-billing-city"
        namecheap_domains_setContacts_in_type["AuxBillingCity"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingCity"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingCity"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingStateProvince"]="State/Province of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingStateProvince"]="aux-billing-state-province"
        namecheap_domains_setContacts_in_type["AuxBillingStateProvince"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingStateProvince"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingStateProvince"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingStateProvinceChoice"]="StateProvinceChoice of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingStateProvinceChoice"]="aux-billing-state-province-choice"
        namecheap_domains_setContacts_in_type["AuxBillingStateProvinceChoice"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingStateProvinceChoice"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingStateProvinceChoice"]="No"

        namecheap_domains_setContacts_in["AuxBillingPostalCode"]="PostalCode of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingPostalCode"]="aux-billing-postal-code"
        namecheap_domains_setContacts_in_type["AuxBillingPostalCode"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingPostalCode"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingPostalCode"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingCountry"]="Country of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingCountry"]="aux-billing-country"
        namecheap_domains_setContacts_in_type["AuxBillingCountry"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingCountry"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingCountry"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingPhone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["AuxBillingPhone"]="aux-billing-phone"
        namecheap_domains_setContacts_in_type["AuxBillingPhone"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingPhone"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingPhone"]="Yes"

        namecheap_domains_setContacts_in["AuxBillingPhoneExt"]="PhoneExt of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingPhoneExt"]="aux-billing-phone-ext"
        namecheap_domains_setContacts_in_type["AuxBillingPhoneExt"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingPhoneExt"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingPhoneExt"]="No"

        namecheap_domains_setContacts_in["AuxBillingFax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_in_optname["AuxBillingFax"]="aux-billing-fax"
        namecheap_domains_setContacts_in_type["AuxBillingFax"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingFax"]="50"
        namecheap_domains_setContacts_in_required["AuxBillingFax"]="No"

        namecheap_domains_setContacts_in["AuxBillingEmailAddress"]="Email address of the AuxBilling user"
        namecheap_domains_setContacts_in_optname["AuxBillingEmailAddress"]="aux-billing-email-address"
        namecheap_domains_setContacts_in_type["AuxBillingEmailAddress"]="String"
        namecheap_domains_setContacts_in_maxlen["AuxBillingEmailAddress"]="255"
        namecheap_domains_setContacts_in_required["AuxBillingEmailAddress"]="Yes"

        namecheap_domains_setContacts_in["Extended"]="Yes Required for .us, .eu, .ca, .co.uk, .org.uk, .me.uk, .nu , .asia, .com.au, .net.au, .org.au, .es, .nom.es, .com.es, .org.es, .de, .fr TLDs only"
        namecheap_domains_setContacts_in_optname["Extended"]="extended"
        namecheap_domains_setContacts_in_type["Extended"]="attributes"
        namecheap_domains_setContacts_in_maxlen["Extended"]="String"
        namecheap_domains_setContacts_in_required["Extended"]="No"

    # Response Parameters
        declare -A namecheap_domains_setContacts_out
        namecheap_domains_setContacts_out["Domain"]="The registered domain name"
        namecheap_domains_setContacts_out["IsSuccess"]="Indicates whether contact details were set successfully"

    # Error Codes
        declare -A namecheap_domains_setContacts_error
        namecheap_domains_setContacts_error[2019166]="Domain not found"
        namecheap_domains_setContacts_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_setContacts_error[2010324]="Registrant contacts such as firstname, lastname  etc. are missing"
        namecheap_domains_setContacts_error[2010325]="Tech contacts such as firstname, lastname  etc. are missing"
        namecheap_domains_setContacts_error[2010326]="Admin contacts such as firstname, lastname  etc. are missing"
        namecheap_domains_setContacts_error[2015182]="The contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"
        namecheap_domains_setContacts_error[2010327]="AuxBilling contacts such as firstname, lastname  etc. are missing"
        namecheap_domains_setContacts_error[2016166]="Domain is not associated with your account"
        namecheap_domains_setContacts_error[2011280]="Cannot see the contact information for your TLD"
        namecheap_domains_setContacts_error[4022323]="Error retrieving domain Contacts"
        namecheap_domains_setContacts_error[2011323]="Error retrieving domain Contacts from Enom (invalid errors)"
        namecheap_domains_setContacts_error[3031510]="Error from Enom when error count <>0"
        namecheap_domains_setContacts_error[3050900]="Unknown error from Enom"

# Package namecheap.domains, Command setRegistrarLock
# (generated from file domains/set-registrar-lock/index.html)

    # Request Parameters
        declare -A namecheap_domains_setRegistrarLock_in
        declare -A namecheap_domains_setRegistrarLock_in_name
        declare -A namecheap_domains_setRegistrarLock_in_type
        declare -A namecheap_domains_setRegistrarLock_in_maxlen
        declare -A namecheap_domains_setRegistrarLock_in_required
        declare -A namecheap_domains_setRegistrarLock_in_description

        namecheap_domains_setRegistrarLock_in["DomainName"]="Domain name to set status for"
        namecheap_domains_setRegistrarLock_in_optname["DomainName"]="domain-name"
        namecheap_domains_setRegistrarLock_in_type["DomainName"]="String"
        namecheap_domains_setRegistrarLock_in_maxlen["DomainName"]="70"
        namecheap_domains_setRegistrarLock_in_required["DomainName"]="Yes"

        namecheap_domains_setRegistrarLock_in["LockAction"]="Possible values: LOCK, UNLOCK. Default Value: LOCK."
        namecheap_domains_setRegistrarLock_in_optname["LockAction"]="lock-action"
        namecheap_domains_setRegistrarLock_in_type["LockAction"]="String"
        namecheap_domains_setRegistrarLock_in_maxlen["LockAction"]="70"
        namecheap_domains_setRegistrarLock_in_required["LockAction"]="No"

    # Response Parameters
        declare -A namecheap_domains_setRegistrarLock_out
        namecheap_domains_setRegistrarLock_out["Domain"]="The domain name you wish to set registrar lock for"
        namecheap_domains_setRegistrarLock_out["IsSuccess"]="Indicates whether registrar lock was set successfully"

    # Error Codes
        declare -A namecheap_domains_setRegistrarLock_error
        namecheap_domains_setRegistrarLock_error[2015278]="Invalid data specified for LockAction"
        namecheap_domains_setRegistrarLock_error[2019166]="Domain not found"
        namecheap_domains_setRegistrarLock_error[2016166]="Domain is not associated with your account"
        namecheap_domains_setRegistrarLock_error[3031510]="Error from Enom when Errorcount <> 0"
        namecheap_domains_setRegistrarLock_error[2030166]="Edit permission for domain is not supported"
        namecheap_domains_setRegistrarLock_error[3050900]="Unknown error response from Enom"
        namecheap_domains_setRegistrarLock_error[5050900]="Unknown exceptions"

# Package namecheap.domains.transfer, Command create
# (generated from file domains-transfer/create/index.html)

    # Request Parameters
        declare -A namecheap_domains_transfer_create_in
        declare -A namecheap_domains_transfer_create_in_name
        declare -A namecheap_domains_transfer_create_in_type
        declare -A namecheap_domains_transfer_create_in_maxlen
        declare -A namecheap_domains_transfer_create_in_required
        declare -A namecheap_domains_transfer_create_in_description

        namecheap_domains_transfer_create_in["DomainName"]="Domain name to transfer"
        namecheap_domains_transfer_create_in_optname["DomainName"]="domain-name"
        namecheap_domains_transfer_create_in_type["DomainName"]="String"
        namecheap_domains_transfer_create_in_maxlen["DomainName"]="70"
        namecheap_domains_transfer_create_in_required["DomainName"]="Yes"

        namecheap_domains_transfer_create_in["Years"]="Though it is possible to configure a transfer price up to 10 years, the duration should be set to 1 year only."
        namecheap_domains_transfer_create_in_optname["Years"]="years"
        namecheap_domains_transfer_create_in_type["Years"]="String"
        namecheap_domains_transfer_create_in_maxlen["Years"]="1"
        namecheap_domains_transfer_create_in_required["Years"]="Yes"

        namecheap_domains_transfer_create_in["EPPCode"]="The EPPCode is required for transferring .biz, .ca, .cc, .co, .com, .com.pe, .in, .info, .me, .mobi, .net, net.pe, .org, .org.pe, .pe, .tv, .us domains only."
        namecheap_domains_transfer_create_in_optname["EPPCode"]="e-p-p-code"
        namecheap_domains_transfer_create_in_type["EPPCode"]="String"
        namecheap_domains_transfer_create_in_maxlen["EPPCode"]="20"
        namecheap_domains_transfer_create_in_required["EPPCode"]="Yes"

        namecheap_domains_transfer_create_in["PromotionCode"]="Promotional (coupon) code for transfer"
        namecheap_domains_transfer_create_in_optname["PromotionCode"]="promotion-code"
        namecheap_domains_transfer_create_in_type["PromotionCode"]="String"
        namecheap_domains_transfer_create_in_maxlen["PromotionCode"]="20"
        namecheap_domains_transfer_create_in_required["PromotionCode"]="No"

        namecheap_domains_transfer_create_in["AddFreeWhoisguard
"]=""
        namecheap_domains_transfer_create_in_optname["AddFreeWhoisguard
"]="add-free-whoisguard
"
        namecheap_domains_transfer_create_in_type["AddFreeWhoisguard
"]=""
        namecheap_domains_transfer_create_in_maxlen["AddFreeWhoisguard
"]=""
        namecheap_domains_transfer_create_in_required["AddFreeWhoisguard
"]=""

        namecheap_domains_transfer_create_in["String"]=""
        namecheap_domains_transfer_create_in_optname["String"]="string"
        namecheap_domains_transfer_create_in_type["String"]="3"
        namecheap_domains_transfer_create_in_maxlen["String"]="No
"
        namecheap_domains_transfer_create_in_required["String"]=""

        namecheap_domains_transfer_create_in["Adds"]="for the domain Default Value: Yes"
        namecheap_domains_transfer_create_in_optname["Adds"]="adds"
        namecheap_domains_transfer_create_in_type["Adds"]="free"
        namecheap_domains_transfer_create_in_maxlen["Adds"]="domain"
        namecheap_domains_transfer_create_in_required["Adds"]="privacy"

        namecheap_domains_transfer_create_in["WGenable"]="Enables free domain privacy for the domain Default Value: No"
        namecheap_domains_transfer_create_in_optname["WGenable"]="w-genable"
        namecheap_domains_transfer_create_in_type["WGenable"]="String"
        namecheap_domains_transfer_create_in_maxlen["WGenable"]="3"
        namecheap_domains_transfer_create_in_required["WGenable"]="No"

    # Response Parameters
        declare -A namecheap_domains_transfer_create_out
        namecheap_domains_transfer_create_out["DomainName"]="The domain name that you are trying to transfer to Namecheap"
        namecheap_domains_transfer_create_out["Transfer"]="Indicates whether the transfer order was placed successfully."
        namecheap_domains_transfer_create_out["TransferID"]="A unique integer value that represents the transfer"
        namecheap_domains_transfer_create_out["StatusID"]="An integer value that indicates the current transfer status."
        namecheap_domains_transfer_create_out["ChargedAmount"]="The total amount charged for the transfer."
        namecheap_domains_transfer_create_out["OrderID"]="A unique integer value that represents the order"
        namecheap_domains_transfer_create_out["TransactionID"]="A unique integer value that represents the transaction."
        namecheap_domains_transfer_create_out["StatusCode"]="Indicates the current transfer status."

    # Error Codes
        declare -A namecheap_domains_transfer_create_error
        namecheap_domains_transfer_create_error[2033409]="Possibly a logical error in authentication phase. Order chargeable for
"
        namecheap_domains_transfer_create_error[Username]="is not found"
        namecheap_domains_transfer_create_error[2011170]="Validation error from promotion code"
        namecheap_domains_transfer_create_error[2011280]="TLD is not valid"
        namecheap_domains_transfer_create_error[2030280]="TLD is not supported for API"
        namecheap_domains_transfer_create_error[2528166]="Order creation failed"
        namecheap_domains_transfer_create_error[5050900]="Unhandled exceptions"

# Package namecheap.domains.transfer, Command getList
# (generated from file domains-transfer/get-list/index.html)

    # Request Parameters
        declare -A namecheap_domains_transfer_getList_in
        declare -A namecheap_domains_transfer_getList_in_name
        declare -A namecheap_domains_transfer_getList_in_type
        declare -A namecheap_domains_transfer_getList_in_maxlen
        declare -A namecheap_domains_transfer_getList_in_required
        declare -A namecheap_domains_transfer_getList_in_description

        namecheap_domains_transfer_getList_in["ListType"]="Possible values are ALL,INPROGRESS, CANCELLED,COMPLETED Default Value: ALL"
        namecheap_domains_transfer_getList_in_optname["ListType"]="list-type"
        namecheap_domains_transfer_getList_in_type["ListType"]="String"
        namecheap_domains_transfer_getList_in_maxlen["ListType"]="10"
        namecheap_domains_transfer_getList_in_required["ListType"]="No"

        namecheap_domains_transfer_getList_in["SearchTerm"]="The keyword should be a domain name."
        namecheap_domains_transfer_getList_in_optname["SearchTerm"]="search-term"
        namecheap_domains_transfer_getList_in_type["SearchTerm"]="String"
        namecheap_domains_transfer_getList_in_maxlen["SearchTerm"]="70"
        namecheap_domains_transfer_getList_in_required["SearchTerm"]="No"

        namecheap_domains_transfer_getList_in["Page"]="Page to return Default Value: 1"
        namecheap_domains_transfer_getList_in_optname["Page"]="page"
        namecheap_domains_transfer_getList_in_type["Page"]="Number"
        namecheap_domains_transfer_getList_in_maxlen["Page"]="10"
        namecheap_domains_transfer_getList_in_required["Page"]="No"

        namecheap_domains_transfer_getList_in["PageSize"]="Number of transfer to be listed on a page. Minimum value: 10; Maximum value: 100 Default Value: 10"
        namecheap_domains_transfer_getList_in_optname["PageSize"]="page-size"
        namecheap_domains_transfer_getList_in_type["PageSize"]="Number"
        namecheap_domains_transfer_getList_in_maxlen["PageSize"]="10"
        namecheap_domains_transfer_getList_in_required["PageSize"]="No"

        namecheap_domains_transfer_getList_in["SortBy"]="Possible values are DOMAINNAME, DOMAINNAME_DESC,TRANSFERDATE, TRANSFERDATE_DESC,STATUSDATE, STATUSDATE_DESC Default Value: DOMAINNAME"
        namecheap_domains_transfer_getList_in_optname["SortBy"]="sort-by"
        namecheap_domains_transfer_getList_in_type["SortBy"]="String"
        namecheap_domains_transfer_getList_in_maxlen["SortBy"]="50"
        namecheap_domains_transfer_getList_in_required["SortBy"]="No"

    # Response Parameters
        declare -A namecheap_domains_transfer_getList_out
        namecheap_domains_transfer_getList_out["TransferID"]="A unique integer value that represents the transfer"
        namecheap_domains_transfer_getList_out["Domainname"]="The domain name associated with the transferID"
        namecheap_domains_transfer_getList_out["User"]="The user account to which the domain is transferred."
        namecheap_domains_transfer_getList_out["TransferDate"]="Indicates the date at which transfer was initiated"
        namecheap_domains_transfer_getList_out["Order"]="ID A unique integer value that represents the order"
        namecheap_domains_transfer_getList_out["StatusID"]="An integer value that indicates the current transfer status"
        namecheap_domains_transfer_getList_out["Status"]="Transfer status."
        namecheap_domains_transfer_getList_out["Statusdate"]="The date at which the status was updated"
        namecheap_domains_transfer_getList_out["StatusDescription"]="Transfer status description"

    # Error Codes
        declare -A namecheap_domains_transfer_getList_error
        namecheap_domains_transfer_getList_error[4019329]="TransferStatus not available"
        namecheap_domains_transfer_getList_error[2010293]="No Action Specified"
        namecheap_domains_transfer_getList_error[5050900]="Unhandled exceptions"

# Package namecheap.domains.transfer, Command getStatus
# (generated from file domains-transfer/get-status/index.html)

    # Request Parameters
        declare -A namecheap_domains_transfer_getStatus_in
        declare -A namecheap_domains_transfer_getStatus_in_name
        declare -A namecheap_domains_transfer_getStatus_in_type
        declare -A namecheap_domains_transfer_getStatus_in_maxlen
        declare -A namecheap_domains_transfer_getStatus_in_required
        declare -A namecheap_domains_transfer_getStatus_in_description

        namecheap_domains_transfer_getStatus_in["TransferID"]="The unique Transfer ID which you get after placing a transfer request"
        namecheap_domains_transfer_getStatus_in_optname["TransferID"]="transfer-i-d"
        namecheap_domains_transfer_getStatus_in_type["TransferID"]="Number"
        namecheap_domains_transfer_getStatus_in_maxlen["TransferID"]="10"
        namecheap_domains_transfer_getStatus_in_required["TransferID"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_transfer_getStatus_out
        namecheap_domains_transfer_getStatus_out["TransferID"]="A unique integer value that represents the transfer"
        namecheap_domains_transfer_getStatus_out["StatusID"]="An integer value that indicates the current transfer status."
        namecheap_domains_transfer_getStatus_out["Status"]="Transfer status description."

    # Error Codes
        declare -A namecheap_domains_transfer_getStatus_error
        namecheap_domains_transfer_getStatus_error[4019329]="TransferStatus not available"
        namecheap_domains_transfer_getStatus_error[5050900]="Unhandled exceptions"

# Package namecheap.domains.transfer, Command updateStatus
# (generated from file domains-transfer/update-status/index.html)

    # Request Parameters
        declare -A namecheap_domains_transfer_updateStatus_in
        declare -A namecheap_domains_transfer_updateStatus_in_name
        declare -A namecheap_domains_transfer_updateStatus_in_type
        declare -A namecheap_domains_transfer_updateStatus_in_maxlen
        declare -A namecheap_domains_transfer_updateStatus_in_required
        declare -A namecheap_domains_transfer_updateStatus_in_description

        namecheap_domains_transfer_updateStatus_in["TransferID"]="The unique Transfer ID which you get after placing a transfer request"
        namecheap_domains_transfer_updateStatus_in_optname["TransferID"]="transfer-i-d"
        namecheap_domains_transfer_updateStatus_in_type["TransferID"]="Number"
        namecheap_domains_transfer_updateStatus_in_maxlen["TransferID"]="10"
        namecheap_domains_transfer_updateStatus_in_required["TransferID"]="Yes"

        namecheap_domains_transfer_updateStatus_in["Resubmit"]="The value 'true' resubmits the transfer"
        namecheap_domains_transfer_updateStatus_in_optname["Resubmit"]="resubmit"
        namecheap_domains_transfer_updateStatus_in_type["Resubmit"]="String"
        namecheap_domains_transfer_updateStatus_in_maxlen["Resubmit"]="5"
        namecheap_domains_transfer_updateStatus_in_required["Resubmit"]="Yes"

    # Response Parameters
        declare -A namecheap_domains_transfer_updateStatus_out
        namecheap_domains_transfer_updateStatus_out["TransferID"]="A unique integer value that represents the transfer"
        namecheap_domains_transfer_updateStatus_out["Resubmit"]="Indicates whether the transfer order was resubmitted"

    # Error Codes
        declare -A namecheap_domains_transfer_updateStatus_error
        namecheap_domains_transfer_updateStatus_error[4019329]="Transfer Status not available"
        namecheap_domains_transfer_updateStatus_error[2010293]="No Action Specified"
        namecheap_domains_transfer_updateStatus_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command activate
# (generated from file ssl/activate/index.html)

    # Request Parameters
        declare -A namecheap_ssl_activate_in
        declare -A namecheap_ssl_activate_in_name
        declare -A namecheap_ssl_activate_in_type
        declare -A namecheap_ssl_activate_in_maxlen
        declare -A namecheap_ssl_activate_in_required
        declare -A namecheap_ssl_activate_in_description

        namecheap_ssl_activate_in["CertificateID"]="Unique identifier of SSL certificate to be activated"
        namecheap_ssl_activate_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_activate_in_type["CertificateID"]="number"
        namecheap_ssl_activate_in_maxlen["CertificateID"]="10"
        namecheap_ssl_activate_in_required["CertificateID"]="Yes"

        namecheap_ssl_activate_in["CSR"]=""
        namecheap_ssl_activate_in_optname["CSR"]="c-s-r"
        namecheap_ssl_activate_in_type["CSR"]="string"
        namecheap_ssl_activate_in_maxlen["CSR"]="32767
"
        namecheap_ssl_activate_in_required["CSR"]=""

        namecheap_ssl_activate_in["Yes"]="(CSR)"
        namecheap_ssl_activate_in_optname["Yes"]="yes"
        namecheap_ssl_activate_in_type["Yes"]="Certificate"
        namecheap_ssl_activate_in_maxlen["Yes"]="Signing"
        namecheap_ssl_activate_in_required["Yes"]="Request"

        namecheap_ssl_activate_in["AdminEmailAddress"]="Email address to send signed SSL certificate file to"
        namecheap_ssl_activate_in_optname["AdminEmailAddress"]="admin-email-address"
        namecheap_ssl_activate_in_type["AdminEmailAddress"]="string"
        namecheap_ssl_activate_in_maxlen["AdminEmailAddress"]="255"
        namecheap_ssl_activate_in_required["AdminEmailAddress"]="Yes"

        namecheap_ssl_activate_in["WebServerType"]="Server software where SSL will be installed. Defines SSL certificate file format (PEM or PKCS7). Allowed values: apacheopenssl, apachessl, apacheraven, apachessleay, apache2, apacheapachessl, tomcat, cpanel, ipswitch, plesk, weblogic, website, webstar, nginx, iis, iis4, iis5, c2net, ibmhttp, iplanet, domino, dominogo4625, dominogo4626, netscape, zeusv3, cobaltseries, ensim, hsphere, other"
        namecheap_ssl_activate_in_optname["WebServerType"]="web-server-type"
        namecheap_ssl_activate_in_type["WebServerType"]="string"
        namecheap_ssl_activate_in_maxlen["WebServerType"]="50"
        namecheap_ssl_activate_in_required["WebServerType"]="No"

        namecheap_ssl_activate_in["UniqueValue"]="Unique identifier of SSL issue/reissue request. If not provided, it is created by the Namecheap system."
        namecheap_ssl_activate_in_optname["UniqueValue"]="unique-value"
        namecheap_ssl_activate_in_type["UniqueValue"]="string"
        namecheap_ssl_activate_in_maxlen["UniqueValue"]="20"
        namecheap_ssl_activate_in_required["UniqueValue"]="No"

    # Response Parameters
        declare -A namecheap_ssl_activate_out
        namecheap_ssl_activate_out["ApproverEmail"]="string 255 No* Sets method to pass DCV through.
"
        namecheap_ssl_activate_out["Allowed"]="values:
"
        namecheap_ssl_activate_out["-"]="one of the domain-related email addresses returned by getApproverEmailList API. - HTTPCSRHASH, CNAMECSRHASH (multi-domain certificates only).
"
        namecheap_ssl_activate_out["* Becomes"]="required if none of HTTPDCValidation or DNSDCValidation is supplied"
        namecheap_ssl_activate_out["HTTPDCValidation"]="bool N/A No Sets all domains in certificate request to be validated through HTTP DCV. This method is not available for Wildcard certificates."
        namecheap_ssl_activate_out["DNSDCValidation"]="bool N/A No Sets all domains in certificate requested domains to be validated through CNAME DCV"

    # Error Codes
        declare -A namecheap_ssl_activate_error
        namecheap_ssl_activate_error[DNSNames]="string 32767 No Specifies domain names to be included into the certificate request in addition to the Common Name in (CSR)
"
        namecheap_ssl_activate_error[Format:]="a comma-separated list of Fully-Qualified Domain Names. Number of items must be less or equal to the number of purchased additional domains (SANSCount). 
"
        namecheap_ssl_activate_error[Use]="getInfo API to check SANSCount. Use purchaseMoreSans API to increase SANSCount"
        namecheap_ssl_activate_error[DNSApproverEmails]="string 32767 No* Sets method to pass DCV through for each domain in the certificate request.
"
        namecheap_ssl_activate_error[*]="Becomes required if at least one domain is passed in DNSNames
"
        namecheap_ssl_activate_error[Format:]="a comma-separated list of DCV methods that corresponds each domain supplied in DNSNames. One DCV method for each domain.
"
        namecheap_ssl_activate_error[Allowed]="values:  one of the domain-related email addresses returned by getApproverEmailList API, HTTPCSRHASH, CNAMECSRHASH"

# Package namecheap.ssl, Command create
# (generated from file ssl/create/index.html)

    # Request Parameters
        declare -A namecheap_ssl_create_in
        declare -A namecheap_ssl_create_in_name
        declare -A namecheap_ssl_create_in_type
        declare -A namecheap_ssl_create_in_maxlen
        declare -A namecheap_ssl_create_in_required
        declare -A namecheap_ssl_create_in_description

        namecheap_ssl_create_in["Years"]="Number of years SSL will be issued for
"
        namecheap_ssl_create_in_optname["Years"]="years"
        namecheap_ssl_create_in_type["Years"]="Number"
        namecheap_ssl_create_in_maxlen["Years"]="1"
        namecheap_ssl_create_in_required["Years"]="Yes"

        namecheap_ssl_create_in["Allowed"]=""
        namecheap_ssl_create_in_optname["Allowed"]="allowed"
        namecheap_ssl_create_in_type["Allowed"]="values:"
        namecheap_ssl_create_in_maxlen["Allowed"]="1,2,3,4,5"
        namecheap_ssl_create_in_required["Allowed"]=""

        namecheap_ssl_create_in["Type"]="SSL product name. See \"Possible values for Type parameter\" below this table."
        namecheap_ssl_create_in_optname["Type"]="type"
        namecheap_ssl_create_in_type["Type"]="String"
        namecheap_ssl_create_in_maxlen["Type"]="50"
        namecheap_ssl_create_in_required["Type"]="Yes"

        namecheap_ssl_create_in["SANStoADD"]="Defines number of add-on domains to be purchased in addition to the default number of domains included into a multi-domain certificate."
        namecheap_ssl_create_in_optname["SANStoADD"]="s-a-n-sto-a-d-d"
        namecheap_ssl_create_in_type["SANStoADD"]="Number"
        namecheap_ssl_create_in_maxlen["SANStoADD"]="2"
        namecheap_ssl_create_in_required["SANStoADD"]="No"

        namecheap_ssl_create_in["PromotionCode"]="Promotional (coupon) code for the certificate"
        namecheap_ssl_create_in_optname["PromotionCode"]="promotion-code"
        namecheap_ssl_create_in_type["PromotionCode"]="String"
        namecheap_ssl_create_in_maxlen["PromotionCode"]="20"
        namecheap_ssl_create_in_required["PromotionCode"]="No"

    # Response Parameters
        declare -A namecheap_ssl_create_out
        namecheap_ssl_create_out["3"]="100 97"

    # Error Codes
        declare -A namecheap_ssl_create_error
        namecheap_ssl_create_error[IsSuccess]="Indicates whether SSL order was successful"
        namecheap_ssl_create_error[Order]="ID A unique integer value that represents the order"
        namecheap_ssl_create_error[TransactionID]="A unique integer value that represents the transaction"
        namecheap_ssl_create_error[ChargedAmount]="The amount charged for the order"
        namecheap_ssl_create_error[CertificateID]="A unique integer value that represents the SSL"
        namecheap_ssl_create_error[Created]="The date on which the certificate is created"
        namecheap_ssl_create_error[SSLType]="Type of SSL cerificate"
        namecheap_ssl_create_error[Years]="Number of years for which the certificate will be issued"
        namecheap_ssl_create_error[Status]="The current status of SSL certificate"

# Package namecheap.ssl, Command editDCVMethod
# (generated from file ssl/editdcvmethod/index.html)

    # Request Parameters
        declare -A namecheap_ssl_editDCVMethod_in
        declare -A namecheap_ssl_editDCVMethod_in_name
        declare -A namecheap_ssl_editDCVMethod_in_type
        declare -A namecheap_ssl_editDCVMethod_in_maxlen
        declare -A namecheap_ssl_editDCVMethod_in_required
        declare -A namecheap_ssl_editDCVMethod_in_description

        namecheap_ssl_editDCVMethod_in["CertificateID"]="Unique ID of the SSL certificate to set new DCV method for"
        namecheap_ssl_editDCVMethod_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_editDCVMethod_in_type["CertificateID"]="Number"
        namecheap_ssl_editDCVMethod_in_maxlen["CertificateID"]="10"
        namecheap_ssl_editDCVMethod_in_required["CertificateID"]="Yes"

        namecheap_ssl_editDCVMethod_in["DCVMethod*"]="DCV method to validate domain control with"
        namecheap_ssl_editDCVMethod_in_optname["DCVMethod*"]="d-c-v-method*"
        namecheap_ssl_editDCVMethod_in_type["DCVMethod*"]="String"
        namecheap_ssl_editDCVMethod_in_maxlen["DCVMethod*"]="255"
        namecheap_ssl_editDCVMethod_in_required["DCVMethod*"]="Yes"

        namecheap_ssl_editDCVMethod_in["DNSNames**"]="Comma-separated list of domain names to set new DCV method for"
        namecheap_ssl_editDCVMethod_in_optname["DNSNames**"]="d-n-s-names**"
        namecheap_ssl_editDCVMethod_in_type["DNSNames**"]="String"
        namecheap_ssl_editDCVMethod_in_maxlen["DNSNames**"]="3500"
        namecheap_ssl_editDCVMethod_in_required["DNSNames**"]="Yes"

        namecheap_ssl_editDCVMethod_in["DCVMethods**"]="Comma-separated list of DCV methods to validate domain control with"
        namecheap_ssl_editDCVMethod_in_optname["DCVMethods**"]="d-c-v-methods**"
        namecheap_ssl_editDCVMethod_in_type["DCVMethods**"]=" String"
        namecheap_ssl_editDCVMethod_in_maxlen["DCVMethods**"]="3500"
        namecheap_ssl_editDCVMethod_in_required["DCVMethods**"]="Yes"

        namecheap_ssl_editDCVMethod_in["ID"]="value that represents the SSL certificate"
        namecheap_ssl_editDCVMethod_in_optname["ID"]="i-d"
        namecheap_ssl_editDCVMethod_in_type["ID"]=" The"
        namecheap_ssl_editDCVMethod_in_maxlen["ID"]="unique"
        namecheap_ssl_editDCVMethod_in_required["ID"]="integer"

        namecheap_ssl_editDCVMethod_in["IsSuccess"]="SSL certificate is activated"
        namecheap_ssl_editDCVMethod_in_optname["IsSuccess"]="is-success"
        namecheap_ssl_editDCVMethod_in_type["IsSuccess"]=" Indicates"
        namecheap_ssl_editDCVMethod_in_maxlen["IsSuccess"]="whether"
        namecheap_ssl_editDCVMethod_in_required["IsSuccess"]="the"

        namecheap_ssl_editDCVMethod_in["HttpDCValidation"]="HTTP_CSR_HASH was set as DCV method for at least one domain. Possible values: True, False."
        namecheap_ssl_editDCVMethod_in_optname["HttpDCValidation"]="http-d-c-validation"
        namecheap_ssl_editDCVMethod_in_type["HttpDCValidation"]="ValueAvailable"
        namecheap_ssl_editDCVMethod_in_maxlen["HttpDCValidation"]=" Indicates"
        namecheap_ssl_editDCVMethod_in_required["HttpDCValidation"]="whether"

        namecheap_ssl_editDCVMethod_in["FileName"]="the text file to be used for HTTP DCV"
        namecheap_ssl_editDCVMethod_in_optname["FileName"]="file-name"
        namecheap_ssl_editDCVMethod_in_type["FileName"]=" File"
        namecheap_ssl_editDCVMethod_in_maxlen["FileName"]="name"
        namecheap_ssl_editDCVMethod_in_required["FileName"]="for"

        namecheap_ssl_editDCVMethod_in["FileContent"]="the text file to be used for HTTP DCV"
        namecheap_ssl_editDCVMethod_in_optname["FileContent"]="file-content"
        namecheap_ssl_editDCVMethod_in_type["FileContent"]=" File"
        namecheap_ssl_editDCVMethod_in_maxlen["FileContent"]="content"
        namecheap_ssl_editDCVMethod_in_required["FileContent"]="for"

        namecheap_ssl_editDCVMethod_in["DNSDCValidation"]="CNAME_CSR_HASH was set as DCV method for at least one domain.  Possible values: True, False."
        namecheap_ssl_editDCVMethod_in_optname["DNSDCValidation"]="d-n-s-d-c-validation"
        namecheap_ssl_editDCVMethod_in_type["DNSDCValidation"]="ValueAvailable"
        namecheap_ssl_editDCVMethod_in_maxlen["DNSDCValidation"]=" Indicates"
        namecheap_ssl_editDCVMethod_in_required["DNSDCValidation"]="whether"

        namecheap_ssl_editDCVMethod_in["HostName"]="left part of CNAME record (alias)"
        namecheap_ssl_editDCVMethod_in_optname["HostName"]="host-name"
        namecheap_ssl_editDCVMethod_in_type["HostName"]=" Values"
        namecheap_ssl_editDCVMethod_in_maxlen["HostName"]="for"
        namecheap_ssl_editDCVMethod_in_required["HostName"]="the"

        namecheap_ssl_editDCVMethod_in["Target"]="right part of CNAME record (CNAME)"
        namecheap_ssl_editDCVMethod_in_optname["Target"]="target"
        namecheap_ssl_editDCVMethod_in_type["Target"]=" Values"
        namecheap_ssl_editDCVMethod_in_maxlen["Target"]="for"
        namecheap_ssl_editDCVMethod_in_required["Target"]="the"

        namecheap_ssl_editDCVMethod_in["Domains"]="domains in a multi-domain certificate request, command execution result and DCV method set for each domain"
        namecheap_ssl_editDCVMethod_in_optname["Domains"]="domains"
        namecheap_ssl_editDCVMethod_in_type["Domains"]=" Block"
        namecheap_ssl_editDCVMethod_in_maxlen["Domains"]="that"
        namecheap_ssl_editDCVMethod_in_required["Domains"]="list"

        namecheap_ssl_editDCVMethod_in["Domains"]="in a multi-domain certificate affected by editDCVMethod command execution"
        namecheap_ssl_editDCVMethod_in_optname["Domains"]="domains"
        namecheap_ssl_editDCVMethod_in_type["Domains"]="Name"
        namecheap_ssl_editDCVMethod_in_maxlen["Domains"]=" Domain"
        namecheap_ssl_editDCVMethod_in_required["Domains"]="name"

        namecheap_ssl_editDCVMethod_in["IsSuccess"]="method change was successful"
        namecheap_ssl_editDCVMethod_in_optname["IsSuccess"]="is-success"
        namecheap_ssl_editDCVMethod_in_type["IsSuccess"]=" Indicates"
        namecheap_ssl_editDCVMethod_in_maxlen["IsSuccess"]="whether"
        namecheap_ssl_editDCVMethod_in_required["IsSuccess"]="DCV"

        namecheap_ssl_editDCVMethod_in["DCVMethodSet"]="set for the domain"
        namecheap_ssl_editDCVMethod_in_optname["DCVMethodSet"]="d-c-v-method-set"
        namecheap_ssl_editDCVMethod_in_type["DCVMethodSet"]=" Indicates"
        namecheap_ssl_editDCVMethod_in_maxlen["DCVMethodSet"]="DCV"
        namecheap_ssl_editDCVMethod_in_required["DCVMethodSet"]="method"

    # Response Parameters
        declare -A namecheap_ssl_editDCVMethod_out
        namecheap_ssl_editDCVMethod_out["2010294"]=" Parameter CertificateID is Missing"
        namecheap_ssl_editDCVMethod_out["2013294"]=" Parameter CertificateID is TooLong"
        namecheap_ssl_editDCVMethod_out["2011294"]=" Parameter CertificateID is Invalid"
        namecheap_ssl_editDCVMethod_out["2013294"]=" Parameter DNSNames is TooLong"
        namecheap_ssl_editDCVMethod_out["2013294"]=" Parameter DCVMethod is TooLong"
        namecheap_ssl_editDCVMethod_out["2013294"]=" Parameter DCVMethods is TooLong"
        namecheap_ssl_editDCVMethod_out["2010784"]=" Insufficient data to edit dcvalidation method"
        namecheap_ssl_editDCVMethod_out["2011784"]=" DNSNames or DCVMethods cannot be sent along with DCVMethod"
        namecheap_ssl_editDCVMethod_out["2010784"]=" DNSNames or DCVMethods is missing to edit dcv method for this multi domain certificate"
        namecheap_ssl_editDCVMethod_out["2011767"]=" There is no dnsnames or mismatch in the dnsnames provided during previous activation.Please check dnsnames and try again."
        namecheap_ssl_editDCVMethod_out["2010784"]=" DCVMethod is missing to edit dcv method for this single domain certificate"
        namecheap_ssl_editDCVMethod_out["2011331"]=" Status is Invalid"
        namecheap_ssl_editDCVMethod_out["2010767"]=" The DNSNames and their corresponding DCVMethods are not equal"
        namecheap_ssl_editDCVMethod_out["3011295"]=" DCVMethod is invalid"
        namecheap_ssl_editDCVMethod_out["3011784"]=" DCVMethod for the DomainName %1$s is not valid.Please provide valid DCVMethod in DCVMethods parameter for this DomainName"
        namecheap_ssl_editDCVMethod_out["2011301"]=" We're sorry, the requested SSL type has been discontinued"
        namecheap_ssl_editDCVMethod_out["3011295"]=" Error From Certificate Provider"
        namecheap_ssl_editDCVMethod_out["3011784"]=" Due to CA/B Forum regulations, HTTP DCV method is not allowed for Wildcard certificates"
        namecheap_ssl_editDCVMethod_out["4011331"]=" Unable to update DCV filerecords in database. Please try again."

    # Error Codes
        declare -A namecheap_ssl_editDCVMethod_error

# Package namecheap.ssl, Command getApproverEmailList
# (generated from file ssl/get-approver-email-list/index.html)

    # Request Parameters
        declare -A namecheap_ssl_getApproverEmailList_in
        declare -A namecheap_ssl_getApproverEmailList_in_name
        declare -A namecheap_ssl_getApproverEmailList_in_type
        declare -A namecheap_ssl_getApproverEmailList_in_maxlen
        declare -A namecheap_ssl_getApproverEmailList_in_required
        declare -A namecheap_ssl_getApproverEmailList_in_description

        namecheap_ssl_getApproverEmailList_in["DomainName"]="Domain name to get the list"
        namecheap_ssl_getApproverEmailList_in_optname["DomainName"]="domain-name"
        namecheap_ssl_getApproverEmailList_in_type["DomainName"]="String"
        namecheap_ssl_getApproverEmailList_in_maxlen["DomainName"]="70"
        namecheap_ssl_getApproverEmailList_in_required["DomainName"]="Yes"

        namecheap_ssl_getApproverEmailList_in["CertificateType"]="Type of SSL certificate"
        namecheap_ssl_getApproverEmailList_in_optname["CertificateType"]="certificate-type"
        namecheap_ssl_getApproverEmailList_in_type["CertificateType"]="String"
        namecheap_ssl_getApproverEmailList_in_maxlen["CertificateType"]="50"
        namecheap_ssl_getApproverEmailList_in_required["CertificateType"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_getApproverEmailList_out
        namecheap_ssl_getApproverEmailList_out["DomainEmails"]="Indicates domain Whois email address"
        namecheap_ssl_getApproverEmailList_out["GenericEmails"]="Indicates generic email addresses for the domain"
        namecheap_ssl_getApproverEmailList_out["ManualEmails"]="This value is returned by provider. The provider segregates emails and sends to us in groups. This value is hidden in Namecheap UI."

    # Error Codes
        declare -A namecheap_ssl_getApproverEmailList_error
        namecheap_ssl_getApproverEmailList_error[2011296]="CSR is invalid"
        namecheap_ssl_getApproverEmailList_error[2011300,]="4011300 CertificateType is invalid"
        namecheap_ssl_getApproverEmailList_error[2011166]="DomainName is invalid"
        namecheap_ssl_getApproverEmailList_error[3022295]="Failed to retrive ApproverEmail"
        namecheap_ssl_getApproverEmailList_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command getInfo
# (generated from file ssl/get-info/index.html)

    # Request Parameters
        declare -A namecheap_ssl_getInfo_in
        declare -A namecheap_ssl_getInfo_in_name
        declare -A namecheap_ssl_getInfo_in_type
        declare -A namecheap_ssl_getInfo_in_maxlen
        declare -A namecheap_ssl_getInfo_in_required
        declare -A namecheap_ssl_getInfo_in_description

        namecheap_ssl_getInfo_in["CertificateID"]="Unique ID of the SSL certificate"
        namecheap_ssl_getInfo_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_getInfo_in_type["CertificateID"]="Number"
        namecheap_ssl_getInfo_in_maxlen["CertificateID"]="10"
        namecheap_ssl_getInfo_in_required["CertificateID"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_getInfo_out
        namecheap_ssl_getInfo_out["Returncertificate"]="String 10 No A flag for returning certificate in response"
        namecheap_ssl_getInfo_out["Returntype"]="String 10 No* Type of returned certificate. Parameter takes “Individual” (for X.509 format) or “PKCS7” values."

    # Error Codes
        declare -A namecheap_ssl_getInfo_error
        namecheap_ssl_getInfo_error[Active]="Certificate is activated"
        namecheap_ssl_getInfo_error[Newpurchase]="This is the initial status after a certificate is purchased. After this, you need to use namecheap.ssl.activate command to activate the certificate."
        namecheap_ssl_getInfo_error[Newrenewal]="This is the initial stage after a 'renewal' certificate is purchased. After this, you need to use namecheap.ssl.activate command to activate the certificate."
        namecheap_ssl_getInfo_error[Purchased]="Comodo certificate is activated and awaiting issuance."
        namecheap_ssl_getInfo_error[Purchaseerror]="Error while processing the certificate."
        namecheap_ssl_getInfo_error[Cancelled]="Certificate is canceled."
        namecheap_ssl_getInfo_error[Replaced]="Certificate was replaced after a reissue of the certificate."

# Package namecheap.ssl, Command getList
# (generated from file ssl/get-list/index.html)

    # Request Parameters
        declare -A namecheap_ssl_getList_in
        declare -A namecheap_ssl_getList_in_name
        declare -A namecheap_ssl_getList_in_type
        declare -A namecheap_ssl_getList_in_maxlen
        declare -A namecheap_ssl_getList_in_required
        declare -A namecheap_ssl_getList_in_description

        namecheap_ssl_getList_in["ListType"]="Possible values are ALL,Processing,EmailSent,TechnicalProblem,InProgress, Completed,Deactivated,Active,Cancelled,NewPurchase, NewRenewal.
"
        namecheap_ssl_getList_in_optname["ListType"]="list-type"
        namecheap_ssl_getList_in_type["ListType"]="String"
        namecheap_ssl_getList_in_maxlen["ListType"]="50"
        namecheap_ssl_getList_in_required["ListType"]="No"

        namecheap_ssl_getList_in["Default"]=""
        namecheap_ssl_getList_in_optname["Default"]="default"
        namecheap_ssl_getList_in_type["Default"]="Value:"
        namecheap_ssl_getList_in_maxlen["Default"]="All"
        namecheap_ssl_getList_in_required["Default"]=""

        namecheap_ssl_getList_in["SearchTerm"]="Keyword to look for on the SSL list"
        namecheap_ssl_getList_in_optname["SearchTerm"]="search-term"
        namecheap_ssl_getList_in_type["SearchTerm"]="String"
        namecheap_ssl_getList_in_maxlen["SearchTerm"]="70"
        namecheap_ssl_getList_in_required["SearchTerm"]="No"

        namecheap_ssl_getList_in["Page"]="Page to return Default Value: 1"
        namecheap_ssl_getList_in_optname["Page"]="page"
        namecheap_ssl_getList_in_type["Page"]="Number"
        namecheap_ssl_getList_in_maxlen["Page"]="10"
        namecheap_ssl_getList_in_required["Page"]="No"

        namecheap_ssl_getList_in["PageSize"]="Total number of SSL certificates to display in a page. Minimum value is 10 and maximum value is 100.  Default Value: 20"
        namecheap_ssl_getList_in_optname["PageSize"]="page-size"
        namecheap_ssl_getList_in_type["PageSize"]="Number"
        namecheap_ssl_getList_in_maxlen["PageSize"]="100"
        namecheap_ssl_getList_in_required["PageSize"]="No"

        namecheap_ssl_getList_in["SortBy"]="Possible values are PURCHASEDATE, PURCHASEDATE_DESC, SSLTYPE, SSLTYPE_DESC, EXPIREDATETIME, EXPIREDATETIME_DESC,Host_Name, Host_Name_DESC."
        namecheap_ssl_getList_in_optname["SortBy"]="sort-by"
        namecheap_ssl_getList_in_type["SortBy"]="String"
        namecheap_ssl_getList_in_maxlen["SortBy"]="20"
        namecheap_ssl_getList_in_required["SortBy"]="No"

    # Response Parameters
        declare -A namecheap_ssl_getList_out
        namecheap_ssl_getList_out["CertificateID"]="The unique integer value that represents the SSL certificate"
        namecheap_ssl_getList_out["HostName"]="The common name for which the SSL is used"
        namecheap_ssl_getList_out["SSLType"]="Type of SSL"
        namecheap_ssl_getList_out["PurchaseDate"]="The date at which the certificate is purchased"
        namecheap_ssl_getList_out["ExpireDate"]="The date at which the certificate expires"
        namecheap_ssl_getList_out["ActivationExpireDate"]="The date before which the certificate needs to be activated"
        namecheap_ssl_getList_out["IsExpiredYN"]="The expiration status of the certificate"
        namecheap_ssl_getList_out["Status"]="The current status of SSL certificate"

    # Error Codes
        declare -A namecheap_ssl_getList_error
        namecheap_ssl_getList_error[5050900]="Unhandled exceptions"
        namecheap_ssl_getList_error[2011272]="ListType is invalid"

# Package namecheap.ssl, Command parseCSR
# (generated from file ssl/parse-csr/index.html)

    # Request Parameters
        declare -A namecheap_ssl_parseCSR_in
        declare -A namecheap_ssl_parseCSR_in_name
        declare -A namecheap_ssl_parseCSR_in_type
        declare -A namecheap_ssl_parseCSR_in_maxlen
        declare -A namecheap_ssl_parseCSR_in_required
        declare -A namecheap_ssl_parseCSR_in_description

        namecheap_ssl_parseCSR_in["csr"]="Certificate Signing Request"
        namecheap_ssl_parseCSR_in_optname["csr"]="csr"
        namecheap_ssl_parseCSR_in_type["csr"]="String"
        namecheap_ssl_parseCSR_in_maxlen["csr"]="2000"
        namecheap_ssl_parseCSR_in_required["csr"]="Yes"

        namecheap_ssl_parseCSR_in["CertificateType"]="Type of SSL Certificate"
        namecheap_ssl_parseCSR_in_optname["CertificateType"]="certificate-type"
        namecheap_ssl_parseCSR_in_type["CertificateType"]="String"
        namecheap_ssl_parseCSR_in_maxlen["CertificateType"]="50"
        namecheap_ssl_parseCSR_in_required["CertificateType"]="No*"

    # Response Parameters
        declare -A namecheap_ssl_parseCSR_out
        namecheap_ssl_parseCSR_out["Common"]="name The hostname for which SSL is applied."
        namecheap_ssl_parseCSR_out["Domain"]="name The domain name for which SSL is applied."
        namecheap_ssl_parseCSR_out["Country"]="Country of the SSL applicant."
        namecheap_ssl_parseCSR_out["Organisation"]="Unit Organisation unit of the SSL applicant."
        namecheap_ssl_parseCSR_out["Organisation"]="Organisation of the SSL applicant."
        namecheap_ssl_parseCSR_out["ValidTrueDomain"]="This value is returned by GeoTrust provider only. It indicates whether CSR parse was successful."
        namecheap_ssl_parseCSR_out["State"]="State information of the SSL applicant."
        namecheap_ssl_parseCSR_out["Locality"]="Locality information of the SSL applicant."
        namecheap_ssl_parseCSR_out["Email"]="Email address of the SSL applicant."

    # Error Codes
        declare -A namecheap_ssl_parseCSR_error
        namecheap_ssl_parseCSR_error[2011300]="CertificateType is invalid"
        namecheap_ssl_parseCSR_error[3022296]="Failed to retrive CSR details from provider"
        namecheap_ssl_parseCSR_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command purchasemoresans
# (generated from file ssl/purchasemoresans/index.html)

    # Request Parameters
        declare -A namecheap_ssl_purchasemoresans_in
        declare -A namecheap_ssl_purchasemoresans_in_name
        declare -A namecheap_ssl_purchasemoresans_in_type
        declare -A namecheap_ssl_purchasemoresans_in_maxlen
        declare -A namecheap_ssl_purchasemoresans_in_required
        declare -A namecheap_ssl_purchasemoresans_in_description

        namecheap_ssl_purchasemoresans_in["CertificateID"]="ID of the certificate for which you wish to purchase more add-on domains"
        namecheap_ssl_purchasemoresans_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_purchasemoresans_in_type["CertificateID"]="Number"
        namecheap_ssl_purchasemoresans_in_maxlen["CertificateID"]="10"
        namecheap_ssl_purchasemoresans_in_required["CertificateID"]="Yes"

        namecheap_ssl_purchasemoresans_in["NumberOfSANSToAdd"]="Number of add-on domains to be ordered"
        namecheap_ssl_purchasemoresans_in_optname["NumberOfSANSToAdd"]="number-of-s-a-n-s-to-add"
        namecheap_ssl_purchasemoresans_in_type["NumberOfSANSToAdd"]="Number"
        namecheap_ssl_purchasemoresans_in_maxlen["NumberOfSANSToAdd"]="2"
        namecheap_ssl_purchasemoresans_in_required["NumberOfSANSToAdd"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_purchasemoresans_out
        namecheap_ssl_purchasemoresans_out["IsSuccess"]="Indicates whether more SANs were purchased"
        namecheap_ssl_purchasemoresans_out["Order"]="ID A unique integer value that represents the order"
        namecheap_ssl_purchasemoresans_out["TransactionID"]="A unique integer value that represents the transaction"
        namecheap_ssl_purchasemoresans_out["ChargedAmount"]="The amount charged for the order"
        namecheap_ssl_purchasemoresans_out["CertificateID"]="A unique integer value that represents the SSL"
        namecheap_ssl_purchasemoresans_out["SSLType"]="Type of SSL certificate"
        namecheap_ssl_purchasemoresans_out["Years"]="Number of years for which the certificate is purchased"
        namecheap_ssl_purchasemoresans_out["Status"]="The current status of SSL certificate"
        namecheap_ssl_purchasemoresans_out["SANSCount"]="Indicates the number of add-on domains"

    # Error Codes
        declare -A namecheap_ssl_purchasemoresans_error
        namecheap_ssl_purchasemoresans_error[2033409]="Possibly a logical error in authentication phase. Order chargeable for Username is not found."
        namecheap_ssl_purchasemoresans_error[2015167]="Number of years should be maximum 10"
        namecheap_ssl_purchasemoresans_error[2011301]="SSLType is invalid"
        namecheap_ssl_purchasemoresans_error[2011170]="Promotion code is invalid"
        namecheap_ssl_purchasemoresans_error[4011299]="The Purchasevalidationid already exists.The certificate cannot be created."
        namecheap_ssl_purchasemoresans_error[2528166]="Order creation failed"
        namecheap_ssl_purchasemoresans_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command reissue
# (generated from file ssl/reissue/index.html)

    # Request Parameters
        declare -A namecheap_ssl_reissue_in
        declare -A namecheap_ssl_reissue_in_name
        declare -A namecheap_ssl_reissue_in_type
        declare -A namecheap_ssl_reissue_in_maxlen
        declare -A namecheap_ssl_reissue_in_required
        declare -A namecheap_ssl_reissue_in_description

        namecheap_ssl_reissue_in["CertificateID"]="Unique identifier of SSL certificate to be reissued"
        namecheap_ssl_reissue_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_reissue_in_type["CertificateID"]="number"
        namecheap_ssl_reissue_in_maxlen["CertificateID"]="10"
        namecheap_ssl_reissue_in_required["CertificateID"]="Yes"

        namecheap_ssl_reissue_in["CSR"]=""
        namecheap_ssl_reissue_in_optname["CSR"]="c-s-r"
        namecheap_ssl_reissue_in_type["CSR"]="string"
        namecheap_ssl_reissue_in_maxlen["CSR"]="32767
"
        namecheap_ssl_reissue_in_required["CSR"]=""

        namecheap_ssl_reissue_in["Yes"]="(CSR)"
        namecheap_ssl_reissue_in_optname["Yes"]="yes"
        namecheap_ssl_reissue_in_type["Yes"]="Certificate"
        namecheap_ssl_reissue_in_maxlen["Yes"]="Signing"
        namecheap_ssl_reissue_in_required["Yes"]="Request"

        namecheap_ssl_reissue_in["AdminEmailAddress"]="Email address to send signed SSL certificate file to. It is not possible to change AdminEmailAddress in reissue due to limitation from Certificate Authority. SSL file will be sent to AdminEmailAddress used in the initial activate call."
        namecheap_ssl_reissue_in_optname["AdminEmailAddress"]="admin-email-address"
        namecheap_ssl_reissue_in_type["AdminEmailAddress"]="string"
        namecheap_ssl_reissue_in_maxlen["AdminEmailAddress"]="255"
        namecheap_ssl_reissue_in_required["AdminEmailAddress"]="No"

        namecheap_ssl_reissue_in["WebServerType"]="Server software where SSL will be installed. Defines SSL certificate file format (PEM or PKCS7). Allowed values: apacheopenssl, apachessl, apacheraven, apachessleay, apache2, apacheapachessl, tomcat, cpanel, ipswitch, plesk, weblogic, website, webstar, nginx, iis, iis4, iis5, c2net, ibmhttp, iplanet, domino, dominogo4625, dominogo4626, netscape, zeusv3, cobaltseries, ensim, hsphere, other"
        namecheap_ssl_reissue_in_optname["WebServerType"]="web-server-type"
        namecheap_ssl_reissue_in_type["WebServerType"]="string"
        namecheap_ssl_reissue_in_maxlen["WebServerType"]="50"
        namecheap_ssl_reissue_in_required["WebServerType"]="No"

        namecheap_ssl_reissue_in["UniqueValue"]="Unique identifier of SSL issue/reissue request. If not provided, it is created by the Namecheap system."
        namecheap_ssl_reissue_in_optname["UniqueValue"]="unique-value"
        namecheap_ssl_reissue_in_type["UniqueValue"]="string"
        namecheap_ssl_reissue_in_maxlen["UniqueValue"]="20"
        namecheap_ssl_reissue_in_required["UniqueValue"]="No"

    # Response Parameters
        declare -A namecheap_ssl_reissue_out
        namecheap_ssl_reissue_out["ApproverEmail"]="string 255 No* Sets method to pass DCV through.
"
        namecheap_ssl_reissue_out["Allowed"]="values:
"
        namecheap_ssl_reissue_out["-"]="one of the domain-related email addresses returned by getApproverEmailList API. - HTTPCSRHASH, CNAMECSRHASH (multi-domain certificates only).
"
        namecheap_ssl_reissue_out["* Becomes"]="required if none of HTTPDCValidation or DNSDCValidation is supplied"
        namecheap_ssl_reissue_out["HTTPDCValidation"]="bool N/A No Sets all domains in certificate request to be validated through HTTP DCV. This method is not available for Wildcard certificates."
        namecheap_ssl_reissue_out["DNSDCValidation"]="bool N/A No Sets all domains in certificate requested domains to be validated through CNAME DCV"

    # Error Codes
        declare -A namecheap_ssl_reissue_error
        namecheap_ssl_reissue_error[DNSNames]="string 32767 No Specifies domain names to be included into the certificate request in addition to the Common Name in (CSR)
"
        namecheap_ssl_reissue_error[Format:]="a comma-separated list of Fully-Qualified Domain Names. Number of items must be less or equal to the number of purchased additional domains (SANSCount). 
"
        namecheap_ssl_reissue_error[Use]="getInfo API to check SANSCount. Use purchaseMoreSans API to increase SANSCount"
        namecheap_ssl_reissue_error[DNSApproverEmails]="string 32767 No* Sets method to pass DCV through for each domain in the certificate request.
"
        namecheap_ssl_reissue_error[*]="Becomes required if at least one domain is passed in DNSNames
"
        namecheap_ssl_reissue_error[Format:]="a comma-separated list of DCV methods that corresponds each domain supplied in DNSNames. One DCV method for each domain.
"
        namecheap_ssl_reissue_error[Allowed]="values:  one of the domain-related email addresses returned by getApproverEmailList API, HTTPCSRHASH, CNAMECSRHASH"

# Package namecheap.ssl, Command renew
# (generated from file ssl/renew/index.html)

    # Request Parameters
        declare -A namecheap_ssl_renew_in
        declare -A namecheap_ssl_renew_in_name
        declare -A namecheap_ssl_renew_in_type
        declare -A namecheap_ssl_renew_in_maxlen
        declare -A namecheap_ssl_renew_in_required
        declare -A namecheap_ssl_renew_in_description

        namecheap_ssl_renew_in["CertificateID"]="Unique ID of the SSL certificate you wish to renew"
        namecheap_ssl_renew_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_renew_in_type["CertificateID"]="Number"
        namecheap_ssl_renew_in_maxlen["CertificateID"]="9"
        namecheap_ssl_renew_in_required["CertificateID"]="Yes"

        namecheap_ssl_renew_in["Years"]="Number of years renewal SSL will be issued for
"
        namecheap_ssl_renew_in_optname["Years"]="years"
        namecheap_ssl_renew_in_type["Years"]="Number"
        namecheap_ssl_renew_in_maxlen["Years"]="1"
        namecheap_ssl_renew_in_required["Years"]="Yes"

        namecheap_ssl_renew_in["Allowed"]=""
        namecheap_ssl_renew_in_optname["Allowed"]="allowed"
        namecheap_ssl_renew_in_type["Allowed"]="values:"
        namecheap_ssl_renew_in_maxlen["Allowed"]="1,2,3,4,5"
        namecheap_ssl_renew_in_required["Allowed"]=""

        namecheap_ssl_renew_in["SSLType"]="SSL product name. See \"Possible values for SSLType parameter\" below this table."
        namecheap_ssl_renew_in_optname["SSLType"]="s-s-l-type"
        namecheap_ssl_renew_in_type["SSLType"]="String"
        namecheap_ssl_renew_in_maxlen["SSLType"]="50"
        namecheap_ssl_renew_in_required["SSLType"]="Yes"

        namecheap_ssl_renew_in["PromotionCode"]="Promotional (coupon) code for the certificate"
        namecheap_ssl_renew_in_optname["PromotionCode"]="promotion-code"
        namecheap_ssl_renew_in_type["PromotionCode"]="String"
        namecheap_ssl_renew_in_maxlen["PromotionCode"]="20"
        namecheap_ssl_renew_in_required["PromotionCode"]="No"

    # Response Parameters
        declare -A namecheap_ssl_renew_out
        namecheap_ssl_renew_out["CertificateID"]="A unique integer value that identifies the renewal certificate created as result of renewal"
        namecheap_ssl_renew_out["Years"]="Number of years for which the renewal certificate will be valid once it is issued"
        namecheap_ssl_renew_out["Order"]="ID A unique integer value that identifies the renewal order"
        namecheap_ssl_renew_out["TransactionID"]="A unique integer value that identifies the renewal transaction"
        namecheap_ssl_renew_out["ChargedAmount"]="The amount charged for the order"

    # Error Codes
        declare -A namecheap_ssl_renew_error

# Package namecheap.ssl, Command resendApproverEmail
# (generated from file ssl/resend-approver-email/index.html)

    # Request Parameters
        declare -A namecheap_ssl_resendApproverEmail_in
        declare -A namecheap_ssl_resendApproverEmail_in_name
        declare -A namecheap_ssl_resendApproverEmail_in_type
        declare -A namecheap_ssl_resendApproverEmail_in_maxlen
        declare -A namecheap_ssl_resendApproverEmail_in_required
        declare -A namecheap_ssl_resendApproverEmail_in_description

        namecheap_ssl_resendApproverEmail_in["CertificateID"]="The unique certificate ID that you get after calling ssl.create command"
        namecheap_ssl_resendApproverEmail_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_resendApproverEmail_in_type["CertificateID"]="String"
        namecheap_ssl_resendApproverEmail_in_maxlen["CertificateID"]="10"
        namecheap_ssl_resendApproverEmail_in_required["CertificateID"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_resendApproverEmail_out
        namecheap_ssl_resendApproverEmail_out["ID"]="The unique integer value that represents the SSL certificate"
        namecheap_ssl_resendApproverEmail_out["IsSuccess"]="Indicates whether the approver email was resent successfully"

    # Error Codes
        declare -A namecheap_ssl_resendApproverEmail_error
        namecheap_ssl_resendApproverEmail_error[2011294]="CertificateID is invalid"
        namecheap_ssl_resendApproverEmail_error[2011331]="Status is invalid"
        namecheap_ssl_resendApproverEmail_error[3011295]="ApproverEmail is invalid"
        namecheap_ssl_resendApproverEmail_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command resendfulfillmentemail
# (generated from file ssl/resend-fulfillment-email/index.html)

    # Request Parameters
        declare -A namecheap_ssl_resendfulfillmentemail_in
        declare -A namecheap_ssl_resendfulfillmentemail_in_name
        declare -A namecheap_ssl_resendfulfillmentemail_in_type
        declare -A namecheap_ssl_resendfulfillmentemail_in_maxlen
        declare -A namecheap_ssl_resendfulfillmentemail_in_required
        declare -A namecheap_ssl_resendfulfillmentemail_in_description

        namecheap_ssl_resendfulfillmentemail_in["CertificateID"]="The unique certificate ID that you get after calling ssl.create command"
        namecheap_ssl_resendfulfillmentemail_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_resendfulfillmentemail_in_type["CertificateID"]="String"
        namecheap_ssl_resendfulfillmentemail_in_maxlen["CertificateID"]="10"
        namecheap_ssl_resendfulfillmentemail_in_required["CertificateID"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_resendfulfillmentemail_out
        namecheap_ssl_resendfulfillmentemail_out["ID"]="The unique integer value that represents the SSL certificate"
        namecheap_ssl_resendfulfillmentemail_out["IsSuccess"]="Indicates whether the fulfillment email was resent successfully"

    # Error Codes
        declare -A namecheap_ssl_resendfulfillmentemail_error
        namecheap_ssl_resendfulfillmentemail_error[2011294]="CertificateID is invalid"
        namecheap_ssl_resendfulfillmentemail_error[2011331]="Status is invalid"
        namecheap_ssl_resendfulfillmentemail_error[3022334]="Failed to resend fulfillment email"
        namecheap_ssl_resendfulfillmentemail_error[5050900]="Unhandled exceptions"

# Package namecheap.ssl, Command revokecertificate
# (generated from file ssl/revokecertificate/index.html)

    # Request Parameters
        declare -A namecheap_ssl_revokecertificate_in
        declare -A namecheap_ssl_revokecertificate_in_name
        declare -A namecheap_ssl_revokecertificate_in_type
        declare -A namecheap_ssl_revokecertificate_in_maxlen
        declare -A namecheap_ssl_revokecertificate_in_required
        declare -A namecheap_ssl_revokecertificate_in_description

        namecheap_ssl_revokecertificate_in["CertificateID"]="ID of the certificate for you wish to revoke Default Value: 1"
        namecheap_ssl_revokecertificate_in_optname["CertificateID"]="certificate-i-d"
        namecheap_ssl_revokecertificate_in_type["CertificateID"]="Number"
        namecheap_ssl_revokecertificate_in_maxlen["CertificateID"]="10"
        namecheap_ssl_revokecertificate_in_required["CertificateID"]="Yes"

        namecheap_ssl_revokecertificate_in["CertificateType"]="Type of SSL Certificate"
        namecheap_ssl_revokecertificate_in_optname["CertificateType"]="certificate-type"
        namecheap_ssl_revokecertificate_in_type["CertificateType"]="String"
        namecheap_ssl_revokecertificate_in_maxlen["CertificateType"]="50"
        namecheap_ssl_revokecertificate_in_required["CertificateType"]="Yes"

    # Response Parameters
        declare -A namecheap_ssl_revokecertificate_out
        namecheap_ssl_revokecertificate_out["IsSuccess"]="Indicates whether the certificate was revoked successfully"
        namecheap_ssl_revokecertificate_out["CertificateID"]="A unique integer value that represents the certificate"

    # Error Codes
        declare -A namecheap_ssl_revokecertificate_error
        namecheap_ssl_revokecertificate_error[4011331]="Status is invalid"
        namecheap_ssl_revokecertificate_error[2011300]="Wrong SSL certificate selection. The type provided is not supported by command."

# Package namecheap.users.address, Command create
# (generated from file users-address/create/index.html)

    # Request Parameters
        declare -A namecheap_users_address_create_in
        declare -A namecheap_users_address_create_in_name
        declare -A namecheap_users_address_create_in_type
        declare -A namecheap_users_address_create_in_maxlen
        declare -A namecheap_users_address_create_in_required
        declare -A namecheap_users_address_create_in_description

        namecheap_users_address_create_in["AddressName"]="Address name to create"
        namecheap_users_address_create_in_optname["AddressName"]="address-name"
        namecheap_users_address_create_in_type["AddressName"]="String"
        namecheap_users_address_create_in_maxlen["AddressName"]="20"
        namecheap_users_address_create_in_required["AddressName"]="Yes"

        namecheap_users_address_create_in["DefaultYN"]="Possible values are 0 and 1.If the value of this parameter is set to 1, the address is set as default address for the user."
        namecheap_users_address_create_in_optname["DefaultYN"]="default-y-n"
        namecheap_users_address_create_in_type["DefaultYN"]="Number"
        namecheap_users_address_create_in_maxlen["DefaultYN"]="128"
        namecheap_users_address_create_in_required["DefaultYN"]="No"

        namecheap_users_address_create_in["EmailAddress"]="Email address of the user"
        namecheap_users_address_create_in_optname["EmailAddress"]="email-address"
        namecheap_users_address_create_in_type["EmailAddress"]="String"
        namecheap_users_address_create_in_maxlen["EmailAddress"]="128"
        namecheap_users_address_create_in_required["EmailAddress"]="Yes"

        namecheap_users_address_create_in["FirstName"]="First name of the user"
        namecheap_users_address_create_in_optname["FirstName"]="first-name"
        namecheap_users_address_create_in_type["FirstName"]="String"
        namecheap_users_address_create_in_maxlen["FirstName"]="60"
        namecheap_users_address_create_in_required["FirstName"]="Yes"

        namecheap_users_address_create_in["LastName"]="Last name of the user"
        namecheap_users_address_create_in_optname["LastName"]="last-name"
        namecheap_users_address_create_in_type["LastName"]="String"
        namecheap_users_address_create_in_maxlen["LastName"]="60"
        namecheap_users_address_create_in_required["LastName"]="Yes"

        namecheap_users_address_create_in["JobTitle"]="Job designation of the user"
        namecheap_users_address_create_in_optname["JobTitle"]="job-title"
        namecheap_users_address_create_in_type["JobTitle"]="String"
        namecheap_users_address_create_in_maxlen["JobTitle"]="60"
        namecheap_users_address_create_in_required["JobTitle"]="No"

        namecheap_users_address_create_in["Organization"]="Organization of the user"
        namecheap_users_address_create_in_optname["Organization"]="organization"
        namecheap_users_address_create_in_type["Organization"]="String"
        namecheap_users_address_create_in_maxlen["Organization"]="60"
        namecheap_users_address_create_in_required["Organization"]="No"

        namecheap_users_address_create_in["Address1"]="StreetAddress1 of the user"
        namecheap_users_address_create_in_optname["Address1"]="address1"
        namecheap_users_address_create_in_type["Address1"]="String"
        namecheap_users_address_create_in_maxlen["Address1"]="60"
        namecheap_users_address_create_in_required["Address1"]="Yes"

        namecheap_users_address_create_in["Address2"]="StreetAddress2 of the user"
        namecheap_users_address_create_in_optname["Address2"]="address2"
        namecheap_users_address_create_in_type["Address2"]="String"
        namecheap_users_address_create_in_maxlen["Address2"]="60"
        namecheap_users_address_create_in_required["Address2"]="No"

        namecheap_users_address_create_in["City"]="City  of the user"
        namecheap_users_address_create_in_optname["City"]="city"
        namecheap_users_address_create_in_type["City"]="String"
        namecheap_users_address_create_in_maxlen["City"]="60"
        namecheap_users_address_create_in_required["City"]="Yes"

        namecheap_users_address_create_in["StateProvince"]="State/Province of the user"
        namecheap_users_address_create_in_optname["StateProvince"]="state-province"
        namecheap_users_address_create_in_type["StateProvince"]="String"
        namecheap_users_address_create_in_maxlen["StateProvince"]="60"
        namecheap_users_address_create_in_required["StateProvince"]="Yes"

        namecheap_users_address_create_in["StateProvinceChoice"]="State/Province choice of the user"
        namecheap_users_address_create_in_optname["StateProvinceChoice"]="state-province-choice"
        namecheap_users_address_create_in_type["StateProvinceChoice"]="String"
        namecheap_users_address_create_in_maxlen["StateProvinceChoice"]="60"
        namecheap_users_address_create_in_required["StateProvinceChoice"]="Yes"

        namecheap_users_address_create_in["Zip"]="Zip/Postal code of the user"
        namecheap_users_address_create_in_optname["Zip"]="zip"
        namecheap_users_address_create_in_type["Zip"]="String"
        namecheap_users_address_create_in_maxlen["Zip"]="15"
        namecheap_users_address_create_in_required["Zip"]="Yes"

        namecheap_users_address_create_in["Country"]="Two letter country code of the user"
        namecheap_users_address_create_in_optname["Country"]="country"
        namecheap_users_address_create_in_type["Country"]="String"
        namecheap_users_address_create_in_maxlen["Country"]="2"
        namecheap_users_address_create_in_required["Country"]="Yes"

        namecheap_users_address_create_in["Phone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_users_address_create_in_optname["Phone"]="phone"
        namecheap_users_address_create_in_type["Phone"]="String"
        namecheap_users_address_create_in_maxlen["Phone"]="20"
        namecheap_users_address_create_in_required["Phone"]="Yes"

        namecheap_users_address_create_in["PhoneExt"]="PhoneExt of the user"
        namecheap_users_address_create_in_optname["PhoneExt"]="phone-ext"
        namecheap_users_address_create_in_type["PhoneExt"]="String"
        namecheap_users_address_create_in_maxlen["PhoneExt"]="10"
        namecheap_users_address_create_in_required["PhoneExt"]="No"

        namecheap_users_address_create_in["Fax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_users_address_create_in_optname["Fax"]="fax"
        namecheap_users_address_create_in_type["Fax"]="String"
        namecheap_users_address_create_in_maxlen["Fax"]="20"
        namecheap_users_address_create_in_required["Fax"]="No"

    # Response Parameters
        declare -A namecheap_users_address_create_out
        namecheap_users_address_create_out["Success"]="Indicates whether the address was created successfully."
        namecheap_users_address_create_out["AddressID"]="A unique integer value that represents the address profile"
        namecheap_users_address_create_out["AddressName"]="The name for the created address profile"

    # Error Codes
        declare -A namecheap_users_address_create_error
        namecheap_users_address_create_error[4011331]="StatusCode for create is invalid"
        namecheap_users_address_create_error[4023336]="Failed to add user's address"
        namecheap_users_address_create_error[2015182]="The contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"

# Package namecheap.users.address, Command delete
# (generated from file users-address/delete/index.html)

    # Request Parameters
        declare -A namecheap_users_address_delete_in
        declare -A namecheap_users_address_delete_in_name
        declare -A namecheap_users_address_delete_in_type
        declare -A namecheap_users_address_delete_in_maxlen
        declare -A namecheap_users_address_delete_in_required
        declare -A namecheap_users_address_delete_in_description

        namecheap_users_address_delete_in["AddressId"]="The unique AddressID to delete"
        namecheap_users_address_delete_in_optname["AddressId"]="address-id"
        namecheap_users_address_delete_in_type["AddressId"]="Number"
        namecheap_users_address_delete_in_maxlen["AddressId"]="20"
        namecheap_users_address_delete_in_required["AddressId"]="Yes"

    # Response Parameters
        declare -A namecheap_users_address_delete_out
        namecheap_users_address_delete_out["Success"]="Indicates whether the address was deleted successfully."
        namecheap_users_address_delete_out["ProfileID"]="A unique integer value that represents the address profile."
        namecheap_users_address_delete_out["Username"]="The username in question"

    # Error Codes
        declare -A namecheap_users_address_delete_error
        namecheap_users_address_delete_error[4011331]="StatusCode for delete is invalid"
        namecheap_users_address_delete_error[4025336]="Failed to delete user's address"

# Package namecheap.users.address, Command getInfo
# (generated from file users-address/get-info/index.html)

    # Request Parameters
        declare -A namecheap_users_address_getInfo_in
        declare -A namecheap_users_address_getInfo_in_name
        declare -A namecheap_users_address_getInfo_in_type
        declare -A namecheap_users_address_getInfo_in_maxlen
        declare -A namecheap_users_address_getInfo_in_required
        declare -A namecheap_users_address_getInfo_in_description

    # Response Parameters
        declare -A namecheap_users_address_getInfo_out
        namecheap_users_address_getInfo_out["AddressId"]="Number 20 Yes The unique AddressID"

    # Error Codes
        declare -A namecheap_users_address_getInfo_error
        namecheap_users_address_getInfo_error[4011331]="StatusCode for getInfo is invalid"
        namecheap_users_address_getInfo_error[4022336]="Failed to retrieve user's address"

# Package namecheap.users.address, Command getList
# (generated from file users-address/get-list/index.html)

    # Request Parameters
        declare -A namecheap_users_address_getList_in
        declare -A namecheap_users_address_getList_in_name
        declare -A namecheap_users_address_getList_in_type
        declare -A namecheap_users_address_getList_in_maxlen
        declare -A namecheap_users_address_getList_in_required
        declare -A namecheap_users_address_getList_in_description

    # Response Parameters
        declare -A namecheap_users_address_getList_out
        namecheap_users_address_getList_out["AddressID"]="A unique integer value that represents the address profile"
        namecheap_users_address_getList_out["AddressName"]="The name of the address profile"

    # Error Codes
        declare -A namecheap_users_address_getList_error
        namecheap_users_address_getList_error[4011331]="StatusCode for update is invalid"

# Package namecheap.users.address, Command setDefault
# (generated from file users-address/set-default/index.html)

    # Request Parameters
        declare -A namecheap_users_address_setDefault_in
        declare -A namecheap_users_address_setDefault_in_name
        declare -A namecheap_users_address_setDefault_in_type
        declare -A namecheap_users_address_setDefault_in_maxlen
        declare -A namecheap_users_address_setDefault_in_required
        declare -A namecheap_users_address_setDefault_in_description

        namecheap_users_address_setDefault_in["AddressId"]="The unique addressID to set default"
        namecheap_users_address_setDefault_in_optname["AddressId"]="address-id"
        namecheap_users_address_setDefault_in_type["AddressId"]="Number"
        namecheap_users_address_setDefault_in_maxlen["AddressId"]="20"
        namecheap_users_address_setDefault_in_required["AddressId"]="Yes"

    # Response Parameters
        declare -A namecheap_users_address_setDefault_out
        namecheap_users_address_setDefault_out["Success"]="Indicates whether the default address was set successfully"
        namecheap_users_address_setDefault_out["AddressID"]="A unique integer value that represents the address profile"

    # Error Codes
        declare -A namecheap_users_address_setDefault_error
        namecheap_users_address_setDefault_error[4023336]="Failed to set default user's address"

# Package namecheap.users.address, Command update
# (generated from file users-address/update/index.html)

    # Request Parameters
        declare -A namecheap_users_address_update_in
        declare -A namecheap_users_address_update_in_name
        declare -A namecheap_users_address_update_in_type
        declare -A namecheap_users_address_update_in_maxlen
        declare -A namecheap_users_address_update_in_required
        declare -A namecheap_users_address_update_in_description

        namecheap_users_address_update_in["AddressId"]="The unique address ID to update"
        namecheap_users_address_update_in_optname["AddressId"]="address-id"
        namecheap_users_address_update_in_type["AddressId"]="Number"
        namecheap_users_address_update_in_maxlen["AddressId"]="20"
        namecheap_users_address_update_in_required["AddressId"]="Yes"

        namecheap_users_address_update_in["AddressName"]="The AddressName to update"
        namecheap_users_address_update_in_optname["AddressName"]="address-name"
        namecheap_users_address_update_in_type["AddressName"]="String"
        namecheap_users_address_update_in_maxlen["AddressName"]="20"
        namecheap_users_address_update_in_required["AddressName"]="Yes"

        namecheap_users_address_update_in["DefaultYN"]="Possible values are 0 and 1. If the value of this parameter is set to 1, the updated address is also set as default address for the user."
        namecheap_users_address_update_in_optname["DefaultYN"]="default-y-n"
        namecheap_users_address_update_in_type["DefaultYN"]="Number"
        namecheap_users_address_update_in_maxlen["DefaultYN"]="128"
        namecheap_users_address_update_in_required["DefaultYN"]="No"

        namecheap_users_address_update_in["EmailAddress"]="Email address of the user"
        namecheap_users_address_update_in_optname["EmailAddress"]="email-address"
        namecheap_users_address_update_in_type["EmailAddress"]="String"
        namecheap_users_address_update_in_maxlen["EmailAddress"]="128"
        namecheap_users_address_update_in_required["EmailAddress"]="Yes"

        namecheap_users_address_update_in["FirstName"]="First name of the user"
        namecheap_users_address_update_in_optname["FirstName"]="first-name"
        namecheap_users_address_update_in_type["FirstName"]="String"
        namecheap_users_address_update_in_maxlen["FirstName"]="60"
        namecheap_users_address_update_in_required["FirstName"]="Yes"

        namecheap_users_address_update_in["LastName"]="Last name of the user"
        namecheap_users_address_update_in_optname["LastName"]="last-name"
        namecheap_users_address_update_in_type["LastName"]="String"
        namecheap_users_address_update_in_maxlen["LastName"]="60"
        namecheap_users_address_update_in_required["LastName"]="Yes"

        namecheap_users_address_update_in["JobTitle"]="Job designation of the user"
        namecheap_users_address_update_in_optname["JobTitle"]="job-title"
        namecheap_users_address_update_in_type["JobTitle"]="String"
        namecheap_users_address_update_in_maxlen["JobTitle"]="60"
        namecheap_users_address_update_in_required["JobTitle"]="No"

        namecheap_users_address_update_in["Organization"]="Organization of the user"
        namecheap_users_address_update_in_optname["Organization"]="organization"
        namecheap_users_address_update_in_type["Organization"]="String"
        namecheap_users_address_update_in_maxlen["Organization"]="60"
        namecheap_users_address_update_in_required["Organization"]="No"

        namecheap_users_address_update_in["Address1"]="StreetAddress1 of the user"
        namecheap_users_address_update_in_optname["Address1"]="address1"
        namecheap_users_address_update_in_type["Address1"]="String"
        namecheap_users_address_update_in_maxlen["Address1"]="60"
        namecheap_users_address_update_in_required["Address1"]="Yes"

        namecheap_users_address_update_in["Address2"]="StreetAddress2 of the user"
        namecheap_users_address_update_in_optname["Address2"]="address2"
        namecheap_users_address_update_in_type["Address2"]="String"
        namecheap_users_address_update_in_maxlen["Address2"]="60"
        namecheap_users_address_update_in_required["Address2"]="No"

        namecheap_users_address_update_in["City"]="City  of the user"
        namecheap_users_address_update_in_optname["City"]="city"
        namecheap_users_address_update_in_type["City"]="String"
        namecheap_users_address_update_in_maxlen["City"]="60"
        namecheap_users_address_update_in_required["City"]="Yes"

        namecheap_users_address_update_in["StateProvince"]="State/Province of the user"
        namecheap_users_address_update_in_optname["StateProvince"]="state-province"
        namecheap_users_address_update_in_type["StateProvince"]="String"
        namecheap_users_address_update_in_maxlen["StateProvince"]="60"
        namecheap_users_address_update_in_required["StateProvince"]="Yes"

        namecheap_users_address_update_in["StateProvinceChoice"]="State/Province choice of the user"
        namecheap_users_address_update_in_optname["StateProvinceChoice"]="state-province-choice"
        namecheap_users_address_update_in_type["StateProvinceChoice"]="String"
        namecheap_users_address_update_in_maxlen["StateProvinceChoice"]="60"
        namecheap_users_address_update_in_required["StateProvinceChoice"]="Yes"

        namecheap_users_address_update_in["Zip"]="Zip/Postal code of the user"
        namecheap_users_address_update_in_optname["Zip"]="zip"
        namecheap_users_address_update_in_type["Zip"]="String"
        namecheap_users_address_update_in_maxlen["Zip"]="15"
        namecheap_users_address_update_in_required["Zip"]="Yes"

        namecheap_users_address_update_in["Country"]="Two letter country code of the user"
        namecheap_users_address_update_in_optname["Country"]="country"
        namecheap_users_address_update_in_type["Country"]="String"
        namecheap_users_address_update_in_maxlen["Country"]="2"
        namecheap_users_address_update_in_required["Country"]="Yes"

        namecheap_users_address_update_in["Phone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_users_address_update_in_optname["Phone"]="phone"
        namecheap_users_address_update_in_type["Phone"]="String"
        namecheap_users_address_update_in_maxlen["Phone"]="20"
        namecheap_users_address_update_in_required["Phone"]="Yes"

        namecheap_users_address_update_in["PhoneExt"]="PhoneExt of the user"
        namecheap_users_address_update_in_optname["PhoneExt"]="phone-ext"
        namecheap_users_address_update_in_type["PhoneExt"]="String"
        namecheap_users_address_update_in_maxlen["PhoneExt"]="10"
        namecheap_users_address_update_in_required["PhoneExt"]="No"

        namecheap_users_address_update_in["Fax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_users_address_update_in_optname["Fax"]="fax"
        namecheap_users_address_update_in_type["Fax"]="String"
        namecheap_users_address_update_in_maxlen["Fax"]="20"
        namecheap_users_address_update_in_required["Fax"]="No"

    # Response Parameters
        declare -A namecheap_users_address_update_out
        namecheap_users_address_update_out["Success"]="Indicates whether the default address was updated successfully."
        namecheap_users_address_update_out["AddressID"]="A unique integer value that represents the address profile"
        namecheap_users_address_update_out["AddressName"]="The name of the address profile"

    # Error Codes
        declare -A namecheap_users_address_update_error
        namecheap_users_address_update_error[4011331]="StatusCode for update is invalid"
        namecheap_users_address_update_error[4024336]="Failed to update user's address"
        namecheap_users_address_update_error[2015182]="The contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"

# Package namecheap.users, Command changePassword
# (generated from file users/change-password/index.html)

    # Request Parameters
        declare -A namecheap_users_changePassword_in
        declare -A namecheap_users_changePassword_in_name
        declare -A namecheap_users_changePassword_in_type
        declare -A namecheap_users_changePassword_in_maxlen
        declare -A namecheap_users_changePassword_in_required
        declare -A namecheap_users_changePassword_in_description

        namecheap_users_changePassword_in["OldPassword"]="Old password of the user"
        namecheap_users_changePassword_in_optname["OldPassword"]="old-password"
        namecheap_users_changePassword_in_type["OldPassword"]="String"
        namecheap_users_changePassword_in_maxlen["OldPassword"]="20"
        namecheap_users_changePassword_in_required["OldPassword"]="Yes"

        namecheap_users_changePassword_in["NewPassword"]="New password of the user"
        namecheap_users_changePassword_in_optname["NewPassword"]="new-password"
        namecheap_users_changePassword_in_type["NewPassword"]="String"
        namecheap_users_changePassword_in_maxlen["NewPassword"]="20"
        namecheap_users_changePassword_in_required["NewPassword"]="Yes"

    # Response Parameters
        declare -A namecheap_users_changePassword_out
        namecheap_users_changePassword_out["Success"]="Indicates if the password was changed successfully"
        namecheap_users_changePassword_out["UserID"]="A unique integer value that represents the username"

    # Error Codes
        declare -A namecheap_users_changePassword_error
        namecheap_users_changePassword_error[2010302]="OldPassword is missing"
        namecheap_users_changePassword_error[4022335]="Unable to change password"
        namecheap_users_changePassword_error[5050900]="Unhandled exceptions"

# Package namecheap.users, Command createaddfundsrequest
# (generated from file users/create-add-funds-request/index.html)

    # Request Parameters
        declare -A namecheap_users_createaddfundsrequest_in
        declare -A namecheap_users_createaddfundsrequest_in_name
        declare -A namecheap_users_createaddfundsrequest_in_type
        declare -A namecheap_users_createaddfundsrequest_in_maxlen
        declare -A namecheap_users_createaddfundsrequest_in_required
        declare -A namecheap_users_createaddfundsrequest_in_description

        namecheap_users_createaddfundsrequest_in["Username"]="Username to add funds to"
        namecheap_users_createaddfundsrequest_in_optname["Username"]="username"
        namecheap_users_createaddfundsrequest_in_type["Username"]="String"
        namecheap_users_createaddfundsrequest_in_maxlen["Username"]="20"
        namecheap_users_createaddfundsrequest_in_required["Username"]="Yes"

        namecheap_users_createaddfundsrequest_in["PaymentType"]="Allowed payment value: Creditcard"
        namecheap_users_createaddfundsrequest_in_optname["PaymentType"]="payment-type"
        namecheap_users_createaddfundsrequest_in_type["PaymentType"]="String"
        namecheap_users_createaddfundsrequest_in_maxlen["PaymentType"]="30"
        namecheap_users_createaddfundsrequest_in_required["PaymentType"]="Yes"

        namecheap_users_createaddfundsrequest_in["Amount"]="Amount to add"
        namecheap_users_createaddfundsrequest_in_optname["Amount"]="amount"
        namecheap_users_createaddfundsrequest_in_type["Amount"]="Number"
        namecheap_users_createaddfundsrequest_in_maxlen["Amount"]="10"
        namecheap_users_createaddfundsrequest_in_required["Amount"]="Yes"

        namecheap_users_createaddfundsrequest_in["ReturnUrl"]="A valid URL to which the user should be redirected once payment is complete"
        namecheap_users_createaddfundsrequest_in_optname["ReturnUrl"]="return-url"
        namecheap_users_createaddfundsrequest_in_type["ReturnUrl"]="String"
        namecheap_users_createaddfundsrequest_in_maxlen["ReturnUrl"]="300"
        namecheap_users_createaddfundsrequest_in_required["ReturnUrl"]="Yes"

    # Response Parameters
        declare -A namecheap_users_createaddfundsrequest_out
        namecheap_users_createaddfundsrequest_out["TokenID"]="It is a unique ID that is created by API, it will redirect user to add funds page in user’s account where they can add funds."
        namecheap_users_createaddfundsrequest_out["RedirectURL"]="The URL that is used to submit credit card details."
        namecheap_users_createaddfundsrequest_out["ReturnURL"]="The valid URL to which the user will be redirected after payment."

    # Error Codes
        declare -A namecheap_users_createaddfundsrequest_error
        namecheap_users_createaddfundsrequest_error[2030343]="Parameter PaymentType is unsupported"
        namecheap_users_createaddfundsrequest_error[2019103]="Username not found"
        namecheap_users_createaddfundsrequest_error[2015312]="Minimum amount should be added"
        namecheap_users_createaddfundsrequest_error[2013312]="Amount is out of range"
        namecheap_users_createaddfundsrequest_error[2029341]="Credit card not approved"
        namecheap_users_createaddfundsrequest_error[5050900]="Unknown Exceptions"

# Package namecheap.users, Command create
# (generated from file users/create/index.html)

    # Request Parameters
        declare -A namecheap_users_create_in
        declare -A namecheap_users_create_in_name
        declare -A namecheap_users_create_in_type
        declare -A namecheap_users_create_in_maxlen
        declare -A namecheap_users_create_in_required
        declare -A namecheap_users_create_in_description

    # Response Parameters
        declare -A namecheap_users_create_out
        namecheap_users_create_out["NewUserName"]="String 20 Yes Username for the new user account"
        namecheap_users_create_out["NewUserPassword"]="String  20  Yes  Password for the new user account"
        namecheap_users_create_out["EmailAddress"]="String  128  Yes  Email address of the user"
        namecheap_users_create_out["IgnoreDuplicateEmailAddress"]="String  10  No  By default, it ignores to check if the email address is already in use.  Default Value:  Yes"
        namecheap_users_create_out["FirstName"]="String  60  Yes  First name of the user"
        namecheap_users_create_out["LastName"]="String  60  Yes  Last name of the user"
        namecheap_users_create_out["AcceptTerms"]="Number 1 Yes Terms of agreement. The Value should be 1 for user account creation.  Default Value:  1"
        namecheap_users_create_out["AcceptNews"]="Number 1 No Possible values are 0 and 1. Value should be 1 if the user wants to recieve newsletters else it should be 0."
        namecheap_users_create_out["JobTitle"]="String  60  No  Job designation of the user"
        namecheap_users_create_out["Organization"]="String  60  No  Organization of the user"
        namecheap_users_create_out["Address1"]="String  60  Yes  StreetAddress1 of the user"
        namecheap_users_create_out["Address2"]="String  60  No  StreetAddress2 of the user"
        namecheap_users_create_out["City"]="String  60  Yes  City  of the user"
        namecheap_users_create_out["StateProvince"]="String  60  Yes  State/Province of the user"
        namecheap_users_create_out["Zip"]="String  15  Yes  Zip/Postal code of the user"
        namecheap_users_create_out["Country"]="String  2  Yes  Two letter country code of the user"
        namecheap_users_create_out["Phone"]="String  20 Yes  Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_users_create_out["PhoneExt"]="String  10  No  PhoneExt of the user"
        namecheap_users_create_out["Fax"]="String  20  No  Fax number in the format +NNN.NNNNNNNNNN"

    # Error Codes
        declare -A namecheap_users_create_error
        namecheap_users_create_error[2011153]="Email address is invalid"
        namecheap_users_create_error[2011163]="Phone is invalid"
        namecheap_users_create_error[2011165]="Fax is invalid"
        namecheap_users_create_error[2011151]="FirstName is invalid"
        namecheap_users_create_error[2011152]="LastName is invalid"
        namecheap_users_create_error[2011103]="UserName is invalid"
        namecheap_users_create_error[2033153]="Email address is already in use"
        namecheap_users_create_error[2015182]="The contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"
        namecheap_users_create_error[4011331]="StatusCode  for create user is invalid"
        namecheap_users_create_error[4022103]="Failed to create user"

# Package namecheap.users, Command getAddFundsStatus
# (generated from file users/get-add-funds-status/index.html)

    # Request Parameters
        declare -A namecheap_users_getAddFundsStatus_in
        declare -A namecheap_users_getAddFundsStatus_in_name
        declare -A namecheap_users_getAddFundsStatus_in_type
        declare -A namecheap_users_getAddFundsStatus_in_maxlen
        declare -A namecheap_users_getAddFundsStatus_in_required
        declare -A namecheap_users_getAddFundsStatus_in_description

        namecheap_users_getAddFundsStatus_in["TokenId"]="The Unique ID that you received after calling
"
        namecheap_users_getAddFundsStatus_in_optname["TokenId"]="token-id"
        namecheap_users_getAddFundsStatus_in_type["TokenId"]="String"
        namecheap_users_getAddFundsStatus_in_maxlen["TokenId"]="100"
        namecheap_users_getAddFundsStatus_in_required["TokenId"]="Yes"

        namecheap_users_getAddFundsStatus_in["namecheap.users.createaddfundsrequest"]=""
        namecheap_users_getAddFundsStatus_in_optname["namecheap.users.createaddfundsrequest"]="namecheap.users.createaddfundsrequest"
        namecheap_users_getAddFundsStatus_in_type["namecheap.users.createaddfundsrequest"]="method"
        namecheap_users_getAddFundsStatus_in_maxlen["namecheap.users.createaddfundsrequest"]=""
        namecheap_users_getAddFundsStatus_in_required["namecheap.users.createaddfundsrequest"]=""

    # Response Parameters
        declare -A namecheap_users_getAddFundsStatus_out
        namecheap_users_getAddFundsStatus_out["TransactionID"]="A unique integer value that represents the transaction"
        namecheap_users_getAddFundsStatus_out["Amount"]="The amount added"
        namecheap_users_getAddFundsStatus_out["Status"]="The status of added fund. Possible values: CREATED, SUBMITTED, COMPLETED, FAILED, EXPIRED"

    # Error Codes
        declare -A namecheap_users_getAddFundsStatus_error
        namecheap_users_getAddFundsStatus_error[2012342]="TokenID mismatch"
        namecheap_users_getAddFundsStatus_error[5050900]="Unknown Exceptions"

# Package namecheap.users, Command getBalances
# (generated from file users/get-balances/index.html)

    # Request Parameters
        declare -A namecheap_users_getBalances_in
        declare -A namecheap_users_getBalances_in_name
        declare -A namecheap_users_getBalances_in_type
        declare -A namecheap_users_getBalances_in_maxlen
        declare -A namecheap_users_getBalances_in_required
        declare -A namecheap_users_getBalances_in_description

    # Response Parameters
        declare -A namecheap_users_getBalances_out
        namecheap_users_getBalances_out["Currency"]="Currency in which the price is listed"
        namecheap_users_getBalances_out["AvailableBalance"]="Total amount in the customer’s account"
        namecheap_users_getBalances_out["AccountBalance"]="Total amount in the customer’s account. Currently it is the same as Available Balance."
        namecheap_users_getBalances_out["EarnedAmount"]="Amount earned from Marketplace sales"
        namecheap_users_getBalances_out["WithdrawableAmount"]="Amount available for withdraw"
        namecheap_users_getBalances_out["FundsRequiredForAutoRenew"]="Amount required for auto-renewal"

    # Error Codes
        declare -A namecheap_users_getBalances_error
        namecheap_users_getBalances_error[4022312]="Balance information is not available"

# Package namecheap.users, Command getPricing
# (generated from file users/get-pricing/index.html)

    # Request Parameters
        declare -A namecheap_users_getPricing_in
        declare -A namecheap_users_getPricing_in_name
        declare -A namecheap_users_getPricing_in_type
        declare -A namecheap_users_getPricing_in_maxlen
        declare -A namecheap_users_getPricing_in_required
        declare -A namecheap_users_getPricing_in_description

        namecheap_users_getPricing_in["ProductType"]="Product Type to get pricing information"
        namecheap_users_getPricing_in_optname["ProductType"]="product-type"
        namecheap_users_getPricing_in_type["ProductType"]="String"
        namecheap_users_getPricing_in_maxlen["ProductType"]="20"
        namecheap_users_getPricing_in_required["ProductType"]="Yes"

        namecheap_users_getPricing_in["ProductCategory"]="Specific category within a product type"
        namecheap_users_getPricing_in_optname["ProductCategory"]="product-category"
        namecheap_users_getPricing_in_type["ProductCategory"]="String"
        namecheap_users_getPricing_in_maxlen["ProductCategory"]="20"
        namecheap_users_getPricing_in_required["ProductCategory"]="No"

        namecheap_users_getPricing_in["PromotionCode"]="Promotional (coupon) code for the user"
        namecheap_users_getPricing_in_optname["PromotionCode"]="promotion-code"
        namecheap_users_getPricing_in_type["PromotionCode"]="String"
        namecheap_users_getPricing_in_maxlen["PromotionCode"]="20"
        namecheap_users_getPricing_in_required["PromotionCode"]="No"

        namecheap_users_getPricing_in["ActionName"]="Specific action within a product type"
        namecheap_users_getPricing_in_optname["ActionName"]="action-name"
        namecheap_users_getPricing_in_type["ActionName"]="String"
        namecheap_users_getPricing_in_maxlen["ActionName"]="20"
        namecheap_users_getPricing_in_required["ActionName"]="No"

        namecheap_users_getPricing_in["ProductName"]="The name of the product within a product type"
        namecheap_users_getPricing_in_optname["ProductName"]="product-name"
        namecheap_users_getPricing_in_type["ProductName"]="String"
        namecheap_users_getPricing_in_maxlen["ProductName"]="20"
        namecheap_users_getPricing_in_required["ProductName"]="No"

    # Response Parameters
        declare -A namecheap_users_getPricing_out
        namecheap_users_getPricing_out["DOMAIN"]="DOMAINS REGISTER,RENEW,REACTIVATE,TRANSFER COM"
        namecheap_users_getPricing_out["SSLCERTIFICATE"]="COMODO PURCHASE,RENEW INSTANTSSL"

    # Error Codes
        declare -A namecheap_users_getPricing_error
        namecheap_users_getPricing_error[ProductType]="Name The type of product"
        namecheap_users_getPricing_error[ProductCategory]="Name Category type of the product"
        namecheap_users_getPricing_error[Product]="Name Name of the product"
        namecheap_users_getPricing_error[Duration]="The duration of the product"
        namecheap_users_getPricing_error[DurationType]="The duration type of the product"
        namecheap_users_getPricing_error[Price]="Indicates Final price (it can be from regular, userprice, special price,promo price, tier price)"
        namecheap_users_getPricing_error[RegularPrice]="Indicates regular price"
        namecheap_users_getPricing_error[YourPrice]="The user’s price for the product"
        namecheap_users_getPricing_error[CouponPrice]="Price with coupon enabled"
        namecheap_users_getPricing_error[Currency]="Currency in which the price is listed"

# Package namecheap.users, Command login
# (generated from file users/login/index.html)

    # Request Parameters
        declare -A namecheap_users_login_in
        declare -A namecheap_users_login_in_name
        declare -A namecheap_users_login_in_type
        declare -A namecheap_users_login_in_maxlen
        declare -A namecheap_users_login_in_required
        declare -A namecheap_users_login_in_description

        namecheap_users_login_in["Password"]="Password of the user account"
        namecheap_users_login_in_optname["Password"]="password"
        namecheap_users_login_in_type["Password"]="String"
        namecheap_users_login_in_maxlen["Password"]="20"
        namecheap_users_login_in_required["Password"]="Yes"

    # Response Parameters
        declare -A namecheap_users_login_out
        namecheap_users_login_out["Username"]="Indicates the username of the user account"
        namecheap_users_login_out["LoginSuccess"]="Indicates whether the login was successful"

    # Error Codes
        declare -A namecheap_users_login_error
        namecheap_users_login_error[2011335]="Parameter Password is missing"
        namecheap_users_login_error[2019166]="UserName is not available"
        namecheap_users_login_error[2010335]="Invalid password"
        namecheap_users_login_error[2017166]="User is disabled or locked"
        namecheap_users_login_error[2013410]="Too many declined payments"
        namecheap_users_login_error[2017289]="Parameter IP  Blocked"
        namecheap_users_login_error[2011166]="UserName is invalid"
        namecheap_users_login_error[5050900]="Unknown exceptions"

# Package namecheap.users, Command resetPassword
# (generated from file users/reset-password/index.html)

    # Request Parameters
        declare -A namecheap_users_resetPassword_in
        declare -A namecheap_users_resetPassword_in_name
        declare -A namecheap_users_resetPassword_in_type
        declare -A namecheap_users_resetPassword_in_maxlen
        declare -A namecheap_users_resetPassword_in_required
        declare -A namecheap_users_resetPassword_in_description

        namecheap_users_resetPassword_in["FindBy"]="Possible values:EMAILADDRESS,
"
        namecheap_users_resetPassword_in_optname["FindBy"]="find-by"
        namecheap_users_resetPassword_in_type["FindBy"]="String"
        namecheap_users_resetPassword_in_maxlen["FindBy"]="20"
        namecheap_users_resetPassword_in_required["FindBy"]="Yes"

        namecheap_users_resetPassword_in["DOMAINNAME,USERNAME"]=""
        namecheap_users_resetPassword_in_optname["DOMAINNAME,USERNAME"]="d-o-m-a-i-n-n-a-m-e,-u-s-e-r-n-a-m-e"
        namecheap_users_resetPassword_in_type["DOMAINNAME,USERNAME"]=""
        namecheap_users_resetPassword_in_maxlen["DOMAINNAME,USERNAME"]=""
        namecheap_users_resetPassword_in_required["DOMAINNAME,USERNAME"]=""

        namecheap_users_resetPassword_in["FindByValue"]="The username/email address/domain of the user"
        namecheap_users_resetPassword_in_optname["FindByValue"]="find-by-value"
        namecheap_users_resetPassword_in_type["FindByValue"]="String"
        namecheap_users_resetPassword_in_maxlen["FindByValue"]="20"
        namecheap_users_resetPassword_in_required["FindByValue"]="Yes"

        namecheap_users_resetPassword_in["EmailFromName"]="Enter a different value to overwrite the default value  Default Value:  namecheap.com"
        namecheap_users_resetPassword_in_optname["EmailFromName"]="email-from-name"
        namecheap_users_resetPassword_in_type["EmailFromName"]="String"
        namecheap_users_resetPassword_in_maxlen["EmailFromName"]="20"
        namecheap_users_resetPassword_in_required["EmailFromName"]="No"

        namecheap_users_resetPassword_in["EmailFrom"]="Enter a different value to overwrite the default value  Default Value:  support@namecheap.com"
        namecheap_users_resetPassword_in_optname["EmailFrom"]="email-from"
        namecheap_users_resetPassword_in_type["EmailFrom"]="String"
        namecheap_users_resetPassword_in_maxlen["EmailFrom"]="20"
        namecheap_users_resetPassword_in_required["EmailFrom"]="No"

        namecheap_users_resetPassword_in["URLPattern"]="Enter a different URL to overwrite namecheap.com. Refer Example
"
        namecheap_users_resetPassword_in_optname["URLPattern"]="u-r-l-pattern"
        namecheap_users_resetPassword_in_type["URLPattern"]="String"
        namecheap_users_resetPassword_in_maxlen["URLPattern"]="20"
        namecheap_users_resetPassword_in_required["URLPattern"]="No"

        namecheap_users_resetPassword_in["Request#2"]=""
        namecheap_users_resetPassword_in_optname["Request#2"]="request#2"
        namecheap_users_resetPassword_in_type["Request#2"]="Default"
        namecheap_users_resetPassword_in_maxlen["Request#2"]="Value:"
        namecheap_users_resetPassword_in_required["Request#2"]="http://namecheap.com
"

        namecheap_users_resetPassword_in["[RESETCODE]"]=""
        namecheap_users_resetPassword_in_optname["[RESETCODE]"]="[-r-e-s-e-t-c-o-d-e]"
        namecheap_users_resetPassword_in_type["[RESETCODE]"]=""
        namecheap_users_resetPassword_in_maxlen["[RESETCODE]"]=""
        namecheap_users_resetPassword_in_required["[RESETCODE]"]=""

    # Response Parameters
        declare -A namecheap_users_resetPassword_out
        namecheap_users_resetPassword_out["Success"]="Indicates whether the password was reset successfully"

    # Error Codes
        declare -A namecheap_users_resetPassword_error
        namecheap_users_resetPassword_error[2011315]="FindBy is invalid"
        namecheap_users_resetPassword_error[4027153]="Failed to send email"
        namecheap_users_resetPassword_error[4022335]="Unable to reset password"
        namecheap_users_resetPassword_error[5050900]="Unknown exceptions"

# Package namecheap.users, Command update
# (generated from file users/update/index.html)

    # Request Parameters
        declare -A namecheap_users_update_in
        declare -A namecheap_users_update_in_name
        declare -A namecheap_users_update_in_type
        declare -A namecheap_users_update_in_maxlen
        declare -A namecheap_users_update_in_required
        declare -A namecheap_users_update_in_description

        namecheap_users_update_in["FirstName"]="First name of the user"
        namecheap_users_update_in_optname["FirstName"]="first-name"
        namecheap_users_update_in_type["FirstName"]="String"
        namecheap_users_update_in_maxlen["FirstName"]="70"
        namecheap_users_update_in_required["FirstName"]="Yes"

        namecheap_users_update_in["LastName"]="Last name of the user"
        namecheap_users_update_in_optname["LastName"]="last-name"
        namecheap_users_update_in_type["LastName"]="String"
        namecheap_users_update_in_maxlen["LastName"]="70"
        namecheap_users_update_in_required["LastName"]="Yes"

        namecheap_users_update_in["JobTitle"]="Job designation of the user"
        namecheap_users_update_in_optname["JobTitle"]="job-title"
        namecheap_users_update_in_type["JobTitle"]="String"
        namecheap_users_update_in_maxlen["JobTitle"]="60"
        namecheap_users_update_in_required["JobTitle"]="No"

        namecheap_users_update_in["Organization"]="Organization of the user"
        namecheap_users_update_in_optname["Organization"]="organization"
        namecheap_users_update_in_type["Organization"]="String"
        namecheap_users_update_in_maxlen["Organization"]="60"
        namecheap_users_update_in_required["Organization"]="No"

        namecheap_users_update_in["Address1"]="StreetAddress1 of the user"
        namecheap_users_update_in_optname["Address1"]="address1"
        namecheap_users_update_in_type["Address1"]="String"
        namecheap_users_update_in_maxlen["Address1"]="60"
        namecheap_users_update_in_required["Address1"]="Yes"

        namecheap_users_update_in["Address2"]="StreetAddress2 of the user"
        namecheap_users_update_in_optname["Address2"]="address2"
        namecheap_users_update_in_type["Address2"]="String"
        namecheap_users_update_in_maxlen["Address2"]="60"
        namecheap_users_update_in_required["Address2"]="No"

        namecheap_users_update_in["City"]="City  of the user"
        namecheap_users_update_in_optname["City"]="city"
        namecheap_users_update_in_type["City"]="String"
        namecheap_users_update_in_maxlen["City"]="60"
        namecheap_users_update_in_required["City"]="Yes"

        namecheap_users_update_in["StateProvince"]="State/Province of the user"
        namecheap_users_update_in_optname["StateProvince"]="state-province"
        namecheap_users_update_in_type["StateProvince"]="String"
        namecheap_users_update_in_maxlen["StateProvince"]="60"
        namecheap_users_update_in_required["StateProvince"]="Yes"

        namecheap_users_update_in["Zip"]="Zip/Postal code of the user"
        namecheap_users_update_in_optname["Zip"]="zip"
        namecheap_users_update_in_type["Zip"]="String"
        namecheap_users_update_in_maxlen["Zip"]="15"
        namecheap_users_update_in_required["Zip"]="Yes"

        namecheap_users_update_in["Country"]="Two letter country code of the user"
        namecheap_users_update_in_optname["Country"]="country"
        namecheap_users_update_in_type["Country"]="String"
        namecheap_users_update_in_maxlen["Country"]="2"
        namecheap_users_update_in_required["Country"]="Yes"

        namecheap_users_update_in["EmailAddress"]="Email address of the user"
        namecheap_users_update_in_optname["EmailAddress"]="email-address"
        namecheap_users_update_in_type["EmailAddress"]="String"
        namecheap_users_update_in_maxlen["EmailAddress"]="255"
        namecheap_users_update_in_required["EmailAddress"]="Yes"

        namecheap_users_update_in["Phone"]="Phone number in the format +NNN.NNNNNNNNNN"
        namecheap_users_update_in_optname["Phone"]="phone"
        namecheap_users_update_in_type["Phone"]="String"
        namecheap_users_update_in_maxlen["Phone"]="20"
        namecheap_users_update_in_required["Phone"]="Yes"

        namecheap_users_update_in["PhoneExt"]="PhoneExt of the user"
        namecheap_users_update_in_optname["PhoneExt"]="phone-ext"
        namecheap_users_update_in_type["PhoneExt"]="String"
        namecheap_users_update_in_maxlen["PhoneExt"]="10"
        namecheap_users_update_in_required["PhoneExt"]="No"

        namecheap_users_update_in["Fax"]="Fax number in the format +NNN.NNNNNNNNNN"
        namecheap_users_update_in_optname["Fax"]="fax"
        namecheap_users_update_in_type["Fax"]="String"
        namecheap_users_update_in_maxlen["Fax"]="20"
        namecheap_users_update_in_required["Fax"]="No"

    # Response Parameters
        declare -A namecheap_users_update_out
        namecheap_users_update_out["Success"]="Indicates if the password was updated successfully"
        namecheap_users_update_out["UserID"]="A unique integer value that represents the username"

    # Error Codes
        declare -A namecheap_users_update_error
        namecheap_users_update_error[4011331]="StatusCode  for update is invalid"
        namecheap_users_update_error[4024103]="Failed to update user"
        namecheap_users_update_error[2015182]="The contact phone is invalid. The phone number format is +NNN.NNNNNNNNNN"

