#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}

    . shlib
    import cliboot
    import strfn

    option -p --package =PACKAGE
    option -c --cmd-name =NAME
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    opt_package=
    opt_cmd_name=

function setopt() {
    case "$1" in
        -p|--package)
            opt_package="$2";;
        -c|--cmd-name)
            opt_cmd_name="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    indent1="    "
    indent2="        "

    fncode decl_cmd
    fncode decl_in
    fncode decl_out
    fncode decl_err
    
    for html in "$@"; do
        package=$opt_package
        cmd_name=$opt_cmd_name
        if [ -z "$package" ]; then
            read qid < <(domq -T h2 <"$html")
            if [ "$qid" = 'Request Parameters' ]; then
                read qid < <(domq -T '.api-docs h3' <"$html")
            fi
            package="${qid%.*}"
            cmd_name="${qid##*.}"
        fi

        pkgvar=${package//./_}
        cmdvar=${pkgvar}_${cmd_name}

        echo
        echo "# Package $package, Command $cmd_name"
        echo "# (generated from file $html)"

        read ntable nw nc _ < <( domq -t table <"$html" | wc )
        section=1

        echo
        echo "${indent1}# Request Parameters"
        echo "${indent2}decl_cmd \"$package\" \"$cmd_name\""
        if [ $ntable -ge 3 ]; then
            while read name type maxlen required description; do
                [ -z "$name" ] && continue
                local optname=$(hyphenatize $name)
                optname=${optname#-}
                in_param "$name" "$optname" "$type" "$maxlen" "$required" "$description"
            done < <(domq -T "table:nth-of-type($section)" tbody tr <"$html" )
            ((section++))
        fi

        echo
        echo "${indent1}# Response Parameters"
        while read name description; do
            [ -z "$name" ] && continue
            out_param "$name" "$description"
        done < <(domq -T "table:nth-of-type($section)" tbody tr <"$html" )
        ((section++))

        echo
        echo "${indent1}# Error Codes"
        while read number description; do
            [ -z "$number" ] && continue
            error_code "$number" "$description"
        done < <(domq -T "table:nth-of-type($section)" tbody tr <"$html" )
        ((section++))
    done
}

function fncode() {
    local fn="$1"
    type $fn | (read line; cat)
}

function decl_cmd() {
    g_package="$1"
    g_pkgvar=${g_package//./_}
    g_cmd="$2"
    local cmdvar=${g_pkgvar}_${g_cmd}
    declare -gA ${cmdvar}_in
    declare -gA ${cmdvar}_in_optname
    declare -gA ${cmdvar}_in_type
    declare -gA ${cmdvar}_in_maxlen
    declare -gA ${cmdvar}_in_required
    declare -gA ${cmdvar}_out
    declare -gA ${cmdvar}_error
}

function decl_in() {
    local name="$1"
    local cmdvar=${g_pkgvar}_${g_cmd}
    local -n a_optname=${cmdvar}_in_optname
    local -n a_type=${cmdvar}_in_type
    local -n a_maxlen=${cmdvar}_in_maxlen
    local -n a_required=${cmdvar}_in_required
    local -n a_doc=${cmdvar}_in
    a_optname[$name]="$2"
    a_type[$name]="$3"
    a_maxlen[$name]="$4"
    a_required[$name]="$5"
    a_doc[$name]="$6"
}

function decl_out() {
    local name="$1"
    local cmdvar=${g_pkgvar}_${g_cmd}
    local -n a_doc=${cmdvar}_out
    a_doc[$name]="$2"
}

function decl_err() {
    local number="$1"
    local cmdvar=${g_pkgvar}_${g_cmd}
    local -n a_doc=${cmdvar}_error
    a_doc[$number]="$2"
}

function in_param() {
    local name="$1"
    local optname="$2"
    local type="$3"
    local maxlen="$4"
    local required="$5"
    local description=$(escape "$6")
    echo "${indent2}decl_in \"$name\" \"$optname\" \"$type\" \"$maxlen\" \"$required\" \\"
    echo "${indent2}        \"$description\""
}

function out_param() {
    local name="$1"
    local description=$(escape "$2")
    echo "${indent2}decl_out \"$name\" \"$description\""
}

function error_code() {
    local number="$1"
    local description=$(escape "$2")
    echo "${indent2}decl_err $number \"$description\""
}

function escape() {
    local s="$*"
    s="${s//\"/\\\"}"
    echo "$s"
}

boot "$@"
