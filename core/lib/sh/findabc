
# findabc [-r ROOT] NAME[/] [dirs-addtopath...]
function findabc() {
    local root output
    root=$LAPIOTA/abc.d
	last=

    local OPTIND
    while getopts r:lp opt; do
        case $opt in
            r)
                root=$OPTARG;;
            l)
                last=1;;
            p)
                output=1;;
            *)
                echo error option: $opt
                return 1;;
        esac
    done
    shift $((OPTIND-1))
    if [ $# -lt 1 ]; then
        echo findabc [-r ROOT] package [dirs-addtopath...]
        return 1
    fi

    local package=$1
    local enter

    # if package.contains '/'
    if [ "${package/\/}" != "$package" ]; then
        enter=/${package#*/}
        package=${package%%/*}
    fi
    # assert no symbolic-link loop
    unset _home
    unset _expand
    # local scope?

    while [ -z "$_home" ]; do
        local prefix="$package"
        # if exist p/prefix* found.
        match=
        for f in "$root/$_expand$prefix"*; do
            if [ "${f: -1}" != '*' ]; then
                match="$f"
                if [ -z $last ]; then break; fi
            fi
        done
        if [ -n "$match" ]; then
            _expand="$_expand${match##*/}"
            _home="$match"
            break
        fi
        # while chop prefix { if exist p/prefix continue 2 }
        while [ ${#prefix} -gt 0 ]; do
            # echo "  prefix=$prefix"
            if [ -e "$root/$_expand$prefix" ]; then
                _expand="$_expand$prefix/"
                continue 2
            fi
            prefix="${prefix::${#prefix}-1}"
        done
        # not found
        echo not found: $1
        return 1
    done

    if [ "$output" = 1 ]; then echo $_home; fi
    if [ -n "$enter" ]; then cd "$_home$enter"; fi

    shift
    local p
    for p in "$@"; do
        PATH="$PATH:$_home/$p"
    done
    return 0
}
