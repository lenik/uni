#!/usr/bin/perl

=head1 DESCRIPTION

=cut

use strict;
use cmt::util;
use cmt::vcs;
use Data::Dumper;
use Getopt::Long;
use labat;
use YAML;

sub boot;
sub info;   *info = *labat::info;
sub info2;  *info2= *labat::info2;
sub version;
sub help;
sub _main;

our $opt_verbtitle      = 'labat';
our @opt_category;
our $opt_parallel       = 0;

sub boot {
    GetOptions('quiet|q'    => sub { $labat::opt_verbose-- },
               'verbose|v'  => sub { $labat::opt_verbose++ },
               'version'    => sub { version; exit },
               'help|h'     => sub { help; exit },
               'category|c=s' => \@opt_category,
               'parallel|p',
               );
    _main;
}

sub version {
    my %id = parse_id('$Id: labat,v 1.4 2007-09-09 23:20:47 lenik Exp $');
    print "[$opt_verbtitle] Lapiota Batch Processing System \n";
    print "Written by Lenik,  Version $id{rev},  Last updated at $id{date}\n";
}

sub help {
    version;
    print "\nSyntax: \n    $0 [OPTION] [--] files.lb...\n", <<'EOM';

Common options:
    -c, --category=CATEGORY do CATEGORY(s) only
    -p, --parallel          execute in parallel mode
    -h, --help              show this help page
    -q, --quiet             repeat to get less info
    -v, --verbose           repeat to get more info
        --version           print the version info
EOM
}

exit boot;

sub _main {
    die "no filename specified" unless @ARGV;

    my $funs = {};      # function-proto    name => [\&eval, \&proto-parser]
    my $vars = {};      # variable-binding  name => $value
    my $cat  = {};      # category-tree     name => [\%subcat, $desc, @eval]
    my $fs   = [];      # file-stack
    my $ctx  = [ $funs, $vars, [$cat], $fs ];

    for my $file (@ARGV) {
        info2 "parse $file";
        my $cnt = readfile($file);
        my $root = load_syaml($cnt);
        info2 Dump($root) if $labat::opt_verbose > 1;

        info "process $file";
        push @$fs, $file;
        my ($ev, $ctx) = labat_compile($root, $ctx);
        pop @$fs;
        #!info2 "ctx:     " . Dump($ctx);
        # info2 "ev-list: " . Dump($ev);
        labat_eval($ev, $ctx);
    }
}
