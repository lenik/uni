#!/usr/bin/perl

use strict;
use cmt::util;
use cmt::vcs;
use DirHandle;
use Getopt::Long;

sub boot;
sub main;
sub info;
sub info2;
sub lpad;
sub version;
sub help;

our $opt_verbtitle      = 'mp3ltrim';
our $opt_verbtime       = 0;
our $opt_verbose        = 1;
our $opt_rem;
our $opt_at;
our $opt_test;

sub boot {
    GetOptions('quiet|q'    => sub { $opt_verbose-- },
               'verbose|v'  => sub { $opt_verbose++ },
               'version'    => sub { version; exit },
               'help|h'     => sub { help; exit },
               'rem|r',
               'at=n',
               '1'          => sub { $opt_at = 1 },
               '2'          => sub { $opt_at = 2 },
               '3'          => sub { $opt_at = 3 },
               '4'          => sub { $opt_at = 4 },
               '5'          => sub { $opt_at = 5 },
               'test|t',
               );
    #$opt_verbose++ if $opt_test;

    main;
}

sub info {
    return if $opt_verbose < 1;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub info2 {
    return if $opt_verbose < 2;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub lpad {
    my ($str, $len) = @_;
    if (length($str) < $len) {
        $str = '0' x ($len - length($str)) . $str;
    }
    return $str;
}

sub version {
    my %id = parse_id('$Id: mp3ltrim,v 1.5 2007-06-20 11:05:59 lenik Exp $');
    print "[$opt_verbtitle] MP3 Utilities - LTrim\n";
    print "Written by Lenik,  Version $id{rev},  Last updated at $id{date}\n";
}

sub help {
    version;
    print <<"EOM";

Syntax:
        $0 <options> ...

Options:
        --rem (r, remove (...), [...] marks)
        --at=n, --<number> (part of title)
        --test (t, test only)
        --quiet (q)
        --verbose (v, repeat twice give you more verbose info)
        --version
        --help (h)
EOM
}

boot;

sub main {
    my $dh = new DirHandle('.');
    my @files = $dh->read();
    foreach (@files) {
        next if -d;
        next if m/^\.+$/;

        my $new = $_;

        # (prefix *)? track * title .extname
        # track:  '(' 000 ')' '.'
        # title: (at) artist *|__ title
        #        (ta) title *|__ artist
        if (my ($prefix, $track, $title, $extname) =
                m/^ (?: (.*) \s* [[:punct:]] )?   \s*
                    \(? (\d+) \)? \s* [[:punct:]]? \s* (.*) \s* \. ([^\.]+) $/x
            ) {
            # my $preparts = split('-', $prefix);

            $track = lpad($track, 2);

            $title =~ s/\s*\([^\)]+\)//g if $opt_rem;
            $title =~ s/\s*\[[^\]]+\]//g if $opt_rem;

            if ($opt_at) {
                my $max = $opt_at > 2 ? $opt_at : 2;
                my @parts = split(/ (?: \s* [[:punct:]] \s*)
                                   |(?: \s \s+)/x, $title, $max);
                my $part = $parts[$opt_at - 1];
                $title = $part if length $part;
            }

            $new = "$track - $title.$extname";
        }

        if ($_ ne $new) {
            info "rename $_ -> $new";
            rename($_, $new) unless $opt_test;
        }
    }
}
