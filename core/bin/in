#!perl


use strict;
use Getopt::Long;
use cmt::vcs;


our $opt_verbose = 0;
our $opt_quiet = 0;



# ======================================================================
#                               HELPER FUNCTIONS
# ======================================================================
sub version() {
    my %id = parse_id('$Id: in,v 1.4 2007-06-20 10:57:58 lenik Exp $');
    print "[IN] Internet Connection Additional Management Utility\n";
    print "Written by Snima Denik   Version $id{rev}   Last updated at $id{date}\n";
}

sub help() {
    &version;
    print <<"EOM";

Syntax:
    in
        --alias <hostname>=<ip-address>
        --quiet
        --verbose
        --version
        --help
EOM
}

sub typeFile {
    my $path = shift;
    open FH, "<$path";
    while (<FH>) {
        print;
    }
    close FH;
}




# ======================================================================
#                                SUB-MODULES
# ======================================================================
sub funcSetAlias {
    my ($cmd, $host, $addr) = @_;
    my $hostfile = "$ENV{windir}/system32/drivers/etc/hosts";

    open(FH, "<$hostfile") or die("Can't open hosts file");
    my @lines = <FH>;
    close FH;

    my $f;
    for (my $i = 0; $i < scalar(@lines); $i++) {
        $_ = $lines[$i];
        if (/^\s* ([0-9.]+) \s+ (\S+) \s*$/x) {
            my ($addr, $name) = ($1, $2);
            if (lc($name) eq lc($host)) {
                $f = $i;
                last;
            }
        }
    }
    $f ||= scalar(@lines);
    print "Set alias $host=$addr (Line $f)\n" unless $opt_quiet;

    if ($addr) {
        $lines[$f] = "$addr\t$host\n";
    } else {
        splice @lines, $f, 1;
    }

    open(FH, ">$hostfile") or die("Can't write to hosts file");
    print FH join('', @lines);
    close FH;
}


# main
    GetOptions(
        'alias=s%' => \&funcSetAlias,
        'quiet' => \$opt_quiet,
        'verbose|v' => \$opt_verbose,
        'version' => \&version,
        'help' => \&help,
    );
