@rem = '
    @echo off

    perl "%~dpnx0" %*
    goto end
    ';

#!perl

use strict;
use cmt::util;
use cmt::vcs;
use cmt::ftime;
use Getopt::Long;

sub boot;
sub main;
sub info;
sub info2;
sub version;
sub help;

our $opt_verbtitle      = 'pc';
our $opt_verbtime       = 0;
our $opt_verbose        = 1;
our $opt_total          = 0;
our $opt_caption        = '';
our $opt_lines          = 0;
sub boot {
    GetOptions('quiet|q'    => sub { $opt_verbose-- },
               'verbose|v'  => sub { $opt_verbose++ },
               'version'    => sub { version; exit },
               'help|h'     => sub { help; exit },
               'total|t=n',
               'caption|c=s',
               'lines|l',
               );
    if (@ARGV) {
        $opt_caption = join(' ', @ARGV);
    }
    $|=1;
    main;
}

sub info {
    return if $opt_verbose < 1;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub info2 {
    return if $opt_verbose < 2;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub version {
    my %id = parse_id('$Id: pc,v 1.1 2007-03-04 12:17:52 lenik Exp $');
    print "[$opt_verbtitle] Progress/Percent Counter\n";
    print "Written by Lenik,  Version $id{rev},  Last updated at $id{date}\n";
}

sub help {
    version;
    print <<"EOM";

Syntax:
        $0 <options> ...

Options:
        --total=<count> (t, total lines)
        --quiet (q)
        --verbose (v, repeat twice give you more verbose info)
        --version
        --help (h)
EOM
}

boot;

sub percent {
    my $perc = 100 * shift;
    return sprintf("%2.0f%%", $perc);
}

sub main {
    my $line_no = 0;
    while (<STDIN>) {
        $line_no++;
        print "\r";
        print $opt_caption . ' ' if $opt_caption;
        print percent($line_no / $opt_total) . ' '
            unless $opt_total == 0;
        print " $line_no" if $opt_lines;
    }
    print "\n";
}

__END__
:end
