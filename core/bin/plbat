#!/usr/bin/perl

use strict;
use cmt::path;
use cmt::pp;
use cmt::util;
use cmt::vcs;
use Getopt::Long;

sub boot;
sub main;
sub info;
sub info2;
sub version;
sub help;

our $opt_verbtitle      = 'plbat';
our $opt_verbtime       = 0;
our $opt_verbose        = 1;
our $opt_output;
our $opt_console;
our $opt_name           = '%~n0';       # the same name as perl-file

sub boot {
    GetOptions('quiet|q'    => sub { $opt_verbose-- },
               'verbose|v'  => sub { $opt_verbose++ },
               'version'    => sub { version; exit },
               'help|h'     => sub { help; exit },
               'output|o=s',
               'console|c',
               );
    die "no perl-file specified" unless @ARGV;
    my ($dir, $base) = path_split $ARGV[0];
    my ($file, $ext) = path_splitext $base;
    if (defined $opt_output) {
        my ($odir, $obase) = path_split $opt_output;
        my ($ofile, $oext) = path_splitext $obase;
        if ($ofile ne $file) {
            $opt_name = $file;
        }
    } else {
        $opt_output = path_join($dir, "$file.bat");
    }
    main;
}

sub info {
    return if $opt_verbose < 1;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub info2 {
    return if $opt_verbose < 2;
    my $text = shift;
    print datetime.' ' if $opt_verbtime;
    print "[$opt_verbtitle] $text\n";
}

sub version {
    my %id = parse_id('$Id: plbat,v 1.1 2007-08-02 23:47:30 lenik Exp $');
    print "[$opt_verbtitle] perl/bat wrapper \n";
    print "Written by Lenik,  Version $id{rev},  Last updated at $id{date}\n";
}

sub help {
    version;
    print <<"EOM";

Syntax:
    $0 [OPTION] perl-file.pl

Common options:
    -c, --console           output to stdout
    -o, --output=FILE       specify output file name, default perl-file.bat
    -h, --help              show this help page
    -q, --quiet             repeat to get less info
    -v, --verbose           repeat to get more info
        --version           print the version info
EOM
}

exit boot;

sub main {
    my %vars = (
        NAME => $opt_name,
        );

    my $tmpl = join('', <DATA>);

    my $cnt  = ppvar %vars, $tmpl;
    if ($opt_console) {
        print $cnt;
    } else {
        writefile $opt_output, $cnt;
    }
}

__DATA__
@echo off

    if not "%OS%"=="Windows_NT" goto err_os

    setlocal
    set _nam=$NAME
    set _ext=.pl
    if not exist "%~dp0%_nam%.pl" (
        for %%i in (p pc pld) do (
            if exist "%~dp0%_nam%.%%i" (
                set _ext=.%%i
                goto start
            )
        )
        echo is file %~dp0%_nam%.pl lost?
        goto end
    )

:start
    %perl% "%~dp0%_nam%%_ext%" %*
    goto end

:err_os
	echo You must run this program under Windows NT/2000 or above.
	goto end

:end
