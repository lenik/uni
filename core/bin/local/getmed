#!/usr/bin/perl

use strict;
use DirHandle;
use Getopt::Long;


my @name_pats = (
	qr/\s*(?:href|src)\s*=\s*\"([^\"]+)\"/,
	qr/\s*(?:href|src)\s*=([^\"]\S*)/,
	qr/\"([^\"]+)\"/,
	qr/(http:\/\/[^\"\' \t\n]+)\s+/,
	qr/(ftp:\/\/[^\"\' \t\n]+)\s+/,
	);

my @name_valids = (
	qr/\.wma$/,
	qr/\.mp3$/,
	qr/\.avi$/,
	qr/\.rm$/,
	qr/\.ra$/,
	qr/\.rmvb$/,
	qr/\.ape$/,
	);


my ($upat, $npat);

my $text;
my @urls;

my $clean_files = 1;


sub main();
sub help();
sub parse_file;

my $getopt = GetOptions(
	'ext=s'			=> sub { push @name_valids, qr/\.$_[1]$/ },
	'regex=s'		=> sub { push @name_valids, qr/$_[1]/ },
	'keep'			=> sub { $clean_files = 0 },
	'help'			=> \&help,
	);

if (not $getopt) {
	die "syntax error: $!";
} elsif (@ARGV) {
	die "syntax error: @ARGV";
}

main();



sub help() {
	print <<"EOM";
[GETMED] get media URLs from input
syntax:
	$0
	--help --keep --nokeep
	--ext=<explicit ext-name>
	--regex=<reg-exp to full-name

version: 1
	this program is distributed under GPL license.
EOM
	exit -1;
}


sub main() {
	my ($dh, @files);
	$dh = new DirHandle '.';
	@files = $dh->read();

	foreach (@files) {
		parse_file if -f;
		if ($clean_files) {
			unlink if -f;
		}
	}

	# print join("\n", @urls);

	# copy to clipboard
	use Win32::Clipboard;
	my $clip = Win32::Clipboard();
	$clip->Set(join("\r\n", @urls));
}

sub parse_file {
	my $filename = shift @_;
	$filename ||= $_;
	local $_;
	if (open FH, "<$filename") {
		while (<FH>) {
			chop;
			$text.=$_;
			if (length($text)>1000) {
				$text = substr($text, 1000-length($text));
			}

			foreach $upat (@name_pats) {
				while ($text =~ m/$upat/) {
					$text = substr($text, $-[0]+length($&));
					my $url = $1;
					foreach $npat (@name_valids) {
						if ($url =~ m/$npat/) {
							push @urls, $url;
							print "$url\n";
						}
					}
				}
			}
		}
		close FH;
	} else {
		print STDERR "Can't open file $filename: $!";
	}
}
