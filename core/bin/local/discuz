#!perl

use strict;
use Getopt::Long;
use cmt::vcs;
use LWP::UserAgent;
use HTTP::Request;
use HTTP::Request::Common;
use HTTP::Headers;
use HTTP::Cookies;
use HTML::Parser;


sub main;
sub process_queue;
sub request;
sub send_item;
sub _Verbose;
sub ui_set_options;
sub version;
sub help;


our $opt_server = 'www.haining.com.cn/bbs';
our $opt_user_agent = 'Dirt:Discuz/1';
our @opt_actions;
our @opt_cookies;
our $opt_interval = 16;
our $opt_verbose;
our $opt_graphics_user_interface;

our $opt_caption = '';      # 超长连载
our $opt_username = 'jljljjl';
our $opt_password = 'Z7sL0KYT';
our $opt_question = '0';
our $opt_answer = '';
our $opt_forum = 26;
our $opt_thread = 0;        # create one
our $opt_line_min = 15;
our $opt_icon = '59';

our $agent;
our $cookies;
our $formhash;
our $thread_id;
our @send_queue;


    $| = 0;
    &main;


sub main {
    my $wait_sec;
    my $textfile;
    my $textname;
    my $res;


    $opt_graphics_user_interface = 1 if not @ARGV;

    GetOptions(
               'server=s',
               'user-agent=s',
               'cookie=s' => \@opt_cookies,
               'interval|i=n',
               'verbose|v',
               'version' => sub { &version; exit },
               'help' => sub { &help; exit },
               'caption|c=s',
               'username|u=s',
               'password|p=s',
               'question|q=s',
               'answer=s',
               'forum=s',
               'thread=n',
               'icon=s',
               'line-min=n',
               'graphics-user-interface',
               );
    push @opt_actions, @ARGV if @ARGV;

    if ($opt_graphics_user_interface) {
        &ui_set_options;
    }

    die "No actions specified. " if !@opt_actions;
    die "Cookies haven't been supported, yet" if @opt_cookies;


    $agent = new LWP::UserAgent(
        env_proxy => 1,
        keep_alive => 1,
        timeout => 300,
        agent => "$opt_user_agent",
        );

    push @{ $agent->requests_redirectable }, 'POST';


    $textfile = shift @opt_actions;
    $textname = $textfile;
    $textname =~ s/^(.*\/\\)+//;    # basename
    $textname =~ s/\.\w+$//;        # remove ext-name
    open(FH, "<$textfile")
        || die "Can't open $textfile";


    $cookies = new HTTP::Cookies(
        file => "$ENV{TEMP}/discuz-cookies.txt",
        autosave => 1,
        );
    $agent->cookie_jar($cookies);


    # logout
        request GET "http://$opt_server/logging.php?action=logout";


    # calculate formhash-1, question-id
        $res =
        request GET "http://$opt_server/logging.php?action=login";

        $res->as_string =~ m/
                <input \s+ type="hidden" \s+ name="formhash" \s+
                 value="([^\"]+)">
            /six;
        $formhash = $1;
        print "Formhash = $formhash\n";


        $res->as_string =~ m/
                (<select \s+ name="questionid" [^>]*> \s*
                    (
                    <option \s+ value="(\d+)"> \s* ([^<]*?) \s* <\/option> \s*
                    )+)
            /six;
        $_ = $1;
        my ($qid, $qname);
        while (/<option \s+ value="(\d+)"> \s* ([^<]*?) \s* <\/option>/sixg) {
            ($qid, $qname) = ($1, $2);
            if ($qname =~ m/$opt_question/) {
                $opt_question = $qid;
                last;
            }
        }
        die "Invalid question $opt_question" if $opt_question !~ m/^\d+$/;
        print "Question $opt_question - $qname, Answer '$opt_answer'\n";


    # calculate forum-id
        $res =
        request GET "http://$opt_server/index.php";

        $_ = $res->as_string;
        my $fid;
        my $fname;
        while (/
                    <a \s+ href="forumdisplay\.php\?fid=(\d+)"> \s*
                    (?:<[^>]+>)* \s*
                    (.*?) \s* <\/
                /sixg) {
            ($fid, $fname) = ($1, $2);
            if ($fname =~ m/$opt_forum/i) {
                $opt_forum = $fid;
                last;
            }
        }
        die "Invalid forum $opt_forum" if $opt_forum !~ m/^\d+$/;
        print "Forum $opt_forum - $fname\n";


    # login
        request POST "http://$opt_server/logging.php",
                [
                    action      => 'login',
                    formhash    => "$formhash",
                    referer     => 'http://$opt_server/index.php',
                    cookietime  => '315360000',
                    loginfield  => 'username',
                    username    => $opt_username,
                    password    => $opt_password,
                    questionid  => $opt_question,
                    answer      => $opt_answer,
                    loginsubmit => '提 &nbsp; 交',
                ];


    # fetch formhash-2
        $res =
        request GET "http://$opt_server/post.php?action=newthread&fid=$opt_forum";

        $res->as_string =~ m/
                <input \s+ type="hidden" \s+ name="formhash" \s+
                 value="([^\"]+)">
            /six;
        my $formhash2 = $1;
        print "Formhash = $formhash2\n";
        print "Login failed\n" if ($formhash eq $formhash2);
        $formhash = $formhash2;


    if ($opt_thread == 0) {
        # start a new thread
            my $subject = $opt_caption
                ? "[$opt_caption] - $textname"
                : "$textname";

            $res =
            request POST "http://$opt_server/post.php"
                            ."?action=newthread&fid=$opt_forum"
                            ."&topicsubmit=yes",
                    [
                        formhash    => "$formhash",
                        iconid      => "$opt_icon",
                        mode        => '2',
                        font        => '',
                        size        => '',
                        color       => '',
                        subject     => "$subject",
                        message     => "$opt_caption\n\n题目：$textname\n\n",
                        typeid      => '0',
                        usesig      => '1',
                    ], Content_Type => 'form-data';


        # fetch thread-id
            $res->as_string =~ m/
                    <meta \s+ http-equiv \s* = \s* "refresh" \s+
                    content \s* = \s* "\d+;url=viewthread.php\?tid=(\d+)
                /six;
            $thread_id = $1;
            die "Can't start thread / $thread_id" if $thread_id !~ m/^\d+$/;
    } else {
        $thread_id = $opt_thread;
    }


    # process the thread
        my $poet = '';
        my $smalls = '';
        my $c = qr/(?:[\x80-\xff].|.)/;
        my $cc = qr/(?:“$c*?”|[\x80-\xA0\xA2-\xFF].|[\xA1][^\xB0]|[\x0-\x7f])/;
        while (<>) {
            while (s/^($cc*?。)//) {
                if ($poet) {
                    push @send_queue, "$poet";
                    $poet = '';
                }

                if (length($1) < $opt_line_min) {
                    $smalls .= $1;
                } else {
                    push @send_queue, "$smalls$1";
                    $smalls = '';
                }
            }

            if ($smalls) {
                push @send_queue, "$smalls";
                $smalls = '';
            }
            $poet .= $_ if $_;

            &process_queue;
        }

        if ($poet) {
            push @send_queue, "$poet";
            $poet = '';
        }

        &process_queue;

        if (@send_queue) {
            send_item join('', @send_queue);
        }

    #
    close FH;

}


sub process_queue {
    my $expanded = '';
    while (@send_queue) {
        my $item = shift @send_queue;

        # if only space
        if ($item =~ m/^\s*$/s) {
            $expanded .= $item;
            next;
        }

        # if not enough
        if (length($expanded) + length($item) < $opt_line_min) {
            $expanded .= $item;
            next;
        }

        $item = "$expanded$item";
        $expanded = '';
        $item =~ s/^\s+//;
        $item =~ s/\s+$//;

        send_item $item if $item;
    }
    push @send_queue, $expanded if $expanded;
}


sub request {
    my ($req, $res);
    $req = shift;
    $req = $agent->prepare_request($req);

    print "Action: ", $req->uri, "\n";
    _Verbose $req->as_string;

    $res = $agent->request($req);
    $req = $res->request();
    $cookies->extract_cookies($res);

    print "Result: ", $res->status_line, "\n";
    _Verbose $res->as_string."\n\n\n\n";

    return $res;
}


sub send_item {
    my $item = shift;

    for (my $i = 0; $i < $opt_interval; $i++) {
        sleep 1;
        print STDERR '.';
    }

    print "Add post: $item\n";
    request POST "http://$opt_server/post.php",
            [
                action      => 'reply',
                fid         => "$opt_forum",
                tid         => "$thread_id",
                extra       => '',
                replysubmit => 'yes',
                formhash    => "$formhash",
                subject     => '(续)',
                message     => $item,
            ];
}


sub _Verbose {
    my $msg = shift;
    print $msg if $opt_verbose;
}


sub version {
    my %id = parse_id('$Id: discuz,v 1.10 2007-04-27 13:43:41 lenik Exp $');
    return %id if wantarray;
    print <<"EOM";
[discuz] make story thread at discuz(php) forum
    written by s.n.m.,  version $id{rev}  last updated $id{date}
EOM
}


sub help {
    &version;
    print <<"EOM";

syntax:
    discuz [options] <text-file>
        --server=<server-prefix, e.g. localhost/discuz> (s)
        --user-agent=<fake name>
        --cookie=<cookie> [--cookie=...] (c)
        --username=<username> (u)
        --password=<password> (p)
        --forum=<forum-id, or forum-name> (f)
        --thread=<thread-id to add> (t)
        --question=<question-id, or question-name> (q)
        --answer=<answer> (a)
        --interval=<seconds between thread post> (i)
        --line-min=<minimum post size> (l)
        --icon=<icon-id for new thread> (ic)
        --graphics-user-interface
        --verbose
        --version
        --help (h)

action:
    uri [??post-params=value [??...]]

uri-expansion:
    \${input-field}  -> html field of hidden, text

example:
    discuz -s=www.haining.com.cn/bbs -u=Tommy -p=1234 -f="Love Stories" "Legend of 1900.txt"
EOM
}

# TODO...
__END__
sub ui_set_options {
    use Tk;
    use Tk::LabEntry;

    my %id = version;

    my $mw = new MainWindow(
            -title => "Story Post for Discuz Forum   Version $id{rev}",
            -width => 400,
            -height => 300,
        );

    my @packs = qw/-pady 5/;

    $mw->Frame->pack(@packs)->LabEntry(
        -label => 'server address: ',
        -width => 40,
        -labelPack => [qw/-side left -anchor w -padx 10/],
        -textvariable => \$opt_server,
        )->pack(qw/-side left/);

    $mw->Frame->pack(@packs)->LabEntry(
        -label => 'user agent: ',
        -width => 40,
        -labelPack => [qw/-side left -anchor w -padx 10/],
        -textvariable => \$opt_user_agent,
        )->pack(qw/-side left/);

    $mw->Frame->pack(@packs)->LabEntry(
        -label => 'user name: ',
        -width => 40,
        -labelPack => [qw/-side left -anchor w -padx 10/],
        -textvariable => \$opt_username,
        )->pack(qw/-side left/);

    $mw->Frame->pack(@packs)->LabEntry(
        -label => 'password: ',
        -width => 40,
        -labelPack => [qw/-side left -anchor w -padx 10/],
        -textvariable => \$opt_password,
        )->pack(qw/-side left/);

    my $commands = $mw->Frame->pack(@packs);
    $commands->Button(
        -text => 'okay',
        -command =>
    MainLoop;
}
