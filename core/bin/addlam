#!/bin/bash
    RCSID='$Id$'
    short_opts="hqstv"
    long_opts="help,quiet,shortcuts,tags,verbose,version"
    add_shortcuts=1
    add_tags=1
    . /lapiota/lib/sh/cliboot
    . /lapiota/lib/sh/findabc

function version() {
    parse_id "$RCSID"
    echo [$BASENAME] Add Lapiota Module
    echo Written by Lenik, Version 0.$rcs_rev, Last updated at $rcs_date
}

function help() {
    version
    echo
    echo   "Syntax: "
    echo   "    $0 [OPTION] [--] <LAM mount point>"
    echo
    echo   "Options: "
    echo   "    -s, --shortcuts         only add shortcuts"
    echo   "    -t, --tags              only add tags"
    echo   "    -q, --quiet             repeat to get less info"
    echo   "    -v, --verbose           repeat to get more info"
    echo   "    -h, --help              show this help page"
    echo   "        --version           print the version info"
}

function setopt() {
    case "$1" in
        -s|--shortcuts)
            unset add_tags;;
        -t|--tags)
            unset add_shortcuts;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function reg_add() {
    local regf="$1"
    local key="${2//\//\\}"
    shift 2

    if [ ! -e $regf ]; then
        echo "Windows Registry Editor Version 5.00" >$regf
        echo >>$regf
    fi

    echo "[$key]" >>$regf
    for entry in $*; do
        nam="${entry%%=*}"
        if [ -z "$nam" ]; then
            nam="@"
        else
            nam="\"$nam\""
        fi
        val="${entry#*=}"
        echo $nam=\"$val\" >>$regf
    done
    echo >>$regf
}

function reg_commit() {
    local regf="$1"
    regedit /s "`cygpath -w $regf`"
    rm -f $regf
}

# APP_PATHS="/proc/registry/HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths"
# APP_PATHS=               'HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths'
APP_PATHS='HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths'

function main() {
    for arg in "$@"; do
        if [ -d "$arg" ]; then
            lam="$arg"
            catfile="$arg/.cat"
        elif [ -f "$arg" ]; then
            catfile="$arg"
            lam=`readlink -f "$arg"`
            lam="${lam%/*}"
        else
            echo Invalid argument: $arg
            continue
        fi
        lam_aw=`cygpath -aw "$lam"`
        _log2 LAM: $lam_aw
        _log2 pre-install $lam

        if [ -f "$catfile" ]; then
            _log2 install $catfile
            regf="/tmp/addlam-$$.reg"

            cat "$catfile" | while read name latest tags shortcuts; do
                if [ -z "$name" -o "${name:0:1}" = "#" ]; then continue; fi

                # dst="$lam_aw/abc.d/$name-$latest/$c"
                if ! findabc -lr "$lam/abc.d" "$name-"; then
                    _log1 package not found: $name
                    continue
                fi

                if [ -n "$add_tags" ]; then
                    all="$lam/.all"
                    mkdir -p "$all"
                    for t in ${tags//,/ }; do
                        _sig1 tag $t: $_home
                        _catd="$t"
                        while [ "${t/.}" != "$t" ]; do
                            t=${t%.*}
                            _catd="$t/$_catd"
                        done
                        catdir="$all/$_catd"
                        if [ ! -d "$catdir" ]; then mkdir -p "$catdir"; fi
                        ln -nsf "$_home" "$catdir/"
                    done
                fi

                if [ -n "$add_shortcuts" ]; then
                    for c in ${shortcuts//,/ }; do
                        if [ "${c/=}" != "$c" ]; then
                            # shortcut=c
                            shortcut="${c%=*}"
                            c="${c#*=}"
                        else
                            shortcut="${c##*/}"
                        fi
                        dstw="$lam_aw/abc.d/$_expand"
                        dstw="${dstw//\//\\}"
                        _sig1 "alias $shortcut => $dstw\\$c"
                        dstwe="${dstw//\\/\\\\}"
                        reg_add $regf "$APP_PATHS/$shortcut" "=$dstwe\\\\$c" "Path=$dstwe"
                    done
                fi
            done
        fi
        reg_commit $regf

        _log1 lam $lam added.
    done
}

boot "$@"
