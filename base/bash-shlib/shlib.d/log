LOGFX=1
LOGFX_INFO='[1;34m'
LOGFX_INFO2='[34m'
LOGFX_DEBUG='[37m'
LOGFX_WARN='[1;45m'
LOGFX_ERROR='[1;41m'

LOGLEVEL_WARN=0
LOGLEVEL_ERROR=-1

if [ -z "$LOGLEVEL" ]; then
    LOGLEVEL=1
fi

if [ -z "$BASENAME" ]; then
    LOGPREFIX=
else
    LOGPREFIX="[$BASENAME] "
fi

function _log() {
    local fx_=
    local _fx=
    if [ $LOGLEVEL -ge $1 ]; then
        if [ "$LOGFX" = 1 ]; then
            _fx="[0m"
            if [ $1 -le 1 ]; then
                fx_="$LOGFX_INFO"
            elif [ $1 = 2 ]; then
                fx_="$LOGFX_INFO2"
            else
                fx_="$LOGFX_DEBUG"
            fi
        fi
        shift
        echo "$fx_$LOGPREFIX$@$_fx" >&2
    fi
}

function _warn() {
    if [ $LOGLEVEL -ge $LOGLEVEL_WARN ]; then
        if [ $LOGFX = 1 ]; then
            echo "$LOGFX_WARN$LOGPREFIX$@[0m" >&2
        else
            echo "$LOGPREFIX$@" >&2
        fi
    fi
}

function _error() {
    if [ $LOGLEVEL -ge $LOGLEVEL_ERROR ]; then
        if [ $LOGFX = 1 ]; then
            echo "$LOGFX_ERROR$LOGPREFIX$@[0m" >&2
        else
            echo "$LOGPREFIX$@" >&2
        fi
    fi
}

LINEPAD="                                                                                "
function _sig() {
    local line
    if [ $LOGLEVEL -ge $1 ]; then
        shift
        line="$LOGPREFIX$@"
        if [ ${#line} -lt 80 ]; then
            line="$line${LINEPAD:0:$((80-${#line}))}"
        fi
        echo -en "$line"$'\r' >&2
    fi
}

function _log0() { _log 0 "$@"; }
function _log1() { _log 1 "$@"; }
function _log2() { _log 2 "$@"; }
function _log3() { _log 3 "$@"; }
function _log4() { _log 4 "$@"; }

function _sig0() { _sig 0 "$@"; }
function _sig1() { _sig 1 "$@"; }
function _sig2() { _sig 2 "$@"; }
function _sig3() { _sig 3 "$@"; }
function _sig4() { _sig 4 "$@"; }
