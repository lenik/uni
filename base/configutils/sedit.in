#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="In-place edit in stream manner"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] FILE CMD [ARGS...]"}

    . shlib-import cliboot
    option -c --stdout      "Tee to stdout also"
    option -i --replace =STR "Replace occurences of str in ARGS to FILE"
    option -d --diff        "Output the diff"
    option -K --keep-all    "Try to keep all attributes"
    option -k --keep-mode   "Keep file permission mode unchanged"
    option -t --keep-time   "Keep file last-mod-time unchanged"
    option -o --keep-owner  "Keep file owner unchanged"
    option -g --keep-group  "Keep file group unchanged"
    option -n --dry-run     "Just for test, don't save the result"
    option -m --message =TEXT "Show edit result message"
    option -w --width =WIDTH "Width of message"
    option -e --edit-status "Exit true(0) if anything changed"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    tee_output=
    replace="{}"
    diff=
    keep_mode=1
    keep_owner=
    keep_group=
    keep_time=
    message=
    width=60
    dry_run=
    edit_status=

function setopt() {
    case "$1" in
        -c|--stdout)
            tee_stdout=1;;
        -i|--replace)
            if [ -z "$2" ]; then
                replace="{}"
            else
                replace="$2"
            fi
            ;;
        -d|--diff)
            diff="diff -u";;
        -K|--keep-all)
            keep_time=1
            keep_mode=1
            keep_owner=1
            keep_group=1
            ;;
        -k|--keep-mode)
            keep_mode=1;;
        -t|--keep-time)
            keep_time=1;;
        -o|--keep-owner)
            keep_owner=1;;
        -g|--keep-group)
            keep_group=1;;
        -n|--dry-run)
            dry_run=1;;
        -m|--message)
            message="$2";;
        -w|--width)
            width="$2";;
        -e|--edit-status)
            edit_status=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# -lt 2 ]; then
        echo "$0 [OPTIONS] FILE COMMAND [ARGS...]"
        return 1
    fi

    file="$1"
    shift

    # keep file extension, maybe some program need it.
    base="${file##*/}"
    buff="/tmp/sedit-$base.$$"

    if [ -z "$replace" ]; then
        cmdl=("$@")
    else
        cmdl=()
        i=0
        for arg in "$@"; do
            cmdl[$i]="${arg/$replace/$file}"
            ((i++))
        done
    fi

    if [ -n "$message" ]; then
        space='                                                                                                                                                                                                                                                     '
        echo -n "$message"
        if [ ${#message} -lt $width ]; then
            echo -n "${space:0:width-${#message}}"
        fi
    fi

    if [ "$tee_stdout" = 1 ]; then
        "${cmdl[@]}" <"$file" | tee "$buff"
    else
        "${cmdl[@]}" <"$file" >"$buff"
    fi

    err=$?

    cmp -s "$file" "$buff"
    # 0 if same, 1 if diff
    dirty=$?

    if [ $dirty != 0 ]; then
        # contents changed
        if [ -n "$diff" ]; then
            $diff "$file" "$buff"
        fi

        if [ -z "$dry_run" ]; then

            if [ "$keep_time" = 1 ]; then
                touch --reference "$file" "$buff"
            fi

            if [ "$keep_mode" = 1 ]; then
                chmod --reference "$file" "$buff"
            fi

            if [ "$keep_owner" = 1 ]; then
                chown --reference "$file" "$buff"
            fi

            if [ "$keep_group" = 1 ]; then
                chgrp --reference "$file" "$buff"
            fi

            # overwrite self
            mv -f "$buff" "$file"
        fi
    fi

    rm -f "$buff"

    if [ -n "$message" ]; then
        if [ "$dirty" = 1 ]; then
            echo Done
        else
            echo Skip
        fi
    fi

    if [ "$edit_status" = 1 ]; then
        return "$((! dirty))"
    else
        return $err
    fi
}

boot "$@"
