#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Remove autotools generated stuff"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] ..."}

    . shlib-import cliboot
    option -c --compact     "Run in compact mode"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    __FILE__=`readlink -f $0`

    AC=configure.ac
    RM=sudo_rm

    compact=

function sudo_rm() {
    local a
    local sudo=0
    for a in "$@"; do
        if [ -e "$a" ] && [ ! -w "$a" ]; then
            sudo=1
        fi
    done

    if [ $sudo = 1 ]; then
        sudo rm -f "$@"
    else
        rm -f "$@"
    fi
}

function setopt() {
    case "$1" in
        -c|--compact)
            compact=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ -z "$compact" ]; then
        if [ -h install-sh ] || [ -h missing ]; then
            compact=1
        fi
    fi

    subdirs=
    distfiles=
    if [ -f Makefile ]; then
        subdirs=`maketestvar SUBDIRS`
        distfiles=`maketestvar DIST_ARCHIVES`
        echo make distclean
        make distclean
    fi

    for f in *; do
        if [ -h $f ]; then
            src=`readlink -f $f`
            if [ "$src" != "${src/\/automake-}" ]; then
                echo "Remove file by --add-missing: $f"
                $RM $f
            fi
            if [ "$src" != "${src/\/libauto}" ]; then
                echo "Remove file by xjl-coolauto: $f"
                $RM $f
            fi
        fi
    done

    if [ "$compact" = 1 ]; then
        for f in \
                aclocal.m4 \
                depcomp \
                configure \
                install-sh \
                missing \
                ; do
            if [ -e $f ]; then
                echo "Remove auto-tools generated file: $f"
                $RM -fR $f
            fi
        done

        for f in \
                COPYING \
                INSTALL \
                ; do
            if [ -e $f ]; then
                echo "Remove auto-tools generated template file: $f"
                $RM -f $f
            fi
        done
    fi

    for f in autoscan.log autom4te.cache config.status config.log stamp-h1; do
        if [ -e $f ]; then
            echo "Remove auto-tools cache files: $f"
            $RM -R $f
        fi
    done

    if [ -f $AC ]; then
        for i in *.in; do
            base="${i%.in}";
            if grep "AC_CONFIG_FILES\|AC_CONFIG_HEADERS" \
                $AC | grep -q "$base"; then
                if [ -f $base ]; then
                    echo "Remove config output file: $base"
                    $RM $base
                fi
            fi
        done
    fi

    if [ "$compact" = 1 ]; then
        if [ -f Makefile.am ] && [ -f Makefile.in ]; then
            echo "Remove automake output: Makefile.in"
            $RM Makefile.in
        fi
    fi

    if [ -n "$distfiles" ]; then
        for f in $distfiles; do
            echo "Remove dist file: $f"
            $RM $f
        done
    fi

    if [ -n "$subdirs" ]; then
        # echo "Subdirs: $subdirs"
        opts=
        if [ "$compact" = 1 ]; then opts="$opts -c"; fi

        for dir in $subdirs; do
            echo "Recurse into $dir"
            pushd $dir >/dev/null
            $__FILE__ $opts
            popd >/dev/null
        done
    fi
}

boot "$@"
