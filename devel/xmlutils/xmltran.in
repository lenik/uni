#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Translate XML to text by simplified XSLT"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] XMLFILES"}

    . shlib-import cliboot
    option -s --show-xsl    "Show the compiled XSL only"
    option -n --xmlns =[NAME=]URI "Add namespace aliases"
    option -f --'for' =XPATH:=EXPR "Add XSLT transform"
    option -m --method =METHOD "Default method is text"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    method=text
    nsmap=()
    nns=0
    trans=()
    ntran=0
    show_xsl=0

function setopt() {
    case "$1" in
        -s|--show-xsl)
            show_xsl=1;;
        -n|--xmlns)
            nsmap[nns++]="$2";;
        -m|--method)
            method="$2";;
        -f|--for)
            if [ "$2" = "${2/:=}" ]; then
                echo "Expect ':=' in the for option"
                exit 1
            fi
            trans[ntran++]="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    xsltmp=`tempfile`
    echo '<?xml version="1.0" encoding="UTF-8"?>' >$xsltmp
    echo -n '<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"' >>$xsltmp
        for map in "${nsmap[@]}"; do
            uri="${map#*=}"
            if [ "$uri" = "$map" ]; then
                echo -n " xmlns=\"$uri\"" >>$xsltmp
            else
                prefix="${map%%=*}"
                echo -n " xmlns:$prefix=\"$uri\"" >>$xsltmp
            fi
        done
        echo '>' >>$xsltmp
    echo "<xsl:output method=\"$method\"/>" >>$xsltmp
    for t in "${trans[@]}"; do
        xpath="${t%%:=*}"
        xexpr="${t#*:=}"
        echo -n "<xsl:template match=\"$xpath\">" >>$xsltmp
        echo -n "<xsl:value-of select=\"$xexpr\" />" >>$xsltmp
        echo "</xsl:template>" >>$xsltmp
        shift 2
    done
    echo '<xsl:template match="text()|@*" />' >>$xsltmp
    echo '</xsl:stylesheet>' >>$xsltmp

    if [ $show_xsl = 1 ]; then
        cat $xsltmp
    else
        xsltproc $xsltmp "$@"
    fi
    rm -f $xsltmp
}

boot "$@"
