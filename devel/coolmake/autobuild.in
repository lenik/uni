#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Run autobuild rule on changing to a directory"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] MAIN-DIR MORE-DIRS..."}

    . shlib-import cliboot
    option -t --target =TARGET "Make target instead of 'autobuild'"
    option -r --recursive   "Monitor the directory recursive"
    option -d --daemon      "Run in background"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    target=autobuild
    daemon=0
    recursive=0

function setopt() {
    case "$1" in
        -t|--target)
            target="$2";;
        -d|--daemon)
            daemon=1;;
        -r|--recursive)
            recursive=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# = 0 ]; then
        echo "At least MAIN-DIR should be specified. "
        exit 1
    fi

    dirs=()
    ndir=0
    for d in "$@"; do
        dirs[ndir++]="$d"
    done
    main_dir="${dirs[0]}"

    dnotify_opts=()
    dnotify_nopt=0
    if [ "$daemon" = 1 ];    then dnotify_opts[dnotify_nopt++]='-b'; fi
    if [ "$recursive" = 1 ]; then dnotify_opts[dnotify_nopt++]='-r'; fi

    cmds=()
    if [ $LOGLEVEL -gt 1 ]; then
        cmds=("${cmds[@]}" echo "[autobuild] Detect changes on: {}" \;)
    fi
    cmds=("${cmds[@]}" make -C "$main_dir" $target)

    dnotify -MCDR "${dnotify_opts[@]}" "${dirs[@]}" -e sh -c "${cmds[*]}"
}

boot "$@"
