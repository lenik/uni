#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Make and get the look of what will be installed"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] ..."}

    . shlib-import cliboot
    option -C --chdir =DIR      "Change workdir before make"
    option -p --prefix =PATH    "Set install prefix, default $prefix"
    option -k --keep            "Keep the tmp installed destdir"
    option -i --ignores =PATH   "Ignored pathnames for treetex, separated by :"
    option -t --treedoc         "Generate complete tree document"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    [ -x "$TREETEX" ]   || TREETEX=`which treetex`
    [ -x "$MAKE" ]      || MAKE=@bindir@/make-color
    [ -x "$MAKE" ]      || MAKE=`which make`

    treetexopts=()
    treetexoptn=0
    prefix=/usr
    ignores=
    keep=

function setopt() {
    case "$1" in
        -C|--chdir)
            cd "$2" || quit "failed to chdir to $2";;
        -p|--prefix)
            prefix="$2";;
        -k|--keep)
            keep=1;;
        -i|--ignore)
            ignores="$2"
            while [ -n "$ignores" ]; do
                ignore="${ignores%%:*}"
                ignores="${ignores#*:}"
                if [ "$ignore" = "$ignores" ]; then
                    ignores=
                fi
                treetexopts[treetexoptn++]='-i'
                treetexopts[treetexoptn++]="$ignore"
            done
            ;;
        -t|--treedoc)
            treetexopts[treetexoptn++]='-t';;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    makeopts=(-I "@incdir@")
    if [ $LOGLEVEL -lt 1 ]; then
        makeopts=( "${makeopts[@]}" -s )
    fi

    if [ ! -f ./configure ]; then
        _log1 "Generate configure script by autoreconf2"
        autoreconf2 -is
    fi

    if [ -f configure.ac ]; then
        if grep -q AC_CONFIG_HEADER configure.ac; then
            _log1 "Generate config headers"
            autoheader
        fi
    fi

    if [ -d po/ ]; then
        gettext_miss=
        for f in ABOUT-NLS config.rpath; do
            if [ ! -f "$f" ]; then
                gettext_miss=1
                break
            fi
        done

        if [ "$gettext_miss" = 1 ]; then
            _log1 "Prepare sources to use gettext"
            gettextize -f --symlink
        fi
    fi

    if [ ! -f Makefile ] && [ -x ./configure ]; then
        _log1 "Generate Makefile by autotools..."
        if ./configure --prefix="$prefix"; then
            if [ -f Makefile ]; then
                _log1 "Done."
            else
                _error "./configure success but no Makefile generated. "
                _error "Aborted."
                exit 1
            fi
        else
            _error "No Makefile and do not know how to create it. "
            exit 1
        fi
    fi

    if ! distz=`maketestvar DIST_ARCHIVES`; then
        _error "Failed to get make variable DIST_ARCHIVES. "
        exit 1
    fi

    package_name="${distz%%-[0-9]*}"
    _log1 "The package name: $package_name"

    _log1 "Create distribution tarball: $distz"
    TARZ="tar -a"

    $MAKE "${makeopts[@]}" dist

    if [ $LOGLEVEL -ge 1 ]; then
        echo
        echo "Distribution contents (Re-sorted): "
        $TARZ -tf $distz | LC_COLLATE=C sort
    fi

    tmpdestdir=/tmp/destdir.$$.$RANDOM
    rm -fR $tmpdestdir

    _log1 "Install to temporary destdir $tmpdestdir: "
    if $MAKE "${makeopts[@]}" install DESTDIR=$tmpdestdir prefix="$prefix"; then

        # preview the tree
        tree -a $tmpdestdir

        # save the file list in the installed destdir.
        ( cd $tmpdestdir;
            find -type d | sed -e 's,$,/,';
            find -type f ) >FILES
        
        if [ -x "$TREETEX" ]; then
            _log1 "Generate install tree in TeX"

            itreetmp=`mktemp`
            $TREETEX -aF --destdir=$tmpdestdir \
                -c "Files in the package $package_name" \
                -r '\emph{«setupdir»}' \
                "${treetexopts[@]}" $tmpdestdir >$itreetmp

            diff -q $itreetmp itree.tex >/dev/null \
                || cp $itreetmp itree.tex

            rm -f $itreetmp
        fi
    else
        _error "Failed to install."
    fi

    for f in "$@"; do
        fdir="${f%/*}"
        fnam="${f##*/}"
        if [ "${fdir}" = "$f" ]; then
            fdir=
        else
            fdir="/$fdir"
        fi

        echo "Check file $f: "

        n=0
        if [ -d "$tmpdestdir$fdir" ]; then
            while read entry; do
                echo "In install: $entry"
                cat "$entry" | sed 's/^/> /'
                echo
                (( n++ ))
            done < <(find "$tmpdestdir$fdir" -name "$fnam")
        fi
        [ $n = 0 ] && _warn "Not installed: $f"

        n=0
        while read entry; do
            echo "In tarball: $entry"
            $TARZ -xf $distz -O "$entry" | sed 's/^/> /'
            echo
            (( n++ ))
        done < <($TARZ -tf $distz | grep "/$f\$")
        [ $n = 0 ] && _warn "Not distributed: $f"

        echo
    done

    if [ -z "$keep" ]; then
        _log1 "Cleanup temp destdir."
        rm -fR $tmpdestdir
    fi
}

boot "$@"
