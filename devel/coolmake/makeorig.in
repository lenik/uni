#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Create .orig archive"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] [DIR=.]"}

    . shlib-import cliboot
    option -d --outdir =DIR "where to put the tarball"
    option -z --zipper =NAME "using alternate zip program"
    option -s --separator =CHAR "specify a separator other then '_'"
    option -x --suffix =SUFFIX "specify a suffix, default is .orig"
    option -j --joinext     "using .tgz instead of .tar.gz, and so on"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    outdir=
    separator=_
    suffix=.orig

    zipper=bzip2

    tarpart=.tar.

    zipext=
    zipext_bzip2=bz2
    zipext_gzip=gz
    zipext_xz=xz

function help_more() {
    echo
    echo "Zip Programs: "
    echo "    bzip2 (.bz2)"
    echo "    gzip (.gz)"
    echo "    xz (.xz)"
}

function setopt() {
    case "$1" in
        -d|--outdir)
            outdir="$2";;
        -z|--zipper)
            case "$2" in
                gz|gzip)
                    zipper=gzip;;
                bz2|bzip2)
                    zipper=bzip2;;
                *)
                    zipper="$2";;
            esac
            ;;
        -s|--separator)
            separator="$2";;
        -x|--suffix)
            suffix="$2";;
        -j|--joinext)
            tarpart=.t;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    workdir="$PWD"

    zipext="zipext_$zipper"
    zipext="${!zipext}"
    if [ -z "$zipext" ]; then
        zipext="$2"
    fi

    dir=
    if [ -z "$1" ]; then
        dir="${PWD%/}"
        outdir="${dir%/*}"
    else
        dir="${1%/}"
        outdir="${dir%/*}"
        if [ "$dir" = "$outdir" ]; then
            outdir=.
        fi
    fi

    cleanconf=0
    if [ ! -f configure ]; then
        autoreconf2 -is
        cleanconf=1
    fi

    if [ ! -f Makefile ]; then
        ./configure
    fi

    using=ac
    case "$using" in
    ac)
        base=`maketestvar PACKAGE_NAME`
        version=`maketestvar PACKAGE_VERSION`
        if [ -z "$base" -o -z "$version" ]; then
            echo "Failed to get PACKAGE_xxx make variables"
            exit 1
        fi
        ;;
    av)
        base="${dir##*/}"
        if [ -f "$dir/VERSION.av" ]; then
            version=`vercomp $dir/VERSION.av`
        else
            echo "No version file in $dir"
            exit 1
        fi
        ;;
    esac

    tarball="$outdir/$base$separator$version$suffix$tarpart$zipext"

    tmpinst=/tmp/makeorig-tmpinst-$$-$RANDOM
    if ! make -s install DESTDIR=$tmpinst prefix=/usr; then
        echo "Failed to install to $tmpinst"
        exit 1
    fi

    tar -vcaf "$tarball" -C $tmpinst .

    if [ "$cleanconf" = 1 ]; then
        autounconf
    fi
}

boot "$@"
