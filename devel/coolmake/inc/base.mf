# vim: set ft=make :

SHELL = bash

project = $(notdir $(shell readlink -f $(PWD)))

remotehost = localhost
remotedir = /tmp

sharedir = share
remotehostdir = $(remotehost):$(remotedir)

gitworkcopy = gitworkcopy
svnworkcopy = svnworkcopy

bin_files = \
    bin/ \
    lib/

src_excludes =

rsync_excludes =

all: \
    ../$(project).bin.tar.gz \
    ../$(project).src.tar.gz

all-text: \
    ../$(project).bin.tgz.txt \
    ../$(project).src.tgz.txt

%.tgz.txt: %.tar.gz
	mv -nv "$<" "$@"

../$(project).bin.tar.%: .
	shopt -s dotglob; \
	tar caf "$@" \
	    --dereference \
	    --exclude-vcs \
		$(bin_files) \
	    `[ -d $(sharedir) ] && (cd $(sharedir); echo -C $(sharedir) *)` \
	    --transform 's|^|$(project)/|'

../$(project).src.tar.%: .
	shopt -s dotglob; \
	tar caf "$@" \
	    --exclude-vcs \
	    --exclude=$(gitworkcopy) \
	    --exclude=$(svnworkcopy) \
	    --exclude=$(sharedir) \
	    $(addprefix --exclude=, $(src_excludes)) \
	    --transform 's|^|$(project)/|' \
	    *

svn-update-and-merge-into:
	cd $(svnworkcopy); \
	    svn update
	git clone `vcscmd rootpath` $(gitworkcopy)
	cd $(gitworkcopy); \
	    git subtree split -P `vcscmd localname` -b $(project); \
	    git checkout $(project)
	cp -afT $(gitworkcopy)/ $(svnworkcopy)/
	rm -fR $(gitworkcopy)

svn-pushlastcommit: svn-update-and-merge-into
	@echo
	@echo Commit to svn with message:
	@git log --format='%s' HEAD~.. .
	@echo
	msg=$$(git log --format='%s' HEAD~.. .); \
	    cd $(svnworkcopy); \
	    svn status; \
	    svn commit -m "$$msg" .; \
	    svn update

info:
	@echo project: $(project)
	@echo remote: $(remotehostdir)

deploy_archives = \
    ../$(project).bin.tar.gz
deploy_ar_names = $(notdir $(deploy_archives))

deploy: ${deploy_archives}
	scp ${deploy_archives} $(remotehostdir)
	ssh $(remotehost) \
            'cd $(remotedir); \
            for ar in $(deploy_ar_names); do \
                tar xaf $$ar; \
                rm $$ar; \
            done'

rsyncopts = \
    --checksum \
    --recursive \
    --perms \
    --xattrs \
    --crtimes \
    --hard-links \
    --copy-links \
    --delete

rsync_cmd = rsync $(rsyncopts) \
	    $(addprefix --exclude=, $(rsync_excludes)) \

rsync-dist: ${deploy_archives}
	tmpdir=`mktemp -d`; \
	tar -xz -C $$tmpdir -f ${deploy_archives}; \
	$(rsync_cmd) $$tmpdir/* ${remotehostdir}

rsync:
	$(rsync_cmd) . ${remotehostdir}

rsync-dottarget: .target
	@read target < $<; \
	opts=(--exclude=/.ssh); \
    identity_file=; \
        shopt -s nullglob; \
        for id in ./.ssh/id_* ../.ssh/id_*; do \
            identity_file="$$id"; \
            break; \
        done; \
        if [ -n "$$identity_file" ]; then \
            opts+=(-e "ssh -i $$identity_file"); \
        fi; \
        $(rsync_cmd) "$${opts[@]}" . $$target

