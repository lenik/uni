#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=Split a media file into segments using ffmpeg}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] FILES...}

    . shlib-import cliboot
    option -o --outdir      =DIR    "Specify out dir, default cwd"
    option -s --size        =SIZE   "Specify size of each the split in seconds"
    option -n --name        =FORMAT "Specify the output name format, using %d for split index"
    option -f --force               "Overwrite existing files"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

function setopt() {
    case "$1" in
        -o|--outdir)
            opt_outdir="$2";;
        -s|--size)
            opt_size="$2";;
        -n|--name)
            opt_name="$2"
            if [ "${opt_name/\%d}" == "$opt_name" ]; then
                opt_name="$opt_name-%d"
            fi
            ;;
        -f|--force)
            opt_force=1;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    if [ -z "$opt_size" ]; then
        quit "split size isn't specified."
    fi

    # -map [-]input_file_id[:stream_specifier][:view_specifier][?] | [linklabel] (output)
    #        Create  one  or  more  streams in the output file. This option has two forms for specifying the
    #        data source(s): the first selects one or more streams from  some  input  file  (specified  with
    #        "-i"),   the   second   takes   an   output  from  some  complex  filtergraph  (specified  with
    #        "-filter_complex").

    # -f fmt (input/output)
    #        Force  input  or  output  file format. The format is normally auto detected for input files and
    #        guessed from the file extension for output files, so this option is not needed in most cases.

    for src in "$@"; do
        outdir="$opt_outdir"
        if [ -z "$outdir" ]; then
            srcdir="${src%/*}"
            if [ "$srcdir" == "$src" ]; then
                srcdir=.
            fi
            outdir="$srcdir"
        fi
        if [ ! -d "$outdir" ]; then
            _log1 "Auto create dir $outdir"
            if ! mkdir -p "$outdir"; then
                quit "Error create dir."
            fi
        fi

        base="${src##*/}"
        name="${base%.*}"
        ext="${base##*.}"
        if [ "$name" = "$base" ]; then
            ext=
        fi

        outname="$opt_name"
        if [ -z "$outname" ]; then
            outname="$name-%d"
        fi

        run ffmpeg -i "$src" -c copy -map 0 -segment_time "$opt_size" -f segment "$outdir/$outname.$ext"
    done
}

function run() {
    _log1 "Exec $*"
    "$@"
}

boot "$@"
