#!/bin/bash
    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    PROGRAM_TITLE="Round Robin Graphics Index"
    PROGRAM_SYNTAX="[OPTIONS] [--] ..."

    index_dir=
    indexer_name=

    . shlib-import cliboot
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    shopt -s nullglob

function setopt() {
    case "$1" in
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function begin_html() {
    local title="$1"; shift
    echo "Content-Type: text/html"

    local header
    for header in "$@"; do
        echo "$header"
    done
    echo

    echo "<html>"
    echo "<head>"
    echo "<title>$title</title>"
    echo "</head>"
    echo "<body>"

    echo "<h1>$title</h1>"
    echo "<hr>"
}

function end_html() {
    echo "</body>"
    echo "</html>"
}

function die() {
    echo "Content-Type: text/html"
    echo
    echo "<html><head><title>Error: $@</title></head>"
    echo "<body>"
    echo "<h1>Error</h1>"
    echo "<hr>"
    echo "<p style='color: red'>$@</p>"
    echo "</body></html>"
    exit 0
}

function detect_home() {
    if [ -z  "$HOME" ]; then
        case "$REQUEST_URI" in
            /~*)
                user="${REQUEST_URI#/~}"
                user="${user%%/*}"
                ;;
            *)
                case "$SCRIPT_FILENAME" in
                    /home/*)
                        user="${SCRIPT_FILENAME#/home/}"
                        user="${user%%/*}"
                        ;;
                    *)
                        user=unknown
                        ;;
                esac
                ;;
        esac
        HOME="/home/$user"
        export HOME
    fi
}

function main() {
    _main "$@"
}

function _main() {
    index_dir="${SCRIPT_FILENAME%/*}"
    indexer_name="${SCRIPT_FILENAME##*/}"

    request_path="${REQUEST_URI%%\?*}"
    prefix=
    path=

    if [ -n "$PATH_INFO" ]; then
        path="${PATH_INFO#/}"
    fi

    if [ -z "$path" ]; then
        case "$request_path" in
            */index.cgi/)
                : ;;
            *)
                # To make PATH_INFO exist.
                echo Location: index.cgi/
                echo
                return
        esac

        list
        return
    fi

    topic="${path%%/*}"
    wrapper="$index_dir/$topic.rrw"
    [ -f "$wrapper" ] || die "Topic isn't existed: $topic."
    [ -x "$wrapper" ] || die "The wrapper file isn't executable: $wrapper"
    detect_home

    if [ "$topic" = "$path" ]; then
        path=
    else
        path="${path#*/}"
    fi

    case "$path" in
        ''|info)
            begin_html "Current status of $topic"
            echo "<table border='1' cellspacing='0' cellpadding='2'>"
                echo "<thead><tr>"
                echo "<th>Data Entry</th>"
                echo "<th>Current Value</th>"
                echo "</tr></thead>"
                echo "<tbody>"
                    while read _hdr _key _eq _val; do
                        case "$_hdr" in
                            Last-Update-Time:)
                                echo "<tr><td>Last updated time</td><td>$_key $_eq</td></tr>" ;;
                            Data-Source:)
                                if [ "$_val" = 'U' ]; then
                                    _val="<i style='color: gray'>Unknown</i>"
                                fi
                                echo "<tr><td>$_key</td><td>$_val</td></tr>" ;;
                        esac
                    done < <("$wrapper" --cgi --info)
                echo "</tbody>"
                echo "</table>"
            end_html
            ;;

        plot/*)
            plot_id="${path#plot/}"
            begin_html "Plot of $topic : $plot_id" \
                "Refresh: 5"

            echo "<center>"
            echo "<img src='../$plot_id.png'>"

            echo "<p>"
            "$wrapper" --list | grep "$plot_id"
            echo "<p>"
            echo "<cite style='color: gray'>The graph is plotted at `date`</cite>"
            echo "</center>"
            end_html
            ;;

        *.png)
            plot_id="${path%.*}"
            echo "Content-Type: image/png"
            echo
            "$wrapper" --cgi --plot "$plot_id"
            ;;

        *)
            die "Failed to dispatch: $path"
            ;;
    esac
}

function list() {
    begin_html "$PROGRAM_TITLE"

    files=("$index_dir"/*.rrw)
    if [ ${#files[@]} = 0 ]; then
        echo "No round robin graphic available yet."
    else
        echo "<ul>"
        for file in "${files[@]}"; do
            topic="${file##*/}"
            topic="${topic%.*}"
            echo "<li style='padding-bottom: .7em'>"
                # [tag] title...
                IFS=']' read _tag _title < <("$file" --version)

                echo "<b>$topic</b>: "
                echo "$_title "
                echo "[ <a href='$prefix$topic'>info</a> ]"
                echo "<ol>"
                    while read _graph _index _id _description; do
                        _id="${_id%:}"
                        echo -n "<li>Plot "
                        echo -n "<a href='$topic/plot/$_id'>$_id</a>"
                        echo ": <i style='color: gray'>$_description</i></li>"
                    done < <("$file" --list)
                echo "</ol>"
            echo "</li>"
        done
        echo "</ul>"
    fi

    echo "<hr>"
    echo "<cite>Generated by: "; version; echo "</cite>"
    end_html
}

boot "$@"
