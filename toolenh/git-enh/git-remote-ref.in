#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:=Manage referenced git remotes}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] link-name target-name}

    . shlib-import cliboot
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

function setopt() {
    case "$1" in
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# != 2 ]; then
        quit "git remote-ref src-name dst-name"
    fi

    remotes=( $(git remote) )

    src="$1"
    dst="$2"
    no_src=1
    no_dst=1

    for r in "${remotes[@]}"; do
        [ "$src" = "$r" ] && no_src=0
        [ "$dst" = "$r" ] && no_dst=0
    done

    if [ "$no_dst" = 1 ]; then
        quit "The referenced remote isn't defined yet."
    fi

    dst_url=
    while read _Fetch _URL url; do
        if [ "$_Fetch" = "Fetch" ] &&
                [ "$_URL" = "URL:" ]; then
            dst_url="$url"
            break
        fi
    done < <(git remote show -n "$dst" 2>/dev/null)

    if [ "$no_src" = 1 ]; then
        _log1 "Create new remote $src, linked to $dst_url"
        git remote add "$src" "$dst_url"
    else
        _log1 "Redirect remote $src to $dst_url"
        git remote set-url "$src" "$dst_url"
    fi
}

boot "$@"
