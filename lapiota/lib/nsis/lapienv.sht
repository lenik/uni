<?
#!/bin/bash
shopt -s nullglob

echo '!'define LAPIOTA $LAPIOTA
LAPIOTA="${LAPIOTA//\\//}"

# findLVDirs(root, [level-dir/], [prefix])
# find directories which is organized in levels, and have version numbers.
function findLVDirs() {
    local root="$1"
    local ldir="$2"
    local prefix="$3"
    local nroot=${#root}
    local nprefix=${#prefix}
    local dir base name ver

    for dir in $root/$ldir$prefix*; do
        if [ ! -d "$dir" ]; then continue; fi
        ldir="${dir:nroot+1}"
        base="${dir##*/}"

        # skip if base contains space
        if [ "${base/ }" != "$base" ]; then continue; fi

        # has version number?
        if [ "${base/-}" = "$base" ]; then
            findLVDirs $root $ldir/ $base
        else
            name="${base%%-*}"
            name="${name//./_}"
            ver="${base#*-}"
            dname="def_$name"
            if [ -z "${!dname}" ]; then
                eval "$dname=1"
                echo '!'define ${name}_home "${dir//\//\\}"
                echo '!'define ${name}_rel "${ldir//\//\\}"
            fi
        fi
    done
}

function fnd_scan() {
    local dir="$1"
    if [ ! -d "$dir" ]; then return; fi
    findLVDirs "$dir"
    if [ -f "$dir/.fnd" ]; then
        while read -r fndEntry; do
            fnd_scan "$dir/$fndEntry"
        done <"$dir/.fnd"
    fi
}

fnd_scan C:/lam
?>
