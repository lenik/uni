#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Add Lapiota Module"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] <LAM mount point>"}

    . shlib-import cliboot
    option -s --shortcuts   "Only add shortcuts"
    option -t --tags        "Only add tags"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    add_shortcuts=1
    add_tags=1

    import findabc
    import cmds

    shopt -s nocaseglob

function setopt() {
    case "$1" in
        -s|--shortcuts)
            unset add_tags;;
        -t|--tags)
            unset add_shortcuts;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function reg_add() {
    local regf="$1"
    local key="${2//\//\\}"
    shift 2

    if [ ! -e $regf ]; then
        echo "Windows Registry Editor Version 5.00" >$regf
        echo >>$regf
    fi

    echo "[$key]" >>$regf
    for entry in "$@"; do
        nam="${entry%%=*}"
        if [ -z "$nam" ]; then
            nam="@"
        else
            nam="\"$nam\""
        fi
        val="${entry#*=}"
        echo $nam=\"$val\" >>$regf
    done
    echo >>$regf
}

function reg_commit() {
    local regf="$1"
    regedit /s "`cygpath -w $regf`"
    rm -f $regf
}

# APP_PATHS="/proc/registry/HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths"
# APP_PATHS=               'HKLM/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths'
APP_PATHS='HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion/App Paths'

# set_alias NAME DEST
function set_alias() {
    local shortcut="$1"
    local dest="$2"
    local dest_w="${dest//\//\\}"
    local dest_ww="${dest_w//\\/\\\\}"
    local dir_w="${dest_w%\\*}"
    local dir_ww="${dir_w//\\/\\\\}"
    _sig1 "alias $shortcut => $dest_w"
    reg_add $regf "$APP_PATHS/$shortcut" "=$dest_ww" "Path=$dir_ww"
}

function main() {
    for arg in "$@"; do
        if [ -d "$arg" ]; then
            lam="$arg"
            catfile="$arg/.cat"
        elif [ -f "$arg" ]; then
            catfile="$arg"
            lam=`readlink -f "$arg"`
            lam="${lam%/*}"
        else
            echo Invalid argument: $arg
            continue
        fi
        _log2 LAM: $lam_aw
        lam_aw=`cygpath -aw "$lam"`
        nlam=${#lam}
        nlam_aw=${#lam_aw}
        _log2 pre-install $lam

        if [ -f "$catfile" ]; then
            _log2 install $catfile
            regf="/tmp/addlam-$$.reg"

            cat "$catfile" | while read name latest tags shortcuts; do
                if [ -z "$name" -o "${name:0:1}" = "#" ]; then continue; fi

                # dst="$lam_aw$abcd/$name-$latest/$c"
                if ! findabc -z "$name-" "$lam"; then
                    if ! findabc -z "$name" "$lam"; then
                        _log1 package not found: $name
                        continue
                    fi
                fi
                _xdir="${_home:$nlam}"

                if [ -n "$add_tags" ]; then
                    all="$lam/.all"
                    mkdir -p "$all"
                    for t in ${tags//,/ }; do
                        _sig1 tag $t: $_home
                        _catd="$t"
                        while [ "${t/.}" != "$t" ]; do
                            t=${t%.*}
                            _catd="$t/$_catd"
                        done
                        catdir="$all/$_catd"
                        if [ ! -d "$catdir" ]; then mkdir -p "$catdir"; fi
                        $LN_NSF "$_home" "$catdir/"
                    done
                fi

                if [ -n "$add_shortcuts" ]; then
                    shopt -u nullglob
                    for c in ${shortcuts//,/ }; do
                        if [ "${c/=}" != "$c" ]; then
                            # shortcut=c
                            shortcut="${c%=*}"
                            c="${c#*=}"
                        else
                            # shortcut=
                            shortcut="${c##*/}"
                        fi
                        modew="$lam_aw$_xdir/$c"
                        if [ "$modew" != "${modew/\*}" ]; then
                            # check $modes !~ /\s/
                            mode="$lam$_xdir/$c"
                            for dst in $mode; do
                                shortcut="${dst##*/}"
                                dstw="$lam_aw${dst:nlam}"
                                set_alias "$shortcut" "$dstw"
                            done
                        else
                            dst="$modew"
                            dstw="${dst//\//\\}"
                            set_alias "$shortcut" "$dstw"
                        fi
                    done
                fi
            done
        fi
        reg_commit $regf

        _log1 "lam($lam) added. "
    done
}

boot "$@"
