#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="vista wrapper for 'ln -sf'"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] TARGET LINK_NAME"}

    . shlib-import cliboot
    option -n --no-derefernce "(no use, always no-derefence)"
    option -f --force       "Delete existing LINK_NAME"
    option -s --symbolic    "Create symbolic link"
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    force=0
    nodef=0
    sym=0

function setopt() {
    case "$1" in
        -n|--no-dereference)
            nodef=1;;
        -f|--force)
            force=1;;
        -s|--symbolic)
            sym=1;;
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# != 2 ]; then
        echo both TARGET and LINK-NAME are required.
        exit 1
    fi
    local target="$1"
    local linkf="$2"

    while [[ "$target" = */ ]]; do target="${target%/}"; done
    local target_base="${target##*/}"
    local isdir=0
    if [ -d "$target" ]; then isdir=1; fi

    while [[ "$linkf" = */ ]]; do linkf="${linkf%/}"; done
    if [ -z "$linkf" ]; then linkf=.; fi
    if [ -d "$linkf" ]; then
        # no_deref...
        linkf="$linkf/$target_base"
    fi

    target=`cygpath -w "$target"`
    linkf=`cygpath -w "$linkf"`

    if [ $force = 1 ]; then rm -f "$linkf"; fi

    if [ $sym = 1 ]; then
        if [ $isdir = 1 ]; then
            mklink /j "$linkf" "$target"
        else
            mklink "$linkf" "$target"
        fi
    else
        if [ $isdir = 1 ]; then
            mklink "$linkf" "$target"
        else
            mklink /h "$linkf" "$target"
        fi
    fi
}

function mklink() {
    MKLINK="cmd /c mklink"
    # echo $MKLINK $*
    $MKLINK $* >/dev/null
}

boot "$@"
