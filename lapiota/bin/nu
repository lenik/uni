#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="net use utility"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] HOSTNAME [PASSWORD [USER=Administrator]]"}

    . shlib-import cliboot
    option -l --list        "List used resources"
    option -d --delete      "Delete the connected resource"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    HOSTTAB=~/etc/hosttab
    mode=use

function setopt() {
    case "$1" in
        -d|--delete)
            mode=delete;;
        -l|--list)
            mode=list;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# -gt 3 ]; then
        echo Too many arguments specified.
        help; exit
    fi

    if [ $mode = "list" ]; then
        net use
        return 0
    fi

    host="$1"
    user="$3"
    fuzzy=0
    if [ -z "$user" ]; then
        user=Administrator
        fuzzy=1
    fi

    # parse hosttab
    found=0
    if [ -f $HOSTTAB ]; then
        while read HOST USER PASSWD; do
            if [ "$host" = "$HOST" ]; then
                if [ "$user" = "$USER" ]; then
                    passwd="$PASSWD"
                    found=1
                    break
                else
                    _user="$USER"
                    _passwd="$PASSWD"
                    found=2
                fi
            fi
        done <$HOSTTAB
    fi
    if [ $found = 2 -a $fuzzy = 1 ]; then
        _log1 "auto selected user $_user@$host"
        user="$_user"
        passwd="$_passwd"
    fi

    save=0
    if [ $found = 0 ]; then
        if [ -n "$2" ]; then
            passwd="$2"
        else
            # passwd isn't specified on command-line
            if ! read -sp "Enter password for $user@$host: " passwd; then
                # user canceled (by ^D)
                return 1
            fi
            echo
        fi
        save=1
    else
        if [ -n "$2" ]; then
            passwd="$2"
            save=2
        fi
    fi

    case $save in
        1) # save the new entry
            echo save new record.
            echo "$host $user $passwd" >>$HOSTTAB
            ;;
        2) # change the existing entry
            grep -v "^$host $user " $HOSTTAB >/tmp/hosttab.tmp
            cp -f /tmp/hosttab.tmp $HOSTTAB
            echo "$host $user $passwd" >>$HOSTTAB
            ;;
    esac

    passwd="${passwd//\//\\/}"
    case $mode in
        use)
            _log2 "Connect $user@$host using $passwd"
            _log2 net use "\\\\$host\\IPC\$" /user:"$user" "$passwd"
            net use "\\\\$host\\IPC\$" /user:"$user" "$passwd"
            ;;
        delete)
            _log2 net use /delete "\\\\$host\\IPC\$"
            net use /delete "\\\\$host\\IPC\$"
            ;;
    esac
    echo Done.
}

boot "$@"
