#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Clone directories with override support"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] SRCDIR OVERRIDES DSTDIR"}

    . shlib-import cliboot
    option -q --quiet       "Repeat to get less info"
    option -v --verbose     "Repeat to get more info"
    option -h --help        "Show this help page"
    option    --version     "Print the version info"

    ln="ln -sf"

    shopt -s dotglob
    shopt -s nullglob

function assert() {
    "$@" || echo "assert failure: $@"
}

function check() {
    "$@" || echo "check failed: $@"
}

function setopt() {
    case "$1" in
        -s|--symbolic)
            ln="$ln -s";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# -ne 3 ]; then help; exit; fi
    local src=`readlink -f "$1"`
    local ovr=`readlink -f "$2"`
    local dst=`readlink -f "$3"`
    if [ ! -d "$dst" ]; then
        echo "not a directory: $dst"
        exit 1
    fi

    src=`calcref "$dst" "$src"`
    ovr=`calcref "$dst" "$ovr"`

    cd "$dst"
    cpover "$src" "$ovr"
}

function calcref() {
    local from="$1"
    local to="$2"
    local f
    local t
    while true; do
        f="${from%%/*}"
        t="${to%%/*}"
        if [ "$f" != "$t" ]; then break; fi
        if [ "$from" = "${from/\/}" ]; then
            from=
        else
            from="${from#*/}"
        fi
        if [ "$to" = "${to/\/}" ]; then
            to=
        else
            to="${to#*/}"
        fi
        if [ -z "$from" ]; then break; fi
    done
    # to=../../../to
    local updirs=
    while [ -n "$from" ]; do
        if [ "$from" = "${from/\/}" ]; then
            from=
        else
            from="${from%/*}"
        fi
        updirs=$updirs../
    done
    local ref="$updirs$to"
    if [ -z "$ref" ]; then ref=.; fi
    echo "$ref"
}

function cpover() {
    local src="$1"
    local ovr="$2"
    local indent="$3"

    local pwdbase="${PWD##*/}"
    echo "$indent$pwdbase"
    _log2 "  src=$src ovr=$ovr"

    if [ ! -d "$src" -a ! -d "$ovr" ]; then
        return
    fi

    if [ -d "$src" ]; then
        $ln "$src"/* . 2>/dev/null
    fi
    if [ -d "$ovr" ]; then
        for ovrfile in "$ovr"/*; do
            base="${ovrfile##*/}"
            if [ -d "$ovrfile" ]; then
                # file/sym? delete and mkdir
                if [ -f "$base" -o -L "$base" ]; then
                    _log2 "ovr-mix: $ovrfile"
                    rm "$base"
                    mkdir "$base"
                # not exist? just symlink.
                elif [ ! -e "$base" ]; then
                    _log2 "ovr-only: $ovrfile"
                    $ln "$ovrfile" .
                fi
            else
                # dir? strange... skip!
                # file/sym? or not exist? overwrite.
                _log2 "ovr: $ovrfile"
                $ln "$ovrfile" .
            fi
        done
    fi

    for sub in */; do
        sub="${sub%/}"
        if [ -L "$sub" ]; then continue; fi
        if [ -d "$sub" ]; then
            pushd "$sub" >/dev/null
            cpover "../$src/$sub" "../$ovr/$sub" "$indent  "
            popd >/dev/null
        fi
    done
}

boot "$@"
