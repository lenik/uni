#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}

    . shlib-import cliboot
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    fill='                                                                        '

function setopt() {
    case "$1" in
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    for arg in "$@"; do
        if [ ! -b "$arg" ]; then
            quit "Not a block device: $arg"
        fi
        _log1 "block device parameters of $arg: "
        features "$arg"
    done
}

function feature() {
    local dev="$1"
    local arg="$2"
    local name="$3"
    local namelen=${#name}
    echo -n "    $name${fill:0:30-namelen}: "
    blockdev --get$arg "$dev"
}

function features() {
    local dev="$1"
    feature "$dev" sz           'sectors'
    feature "$dev" ro           'read-only'
    feature "$dev" discardzeroes 'discard zeroes support status'
    feature "$dev" ss           'logical block (sector) size'
    feature "$dev" pbsz         'physical block (sector) size'
    feature "$dev" iomin        'minimum I/O size'
    feature "$dev" ioopt        'optimal I/O size'
    feature "$dev" alignoff     'alignment offset in bytes'
    feature "$dev" maxsect      'max sectors per request'
    feature "$dev" bsz          'blocksize'
    feature "$dev" size64       'size in bytes'
    feature "$dev" ra           'readahead'
    feature "$dev" fra          'filesystem readahead'
}

boot "$@"
