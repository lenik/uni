#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Get byte offset of each partition in a disk"}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] DISK}

    . shlib-import cliboot
    option -p --part =INDEX "Show offset of specific partition (1-based)"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    part=

function setopt() {
    case "$1" in
        -p|--part)
            part="$2";;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    if [ $# = 0 ]; then
        die "No disk specified. "
    fi

    unit=512
    if ! SFDISK=$(which sfdisk); then
        for d in /sbin /usr/sbin /usr/local/sbin; do
            if [ -x "$d/sfdisk" ]; then
                SFDISK=$d/sfdisk
                break
            fi
        done
        [ -x "$SFDISK" ] || die "sfdisk is unavailable."
    fi

    for dev in "$@"; do
        ndev=${#dev}
        # -d: dump
        LANG=C $SFDISK -d "$dev" | while IFS=: read key line; do
            if [ "${key:0:1}" = '#' ]; then continue; fi
            if [ -z "$key" ]; then continue; fi

            case "$key" in
                label) continue;;
                label-id) continue;;
                device) continue;;
                unit)
                    # assert $line = "sectors"
                    continue;;
            esac

            index="${key:$ndev}"
            index="${index% }"
            if [ -n "$part" ] && [ "$part" != "$index" ]; then
                continue
            fi

            line="${line#*start=}"
            line="${line%%,*}"
            start="${line// }"
            if [ -z "$start" ]; then continue; fi

            offset=$((start * unit))
            if [ -z "$part" ]; then
                echo Partition[$index] $offset
            else
                echo $offset
            fi
        done
    done
}

boot "$@"
