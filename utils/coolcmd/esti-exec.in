#!/bin/bash
    . shlib-import cliboot

    RCSID='$Id: - @VERSION@ @DATE@ @TIME@ - $'
    short_opts="hqv"
    long_opts="help,quiet,verbose,version"

    CR=$'\r'
    LF=$'\n'

function version() {
    parse_id "$RCSID"
    echo "[$BASENAME] Execute and show percentage, by stdout"
    echo "Written by Lenik, Version $rcs_rev, Last updated at $rcs_date"
}

function help() {
    version
    echo
    echo "Syntax: "
    echo "    $0 [OPTION] [--] ..."
    echo
    echo "Options: "
    echo "    -q, --quiet             Repeat to get less info"
    echo "    -v, --verbose           Repeat to get more info"
    echo "    -h, --help              Show this help page"
    echo "        --version           Print the version info"
}

function setopt() {
    case "$1" in
        -h|--help)
            help; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {

    beginTime=`date`

    sha1=`echo "$PWD$LF$@" | sha1sum` || die "Failed to get sha1sum."

    sha1="${sha1:0:16}"
    percf=~/.perc/$sha1

    lastsize=-1
    [ -f "$percf" ] && lastsize=`cat "$percf"`

    _log1 "Last size = $lastsize"

    size=0
    while read line; do
        (( size++ ))

        if [ "$lastsize" = -1 ]; then
            echo -n "$size: $line$CR"
        else
            perc=$((size * 1000 / $lastsize))
            perc=${perc:0:${#perc}-1}.${perc: -1}
            echo -n "[$perc%] $line$CR"
        fi

    done < <("$@")

    _log2 "Current size = $size"

    mkdir -p ~/.perc
    echo $size >"$percf"

    endTime=`date`
    echo "Begin Time: $beginTime"
    echo "End Time: $endTime"
}

boot "$@"
