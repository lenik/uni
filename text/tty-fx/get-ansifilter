#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PACKAGE:=@PACKAGE@}
    : ${PROGRAM_TITLE:=}
    : ${PROGRAM_SYNTAX:=[OPTIONS] [--] ...}

    . shlib-import cliboot
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

function setopt() {
    case "$1" in
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            show_version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    outfile="$1"
    if [ -z "$outfile" ]; then
        quit "No output file specified."
    fi
    
    if [ -d "$outfile" ]; then
        outdir="$outfile"
        outfile="$outdir/ansifilter"
    else
        outdir="${outfile%/*}"
        if [ "$outdir" = "$outfile" ]; then
            outdir=.
        fi
    fi

    _log2 "outdir: $outdir"
    _log2 "outfile: $outfile"

    [ -d $outdir ] || quit "directory $outdir isn't existed. "

    index="http://www.andre-simon.de/zip/download.html"

    # LIKE: http://www.andre-simon.de/zip/ansifilter-1.4.tar.bz2
    _log1 "Find latest version of ansifilter"
    _log2 "    in: $index"

    url=$( grepurl -E --max-count 1 '[^"]*ansifilter-[1-9.]*.tar.*' $index) \
        || quit "No matching of ansifilter-*-tar.bz2."

    _log1 "Download $url..."
    tarball=$( wgetc -q "$url" ) || quit "Failed to download $url"
    [ -f "$tarball" ] || quit "Failed to save the url to local disk."

    abuild=/tmp/ansifilter-build$$-$RANDOM
        mkdir $abuild
        pushd $abuild >/dev/null

            tar xaf "$tarball"
            adir=ansifilter*
            cd $adir

            make || quit "Failed to build ansifilter"

        popd

        _log1 "Copy $outfile"
        cp $abuild/$adir/src/ansifilter $outfile

        _log1 "Copy $outdir/ansifilter.1"
        gunzip -c $abuild/$adir/man/ansifilter.1.gz >$outdir/ansifilter.1

        _log1 "Clean up"
        rm -fr $abuild
}

boot "$@"
