#!/bin/bash
    : ${RCSID:=$Id: - @VERSION@ @DATE@ @TIME@ - $}
    : ${PROGRAM_TITLE:="Left join (full) text files"}
    : ${PROGRAM_SYNTAX:="[OPTIONS] [--] ..."}

    . shlib-import cliboot
    option -a --all         "Print unpairable lines"
    option -e --empty=EMPTY "Replace missing input fields with EMPTY"
    option -i --ignore-case "Ignore case when comparing fields"
    option -t --delim=CHAR  "Use CHAR as input and output field sep"
    option    --check-order "Check if input is correctly sorted"
    option    --nocheck-order "Don't check if input is correctly sorted"
    option -q --quiet
    option -v --verbose
    option -h --help
    option    --version

    SELF="$0"

    all=
    empty=
    ignore_case=
    delim=
    check_order=

function setopt() {
    case "$1" in
        -a|--all)
            all=1;;
        -e|--empty)
            empty="$2";;
        -i|--ignore-case)
            ignore_case=1;;
        -t|--delim)
            delim="$2";;
        --check-order)
            check_order=1;;
        --nocheck-oder)
            check_order=0;;
        -h|--help)
            help $1; exit;;
        -q|--quiet)
            LOGLEVEL=$((LOGLEVEL - 1));;
        -v|--verbose)
            LOGLEVEL=$((LOGLEVEL + 1));;
        --version)
            version; exit;;
        *)
            quit "invalid option: $1";;
    esac
}

function main() {
    join_opts=()
    n=0
    # if [ "$all" = 1 ];          then join_opts[n++]=-a1; fi
    if [ -n "$empty" ];         then join_opts[n++]="-e$empty"; fi
    if [ "$ignore_case" = 1 ];  then join_opts[n++]=-i; fi
    if [ -n "$delim" ];         then join_opts[n++]="-t$delim"; fi
    if [ "$check_order" = 1 ];  then join_opts[n++]=--check-order; fi
    if [ "$check_order" = 0 ];  then join_opts[n++]=--nocheck-order; fi

    case $# in
        0|1)
            echo "At least 2 files to join" >&2
            exit 1
            ;;
        2)
            join "${join_opts[@]}" "$@"
            join -v1 "${join_opts[@]}" "$@" | sed -e s/:/::/
            ;;
        *)
            echo ">> $@"
            first="$1"
            second="$2"
            shift 2
            join "${join_opts[@]}" "$first" "$second" | $SELF "${join_opts[@]}" - "$@"
            ;;
    esac
}

boot "$@"
